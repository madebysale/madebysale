/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2022 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import './button.less';
import type { IUIButton, IUIButtonState, IUIButtonStatePartial, IViewBased, ButtonVariant } from 'jodit/types';
import { UIElement } from 'jodit/core/ui/element';
export declare const UIButtonState: () => IUIButtonState;
export declare class UIButton extends UIElement implements IUIButton {
    className(): string;
    readonly isButton: true;
    readonly state: IUIButtonState;
    setState(state: IUIButtonStatePartial): this;
    text: HTMLElement;
    icon: HTMLElement;
    protected onChangeSize(): void;
    protected onChangeType(): void;
    protected updateSize(): void;
    protected onChangeStatus(): void;
    protected onChangeText(): void;
    protected onChangeTextSetMode(): void;
    protected onChangeDisabled(): void;
    protected onChangeActivated(): void;
    protected onChangeName(): void;
    protected onChangeTooltip(): void;
    protected onChangeTabIndex(): void;
    protected onChangeIcon(): void;
    focus(): void;
    isFocused(): boolean;
    protected createContainer(): HTMLElement;
    constructor(jodit: IViewBased, state?: IUIButtonStatePartial);
    destruct(): any;
    private readonly actionHandlers;
    onAction(callback: (originalEvent: MouseEvent) => void): this;
    private onActionFire;
}
export declare function Button(jodit: IViewBased, icon: string): IUIButton;
export declare function Button(jodit: IViewBased, icon: string, text?: string): IUIButton;
export declare function Button(jodit: IViewBased, icon: string, text: string, variant?: ButtonVariant): IUIButton;
export declare function Button(jodit: IViewBased, state: IUIButtonStatePartial, variant?: ButtonVariant): IUIButton;
