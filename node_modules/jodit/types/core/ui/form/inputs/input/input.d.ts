/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2022 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import './input.less';
import type { IUIInput, IUIInputValidator, IViewBased } from 'jodit/types';
import { UIElement } from 'jodit/core/ui/element';
export declare class UIInput extends UIElement implements IUIInput {
    className(): string;
    nativeInput: IUIInput['nativeInput'];
    private label;
    private icon;
    private clearButton;
    private wrapper;
    static defaultState: IUIInput['state'];
    state: IUIInput['state'];
    protected onChangeClear(): void;
    protected onChangeClassName(ignore?: unknown, oldClassName?: string): void;
    protected onChangeState(): void;
    protected updateValidators(): void;
    private __errorBox;
    set error(value: string);
    get value(): string;
    set value(value: string);
    protected onChangeStateValue(): void;
    protected onChangeValue(): void;
    protected validators: Set<IUIInputValidator>;
    validate(): boolean;
    protected createContainer(options: Partial<this['state']>): HTMLElement;
    protected createNativeInput(options?: Partial<this['state']>): IUIInput['nativeInput'];
    constructor(jodit: IViewBased, options?: Partial<IUIInput['state']>);
    focus(): void;
    get isFocused(): boolean;
    private onChangeFocus;
}
