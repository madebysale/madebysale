/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2022 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import './popup.less';
import type { IBound, IPopup, IUIElement, IViewBased, PopupStrategy } from 'jodit/types';
import { UIElement } from 'jodit/core/ui/element';
declare type getBoundFunc = () => IBound;
export declare class Popup extends UIElement implements IPopup {
    readonly smart: boolean;
    className(): string;
    isOpened: boolean;
    strategy: PopupStrategy;
    viewBound: () => IBound;
    private targetBound;
    private childrenPopups;
    updateParentElement(target: IUIElement): this;
    setContent(content: IUIElement | HTMLElement | string): this;
    open(getBound: getBoundFunc, keepPosition?: boolean, parentContainer?: HTMLElement): this;
    private calculateZIndex;
    protected getKeepBound(getBound: getBoundFunc): getBoundFunc;
    updatePosition(): this;
    throttleUpdatePosition(): void;
    private calculatePosition;
    private static boxInView;
    close(): this;
    private closeOnOutsideClick;
    isOwnClick(e: MouseEvent): boolean;
    private addGlobalListeners;
    private removeGlobalListeners;
    setZIndex(index: number | string): void;
    constructor(jodit: IViewBased, smart?: boolean);
    destruct(): any;
}
export {};
