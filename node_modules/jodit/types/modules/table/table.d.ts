/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2022 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import type { ICreate, IJodit } from 'jodit/types';
import { ViewComponent } from 'jodit/core/component';
export declare class Table extends ViewComponent<IJodit> {
    className(): string;
    private selected;
    private static selectedByTable;
    private recalculateStyles;
    addSelection(td: HTMLTableCellElement): void;
    removeSelection(td: HTMLTableCellElement): void;
    getAllSelectedCells(): HTMLTableCellElement[];
    static getSelectedCellsByTable(table: HTMLTableElement): HTMLTableCellElement[];
    destruct(): any;
    static getRowsCount(table: HTMLTableElement): number;
    static getColumnsCount(table: HTMLTableElement): number;
    static formalMatrix(table: HTMLTableElement, callback?: (cell: HTMLTableCellElement, row: number, col: number, colSpan: number, rowSpan: number) => false | void): HTMLTableCellElement[][];
    static formalCoordinate(table: HTMLTableElement, cell: HTMLTableCellElement, max?: boolean): number[];
    static appendRow(table: HTMLTableElement, line: false | HTMLTableRowElement, after: boolean, create: ICreate): void;
    static removeRow(table: HTMLTableElement, rowIndex: number): void;
    static appendColumn(table: HTMLTableElement, j: number, after: boolean, create: ICreate): void;
    static removeColumn(table: HTMLTableElement, j: number): void;
    static getSelectedBound(table: HTMLTableElement, selectedCells: HTMLTableCellElement[]): number[][];
    static normalizeTable(table: HTMLTableElement): void;
    static mergeSelected(table: HTMLTableElement, jodit: IJodit): void;
    static splitHorizontal(table: HTMLTableElement, jodit: IJodit): void;
    static splitVertical(table: HTMLTableElement, jodit: IJodit): void;
    static setColumnWidthByDelta(table: HTMLTableElement, column: number, delta: number, noUnmark: boolean, marked: HTMLTableCellElement[]): void;
    private static mark;
    private static unmark;
}
