/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2022 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import './styles';
import type { IFileBrowser, IFileBrowserCallBackData, IFileBrowserOptions, IFileBrowserState, IFileBrowserDataProvider, IStorage, IUploader, CanUndef } from 'jodit/types';
import { FileBrowserFiles, FileBrowserTree } from './ui';
import { Dlgs } from 'jodit/core/traits';
import { ViewWithToolbar } from 'jodit/core/view/view-with-toolbar';
import './config';
export interface FileBrowser extends Dlgs {
}
export declare class FileBrowser extends ViewWithToolbar implements IFileBrowser, Dlgs {
    className(): string;
    private browser;
    private status_line;
    tree: FileBrowserTree;
    files: FileBrowserFiles;
    state: IFileBrowserState & import("jodit/types").IObservable;
    dataProvider: IFileBrowserDataProvider;
    private onSelect;
    private errorHandler;
    OPTIONS: IFileBrowserOptions;
    private _dialog;
    storage: IStorage;
    uploader: IUploader;
    get isOpened(): boolean;
    status(message: string | Error, success?: boolean): void;
    close: () => void;
    open(callback?: CanUndef<(_: IFileBrowserCallBackData) => void>, onlyImages?: boolean): Promise<void>;
    private initUploader;
    constructor(options?: IFileBrowserOptions);
    private proxyDialogEvents;
    destruct(): void;
}
export declare function isFileBrowserFilesItem(target: unknown): boolean;
