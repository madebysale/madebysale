/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2022 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import './dialog.less';
import type { IToolbarCollection, IDialog, Content, IDialogOptions } from 'jodit/types';
import { ViewWithToolbar } from 'jodit/core/view/view-with-toolbar';
declare module 'jodit/config' {
    interface Config {
        dialog: IDialogOptions;
    }
}
export declare class Dialog extends ViewWithToolbar implements IDialog {
    className(): string;
    private readonly resizer;
    toolbar: IToolbarCollection;
    private offsetX?;
    private offsetY?;
    private get destination();
    private destroyAfterClose;
    private moved;
    private resizable;
    private draggable;
    private startX;
    private startY;
    private startPoint;
    private lockSelect;
    private unlockSelect;
    private setElements;
    private onMouseUp;
    private onHeaderMouseDown;
    private onMouseMove;
    private onEsc;
    private onResize;
    private onResizerMouseDown;
    private addGlobalResizeListeners;
    private removeGlobalResizeListeners;
    OPTIONS: IDialogOptions;
    readonly dialog: HTMLElement;
    workplace: HTMLDivElement;
    private readonly dialogbox_header;
    private readonly dialogbox_content;
    private readonly dialogbox_footer;
    private readonly dialogbox_toolbar;
    setSize(w?: number | string, h?: number | string): this;
    calcAutoSize(): this;
    setPosition(x?: number, y?: number): this;
    setHeader(content: Content): this;
    setContent(content: Content): this;
    setFooter(content: Content): this;
    getZIndex(): number;
    getMaxZIndexDialog(): IDialog;
    setMaxZIndex(): void;
    toggleFullSize(isFullSize?: boolean): void;
    open(destroyAfterClose: boolean): this;
    open(destroyAfterClose: boolean, modal: boolean): this;
    open(content?: Content, title?: Content, destroyAfterClose?: boolean, modal?: boolean): this;
    private isModal;
    setModal(modal: undefined | boolean): this;
    isOpened: boolean;
    close(): this;
    constructor(options?: Partial<IDialogOptions>);
    protected buildToolbar(): void;
    destruct(): void;
}
