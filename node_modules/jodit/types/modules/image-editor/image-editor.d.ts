/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2022 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import './image-editor.less';
import type { ImageEditorActionBox, ImageEditorOptions, IFileBrowserDataProvider, IDialog, IViewWithToolbar, IDlgs } from 'jodit/types';
import { ViewComponent } from 'jodit/core/component';
import './config';
interface onSave {
    (newname: string | void, box: ImageEditorActionBox, success: () => void, failed: (error: Error) => void): void;
}
export declare class ImageEditor extends ViewComponent<IViewWithToolbar & IDlgs> {
    className(): string;
    private resizeUseRatio;
    private cropUseRatio;
    private readonly _dialog;
    private image;
    private cropImage;
    private clicked;
    private target;
    private start_x;
    private start_y;
    private top_x;
    private top_y;
    private width;
    private height;
    private activeTab;
    private naturalWidth;
    private naturalHeight;
    private ratio;
    private new_h;
    private new_w;
    private diff_x;
    private diff_y;
    private readonly buttons;
    private readonly editor;
    private readonly resize_box;
    private readonly crop_box;
    private sizes;
    private readonly resizeHandler;
    private readonly cropHandler;
    private readonly cropBox;
    private readonly resizeBox;
    private static calcValueByPercent;
    private calcCropBox;
    private showCrop;
    private updateCropBox;
    private updateResizeBox;
    private setHandlers;
    private onTitleModeClick;
    private onChangeSizeInput;
    private onResizeHandleMouseDown;
    private onGlobalMouseUp;
    private onGlobalMouseMove;
    options: ImageEditorOptions;
    get o(): this['options'];
    onSave: (name: void | string, data: ImageEditorActionBox, hide: () => void, failed: (e: Error) => void) => void;
    hide(): void;
    open(url: string, save: onSave): Promise<IDialog>;
    constructor(editor: IViewWithToolbar & IDlgs);
    destruct(): any;
}
export declare function openImageEditor(this: IViewWithToolbar & {
    dataProvider: IFileBrowserDataProvider;
}, href: string, name: string, path: string, source: string, onSuccess?: () => void, onFailed?: (error: Error) => void): Promise<IDialog>;
export {};
