/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2022 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import type { IJodit, Nullable, IPlugin } from 'jodit/types';
import { LazyWalker } from 'jodit/core/dom';
import { Plugin } from 'jodit/core/plugin';
import './config';
export declare class search extends Plugin {
    buttons: IPlugin['buttons'];
    private get ui();
    private updateCounters;
    protected onPressReplaceButton(): void;
    private tryScrollToElement;
    protected calcCounts(query: string): Promise<number>;
    findAndReplace(query: string): Promise<boolean>;
    private previousQuery;
    private drawPromise;
    findAndSelect(query: string, next: boolean): Promise<boolean>;
    private findCurrentIndexInRanges;
    walker: Nullable<LazyWalker>;
    walkerCount: Nullable<LazyWalker>;
    private cache;
    private isValidCache;
    private find;
    private wrapFrameRequest;
    private drawSelectionRanges;
    protected onAfterGetValueFromEditor(data: {
        value: string;
    }): void;
    afterInit(editor: IJodit): void;
    beforeDestruct(jodit: IJodit): void;
}
