{"ast":null,"code":"/**\n * SimpleBar.js - v5.3.8\n * Scrollbars, simpler.\n * https://grsmto.github.io/simplebar/\n *\n * Made by Adrien Denat from a fork by Jonathan Nicol\n * Under MIT License\n */\nimport 'core-js/modules/es.parse-int.js';\nimport 'core-js/modules/es.object.assign.js';\nimport 'core-js/modules/es.array.filter.js';\nimport 'core-js/modules/es.object.to-string.js';\nimport 'core-js/modules/es.array.iterator.js';\nimport 'core-js/modules/es.string.iterator.js';\nimport 'core-js/modules/es.weak-map.js';\nimport 'core-js/modules/web.dom-collections.iterator.js';\nimport throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport canUseDOM from 'can-use-dom';\nimport 'core-js/modules/es.array.reduce.js';\nimport 'core-js/modules/es.regexp.exec.js';\nimport 'core-js/modules/es.string.match.js';\nimport 'core-js/modules/es.string.replace.js';\n\nfunction getElementWindow(element) {\n  if (!element || !element.ownerDocument || !element.ownerDocument.defaultView) {\n    return window;\n  }\n\n  return element.ownerDocument.defaultView;\n}\n\nfunction getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n\n  return element.ownerDocument;\n}\n\nvar cachedScrollbarWidth = null;\nvar cachedDevicePixelRatio = null;\n\nif (canUseDOM) {\n  window.addEventListener('resize', function () {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\n\nfunction scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    var document = getElementDocument(el);\n\n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n\n    var body = document.body;\n    var box = document.createElement('div');\n    box.classList.add('simplebar-hide-scrollbar');\n    body.appendChild(box);\n    var width = box.getBoundingClientRect().right;\n    body.removeChild(box);\n    cachedScrollbarWidth = width;\n  }\n\n  return cachedScrollbarWidth;\n}\n\nvar SimpleBar = /*#__PURE__*/function () {\n  function SimpleBar(element, options) {\n    var _this = this;\n\n    this.onScroll = function () {\n      var elWindow = getElementWindow(_this.el);\n\n      if (!_this.scrollXTicking) {\n        elWindow.requestAnimationFrame(_this.scrollX);\n        _this.scrollXTicking = true;\n      }\n\n      if (!_this.scrollYTicking) {\n        elWindow.requestAnimationFrame(_this.scrollY);\n        _this.scrollYTicking = true;\n      }\n    };\n\n    this.scrollX = function () {\n      if (_this.axis.x.isOverflowing) {\n        _this.showScrollbar('x');\n\n        _this.positionScrollbar('x');\n      }\n\n      _this.scrollXTicking = false;\n    };\n\n    this.scrollY = function () {\n      if (_this.axis.y.isOverflowing) {\n        _this.showScrollbar('y');\n\n        _this.positionScrollbar('y');\n      }\n\n      _this.scrollYTicking = false;\n    };\n\n    this.onMouseEnter = function () {\n      _this.showScrollbar('x');\n\n      _this.showScrollbar('y');\n    };\n\n    this.onMouseMove = function (e) {\n      _this.mouseX = e.clientX;\n      _this.mouseY = e.clientY;\n\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        _this.onMouseMoveForAxis('x');\n      }\n\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        _this.onMouseMoveForAxis('y');\n      }\n    };\n\n    this.onMouseLeave = function () {\n      _this.onMouseMove.cancel();\n\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        _this.onMouseLeaveForAxis('x');\n      }\n\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        _this.onMouseLeaveForAxis('y');\n      }\n\n      _this.mouseX = -1;\n      _this.mouseY = -1;\n    };\n\n    this.onWindowResize = function () {\n      // Recalculate scrollbarWidth in case it's a zoom\n      _this.scrollbarWidth = _this.getScrollbarWidth();\n\n      _this.hideNativeScrollbar();\n    };\n\n    this.hideScrollbars = function () {\n      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n\n      if (!_this.isWithinBounds(_this.axis.y.track.rect)) {\n        _this.axis.y.scrollbar.el.classList.remove(_this.classNames.visible);\n\n        _this.axis.y.isVisible = false;\n      }\n\n      if (!_this.isWithinBounds(_this.axis.x.track.rect)) {\n        _this.axis.x.scrollbar.el.classList.remove(_this.classNames.visible);\n\n        _this.axis.x.isVisible = false;\n      }\n    };\n\n    this.onPointerEvent = function (e) {\n      var isWithinTrackXBounds, isWithinTrackYBounds;\n      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        isWithinTrackXBounds = _this.isWithinBounds(_this.axis.x.track.rect);\n      }\n\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        isWithinTrackYBounds = _this.isWithinBounds(_this.axis.y.track.rect);\n      } // If any pointer event is called on the scrollbar\n\n\n      if (isWithinTrackXBounds || isWithinTrackYBounds) {\n        // Preventing the event's default action stops text being\n        // selectable during the drag.\n        e.preventDefault(); // Prevent event leaking\n\n        e.stopPropagation();\n\n        if (e.type === 'mousedown') {\n          if (isWithinTrackXBounds) {\n            _this.axis.x.scrollbar.rect = _this.axis.x.scrollbar.el.getBoundingClientRect();\n\n            if (_this.isWithinBounds(_this.axis.x.scrollbar.rect)) {\n              _this.onDragStart(e, 'x');\n            } else {\n              _this.onTrackClick(e, 'x');\n            }\n          }\n\n          if (isWithinTrackYBounds) {\n            _this.axis.y.scrollbar.rect = _this.axis.y.scrollbar.el.getBoundingClientRect();\n\n            if (_this.isWithinBounds(_this.axis.y.scrollbar.rect)) {\n              _this.onDragStart(e, 'y');\n            } else {\n              _this.onTrackClick(e, 'y');\n            }\n          }\n        }\n      }\n    };\n\n    this.drag = function (e) {\n      var eventOffset;\n      var track = _this.axis[_this.draggedAxis].track;\n      var trackSize = track.rect[_this.axis[_this.draggedAxis].sizeAttr];\n      var scrollbar = _this.axis[_this.draggedAxis].scrollbar;\n      var contentSize = _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollSizeAttr];\n      var hostSize = parseInt(_this.elStyles[_this.axis[_this.draggedAxis].sizeAttr], 10);\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (_this.draggedAxis === 'y') {\n        eventOffset = e.pageY;\n      } else {\n        eventOffset = e.pageX;\n      } // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n\n\n      var dragPos = eventOffset - track.rect[_this.axis[_this.draggedAxis].offsetAttr] - _this.axis[_this.draggedAxis].dragOffset; // Convert the mouse position into a percentage of the scrollbar height/width.\n\n      var dragPerc = dragPos / (trackSize - scrollbar.size); // Scroll the content by the same percentage.\n\n      var scrollPos = dragPerc * (contentSize - hostSize); // Fix browsers inconsistency on RTL\n\n      if (_this.draggedAxis === 'x') {\n        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? scrollPos - (trackSize + scrollbar.size) : scrollPos;\n        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollPos : scrollPos;\n      }\n\n      _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollOffsetAttr] = scrollPos;\n    };\n\n    this.onEndDrag = function (e) {\n      var elDocument = getElementDocument(_this.el);\n      var elWindow = getElementWindow(_this.el);\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.el.classList.remove(_this.classNames.dragging);\n\n      elDocument.removeEventListener('mousemove', _this.drag, true);\n      elDocument.removeEventListener('mouseup', _this.onEndDrag, true);\n      _this.removePreventClickId = elWindow.setTimeout(function () {\n        // Remove these asynchronously so we still suppress click events\n        // generated simultaneously with mouseup.\n        elDocument.removeEventListener('click', _this.preventClick, true);\n        elDocument.removeEventListener('dblclick', _this.preventClick, true);\n        _this.removePreventClickId = null;\n      });\n    };\n\n    this.preventClick = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = Object.assign({}, SimpleBar.defaultOptions, options);\n    this.classNames = Object.assign({}, SimpleBar.defaultOptions.classNames, this.options.classNames);\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null; // Don't re-instantiate over an existing one\n\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(this.hideScrollbars.bind(this), this.options.timeout);\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n    this.init();\n  }\n  /**\n   * Static properties\n   */\n\n  /**\n   * Helper to fix browsers inconsistency on RTL:\n   *  - Firefox inverts the scrollbar initial position\n   *  - IE11 inverts both scrollbar position and scrolling offset\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n   */\n\n\n  SimpleBar.getRtlHelpers = function getRtlHelpers() {\n    var dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML = '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    var scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    var dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    var dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    var dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    var dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(dummyContainerChild);\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left && dummyContainerChildOffset.left - dummyContainerScrollOffsetAfterScroll.left !== 0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  };\n\n  SimpleBar.getOffset = function getOffset(el) {\n    var rect = el.getBoundingClientRect();\n    var elDocument = getElementDocument(el);\n    var elWindow = getElementWindow(el);\n    return {\n      top: rect.top + (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left: rect.left + (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  };\n\n  var _proto = SimpleBar.prototype;\n\n  _proto.init = function init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this); // We stop here on server-side\n\n    if (canUseDOM) {\n      this.initDOM();\n      this.setAccessibilityAttributes();\n      this.scrollbarWidth = this.getScrollbarWidth();\n      this.recalculate();\n      this.initListeners();\n    }\n  };\n\n  _proto.initDOM = function initDOM() {\n    var _this2 = this; // make sure this element doesn't have the elements yet\n\n\n    if (Array.prototype.filter.call(this.el.children, function (child) {\n      return child.classList.contains(_this2.classNames.wrapper);\n    }).length) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(\".\" + this.classNames.wrapper);\n      this.contentWrapperEl = this.options.scrollableNode || this.el.querySelector(\".\" + this.classNames.contentWrapper);\n      this.contentEl = this.options.contentNode || this.el.querySelector(\".\" + this.classNames.contentEl);\n      this.offsetEl = this.el.querySelector(\".\" + this.classNames.offset);\n      this.maskEl = this.el.querySelector(\".\" + this.classNames.mask);\n      this.placeholderEl = this.findChild(this.wrapperEl, \".\" + this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\".\" + this.classNames.heightAutoObserverWrapperEl);\n      this.heightAutoObserverEl = this.el.querySelector(\".\" + this.classNames.heightAutoObserverEl);\n      this.axis.x.track.el = this.findChild(this.el, \".\" + this.classNames.track + \".\" + this.classNames.horizontal);\n      this.axis.y.track.el = this.findChild(this.el, \".\" + this.classNames.track + \".\" + this.classNames.vertical);\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(this.classNames.heightAutoObserverWrapperEl);\n      this.heightAutoObserverEl.classList.add(this.classNames.heightAutoObserverEl);\n\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      var track = document.createElement('div');\n      var scrollbar = document.createElement('div');\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n      track.appendChild(scrollbar);\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\".\" + this.classNames.scrollbar);\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\".\" + this.classNames.scrollbar);\n\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n\n    this.el.setAttribute('data-simplebar', 'init');\n  };\n\n  _proto.setAccessibilityAttributes = function setAccessibilityAttributes() {\n    var ariaLabel = this.options.ariaLabel || 'scrollable content';\n    this.contentWrapperEl.setAttribute('tabindex', '0');\n    this.contentWrapperEl.setAttribute('role', 'region');\n    this.contentWrapperEl.setAttribute('aria-label', ariaLabel);\n  };\n\n  _proto.initListeners = function initListeners() {\n    var _this3 = this;\n\n    var elWindow = getElementWindow(this.el); // Event listeners\n\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(function (e) {\n      _this3.el.addEventListener(e, _this3.onPointerEvent, true);\n    });\n    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {\n      _this3.el.addEventListener(e, _this3.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll); // Browser zoom triggers a window resize\n\n    elWindow.addEventListener('resize', this.onWindowResize); // Hack for https://github.com/WICG/ResizeObserver/issues/38\n\n    var resizeObserverStarted = false;\n    var resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n    this.resizeObserver = new resizeObserver(function () {\n      if (!resizeObserverStarted) return;\n\n      _this3.recalculate();\n    });\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n    elWindow.requestAnimationFrame(function () {\n      resizeObserverStarted = true;\n    }); // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  };\n\n  _proto.recalculate = function recalculate() {\n    var elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n    var isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    var isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    var contentElOffsetWidth = this.contentEl.offsetWidth;\n    var contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n    var elOverflowX = this.elStyles.overflowX;\n    var elOverflowY = this.elStyles.overflowY;\n    this.contentEl.style.padding = this.elStyles.paddingTop + \" \" + this.elStyles.paddingRight + \" \" + this.elStyles.paddingBottom + \" \" + this.elStyles.paddingLeft;\n    this.wrapperEl.style.margin = \"-\" + this.elStyles.paddingTop + \" -\" + this.elStyles.paddingRight + \" -\" + this.elStyles.paddingBottom + \" -\" + this.elStyles.paddingLeft;\n    var contentElScrollHeight = this.contentEl.scrollHeight;\n    var contentElScrollWidth = this.contentEl.scrollWidth;\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%'; // Determine placeholder size\n\n    this.placeholderEl.style.width = isWidthAuto ? contentElOffsetWidth + \"px\" : 'auto';\n    this.placeholderEl.style.height = contentElScrollHeight + \"px\";\n    var contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing = contentElScrollHeight > contentWrapperElOffsetHeight; // Set isOverflowing to false if user explicitely set hidden overflow\n\n    this.axis.x.isOverflowing = elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing = elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n    this.axis.x.forceVisible = this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible = this.options.forceVisible === 'y' || this.options.forceVisible === true;\n    this.hideNativeScrollbar(); // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n\n    var offsetForXScrollbar = this.axis.x.isOverflowing ? this.scrollbarWidth : 0;\n    var offsetForYScrollbar = this.axis.y.isOverflowing ? this.scrollbarWidth : 0;\n    this.axis.x.isOverflowing = this.axis.x.isOverflowing && contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing = this.axis.y.isOverflowing && contentElScrollHeight > contentWrapperElOffsetHeight - offsetForXScrollbar;\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n    this.axis.x.scrollbar.el.style.width = this.axis.x.scrollbar.size + \"px\";\n    this.axis.y.scrollbar.el.style.height = this.axis.y.scrollbar.size + \"px\";\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n  /**\n   * Calculate scrollbar size\n   */\n  ;\n\n  _proto.getScrollbarSize = function getScrollbarSize(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n\n    var contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    var scrollbarSize;\n    var scrollbarRatio = trackSize / contentSize; // Calculate new height/position of drag handle.\n\n    scrollbarSize = Math.max(~~(scrollbarRatio * trackSize), this.options.scrollbarMinSize);\n\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n\n    return scrollbarSize;\n  };\n\n  _proto.positionScrollbar = function positionScrollbar(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n\n    var contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    var scrollbar = this.axis[axis].scrollbar;\n    var scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollOffset : scrollOffset;\n    var scrollPourcent = scrollOffset / (contentSize - hostSize);\n    var handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? handleOffset + (trackSize - scrollbar.size) : handleOffset;\n    scrollbar.el.style.transform = axis === 'x' ? \"translate3d(\" + handleOffset + \"px, 0, 0)\" : \"translate3d(0, \" + handleOffset + \"px, 0)\";\n  };\n\n  _proto.toggleTrackVisibility = function toggleTrackVisibility(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    var track = this.axis[axis].track.el;\n    var scrollbar = this.axis[axis].scrollbar.el;\n\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    } // Even if forceVisible is enabled, scrollbar itself should be hidden\n\n\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  };\n\n  _proto.hideNativeScrollbar = function hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? \"-\" + this.scrollbarWidth + \"px\" : 0;\n    this.offsetEl.style.bottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? \"-\" + this.scrollbarWidth + \"px\" : 0;\n  }\n  /**\n   * On scroll event handling\n   */\n  ;\n\n  _proto.onMouseMoveForAxis = function onMouseMoveForAxis(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    this.axis[axis].track.rect = this.axis[axis].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();\n    var isWithinScrollbarBoundsX = this.isWithinBounds(this.axis[axis].scrollbar.rect);\n\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  };\n\n  _proto.onMouseLeaveForAxis = function onMouseLeaveForAxis(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  };\n  /**\n   * Show scrollbar\n   */\n\n\n  _proto.showScrollbar = function showScrollbar(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    var scrollbar = this.axis[axis].scrollbar.el;\n\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n  /**\n   * Hide Scrollbar\n   */\n  ;\n  /**\n   * on scrollbar handle drag movement starts\n   */\n\n\n  _proto.onDragStart = function onDragStart(e, axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    var elDocument = getElementDocument(this.el);\n    var elWindow = getElementWindow(this.el);\n    var scrollbar = this.axis[axis].scrollbar; // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n\n    var eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset = eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n    this.el.classList.add(this.classNames.dragging);\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n  /**\n   * Drag scrollbar handle\n   */\n  ;\n\n  _proto.onTrackClick = function onTrackClick(e, axis) {\n    var _this4 = this;\n\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    if (!this.options.clickOnTrack) return;\n    var elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();\n    var scrollbar = this.axis[axis].scrollbar;\n    var scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    var scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    var t = axis === 'y' ? this.mouseY - scrollbarOffset : this.mouseX - scrollbarOffset;\n    var dir = t < 0 ? -1 : 1;\n    var scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n\n    var scrollTo = function scrollTo() {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          var _this4$contentWrapper;\n\n          scrolled -= _this4.options.clickOnTrackSpeed;\n\n          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper = {}, _this4$contentWrapper[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper));\n\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          var _this4$contentWrapper2;\n\n          scrolled += _this4.options.clickOnTrackSpeed;\n\n          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper2 = {}, _this4$contentWrapper2[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper2));\n\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n\n    scrollTo();\n  }\n  /**\n   * Getter for content element\n   */\n  ;\n\n  _proto.getContentElement = function getContentElement() {\n    return this.contentEl;\n  }\n  /**\n   * Getter for original scrolling element\n   */\n  ;\n\n  _proto.getScrollElement = function getScrollElement() {\n    return this.contentWrapperEl;\n  };\n\n  _proto.getScrollbarWidth = function getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar').display === 'none' || 'scrollbarWidth' in document.documentElement.style || '-ms-overflow-style' in document.documentElement.style) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  };\n\n  _proto.removeListeners = function removeListeners() {\n    var _this5 = this;\n\n    var elWindow = getElementWindow(this.el); // Event listeners\n\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(function (e) {\n      _this5.el.removeEventListener(e, _this5.onPointerEvent, true);\n    });\n    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {\n      _this5.el.removeEventListener(e, _this5.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n\n    elWindow.removeEventListener('resize', this.onWindowResize);\n\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    } // Cancel all debounced functions\n\n\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n  /**\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\n   */\n  ;\n\n  _proto.unMount = function unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n  /**\n   * Check if mouse is within bounds\n   */\n  ;\n\n  _proto.isWithinBounds = function isWithinBounds(bbox) {\n    return this.mouseX >= bbox.left && this.mouseX <= bbox.left + bbox.width && this.mouseY >= bbox.top && this.mouseY <= bbox.top + bbox.height;\n  }\n  /**\n   * Find element children matches query\n   */\n  ;\n\n  _proto.findChild = function findChild(el, query) {\n    var matches = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, function (child) {\n      return matches.call(child, query);\n    })[0];\n  };\n\n  return SimpleBar;\n}();\n\nSimpleBar.defaultOptions = {\n  autoHide: true,\n  forceVisible: false,\n  clickOnTrack: true,\n  clickOnTrackSpeed: 40,\n  classNames: {\n    contentEl: 'simplebar-content',\n    contentWrapper: 'simplebar-content-wrapper',\n    offset: 'simplebar-offset',\n    mask: 'simplebar-mask',\n    wrapper: 'simplebar-wrapper',\n    placeholder: 'simplebar-placeholder',\n    scrollbar: 'simplebar-scrollbar',\n    track: 'simplebar-track',\n    heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n    heightAutoObserverEl: 'simplebar-height-auto-observer',\n    visible: 'simplebar-visible',\n    horizontal: 'simplebar-horizontal',\n    vertical: 'simplebar-vertical',\n    hover: 'simplebar-hover',\n    dragging: 'simplebar-dragging'\n  },\n  scrollbarMinSize: 25,\n  scrollbarMaxSize: 0,\n  timeout: 1000\n};\nSimpleBar.instances = new WeakMap();\nexport default SimpleBar;","map":{"version":3,"mappings":"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","names":["getElementWindow","element","ownerDocument","defaultView","window","getElementDocument","document","cachedScrollbarWidth","cachedDevicePixelRatio","canUseDOM","addEventListener","devicePixelRatio","scrollbarWidth","el","body","box","createElement","classList","add","appendChild","width","getBoundingClientRect","right","removeChild","SimpleBar","options","onScroll","elWindow","_this","scrollXTicking","requestAnimationFrame","scrollX","scrollYTicking","scrollY","axis","x","isOverflowing","showScrollbar","positionScrollbar","y","onMouseEnter","onMouseMove","mouseX","e","clientX","mouseY","clientY","forceVisible","onMouseMoveForAxis","onMouseLeave","cancel","onMouseLeaveForAxis","onWindowResize","getScrollbarWidth","hideNativeScrollbar","hideScrollbars","track","rect","isWithinBounds","scrollbar","remove","classNames","visible","isVisible","onPointerEvent","isWithinTrackXBounds","isWithinTrackYBounds","preventDefault","stopPropagation","type","onDragStart","onTrackClick","drag","eventOffset","draggedAxis","trackSize","sizeAttr","contentSize","contentWrapperEl","scrollSizeAttr","hostSize","parseInt","elStyles","pageY","pageX","dragPos","offsetAttr","dragOffset","dragPerc","size","scrollPos","isRtl","getRtlHelpers","isRtlScrollbarInverted","isRtlScrollingInverted","scrollOffsetAttr","onEndDrag","elDocument","dragging","removeEventListener","removePreventClickId","setTimeout","preventClick","minScrollbarWidth","defaultOptions","offsetSizeAttr","overflowAttr","instances","has","recalculate","throttle","bind","debounce","timeout","leading","memoize","init","dummyDiv","innerHTML","scrollbarDummyEl","firstElementChild","dummyContainerChild","scrollLeft","dummyContainerOffset","getOffset","dummyContainerChildOffset","dummyContainerScrollOffsetAfterScroll","left","top","pageYOffset","documentElement","scrollTop","pageXOffset","set","initDOM","setAccessibilityAttributes","initListeners","Array","prototype","filter","call","children","child","contains","_this2","wrapper","length","wrapperEl","querySelector","scrollableNode","contentWrapper","contentEl","contentNode","offsetEl","offset","maskEl","mask","placeholderEl","findChild","placeholder","heightAutoObserverWrapperEl","heightAutoObserverEl","horizontal","vertical","firstChild","cloneNode","autoHide","setAttribute","ariaLabel","forEach","_this3","capture","passive","resizeObserverStarted","resizeObserver","ResizeObserver","observe","mutationObserver","MutationObserver","childList","subtree","characterData","getComputedStyle","direction","isHeightAuto","offsetHeight","isWidthAuto","offsetWidth","contentElOffsetWidth","contentWrapperElOffsetWidth","elOverflowX","overflowX","elOverflowY","overflowY","style","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","contentElScrollHeight","scrollHeight","contentElScrollWidth","scrollWidth","height","contentWrapperElOffsetHeight","offsetForXScrollbar","offsetForYScrollbar","getScrollbarSize","toggleTrackVisibility","scrollbarSize","scrollbarRatio","Math","max","scrollbarMinSize","scrollbarMaxSize","min","scrollOffset","scrollPourcent","handleOffset","transform","visibility","display","bottom","isWithinScrollbarBoundsX","hover","clearTimeout","clickOnTrack","scrollbarOffset","scrolled","t","dir","scrollSize","scrollTo","_this4","clickOnTrackSpeed","getContentElement","getScrollElement","removeListeners","_this5","disconnect","unMount","delete","bbox","query","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","WeakMap"],"sources":["../src/helpers.js","../src/scrollbar-width.js","../src/simplebar.js"],"sourcesContent":["// Helper function to retrieve options from element attributes\nexport const getOptions = function(obj) {\n  const options = Array.prototype.reduce.call(\n    obj,\n    (acc, attribute) => {\n      const option = attribute.name.match(/data-simplebar-(.+)/);\n      if (option) {\n        const key = option[1].replace(/\\W+(.)/g, (x, chr) => chr.toUpperCase());\n        switch (attribute.value) {\n          case 'true':\n            acc[key] = true;\n            break;\n          case 'false':\n            acc[key] = false;\n            break;\n          case undefined:\n            acc[key] = true;\n            break;\n          default:\n            acc[key] = attribute.value;\n        }\n      }\n      return acc;\n    },\n    {}\n  );\n  return options;\n};\n\nexport function getElementWindow(element) {\n  if (\n    !element ||\n    !element.ownerDocument ||\n    !element.ownerDocument.defaultView\n  ) {\n    return window;\n  }\n  return element.ownerDocument.defaultView;\n}\n\nexport function getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n  return element.ownerDocument;\n}\n","import canUseDOM from 'can-use-dom';\nimport { getElementDocument } from \"./helpers\";\n\nlet cachedScrollbarWidth = null;\nlet cachedDevicePixelRatio = null;\n\nif (canUseDOM) {\n  window.addEventListener('resize', () => {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\n\nexport default function scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    \n    const document = getElementDocument(el);\n    \n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n    const body = document.body;\n    const box = document.createElement('div');\n\n    box.classList.add('simplebar-hide-scrollbar');\n\n    body.appendChild(box);\n\n    const width = box.getBoundingClientRect().right;\n\n    body.removeChild(box);\n\n    cachedScrollbarWidth = width;\n  }\n\n  return cachedScrollbarWidth;\n}\n","import throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport canUseDOM from 'can-use-dom';\nimport scrollbarWidth from './scrollbar-width';\nimport { getElementWindow, getElementDocument } from './helpers';\n\nexport default class SimpleBar {\n  constructor(element, options) {\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = { ...SimpleBar.defaultOptions, ...options };\n    this.classNames = {\n      ...SimpleBar.defaultOptions.classNames,\n      ...this.options.classNames\n    };\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null;\n\n    // Don't re-instantiate over an existing one\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(\n      this.hideScrollbars.bind(this),\n      this.options.timeout\n    );\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n\n    this.init();\n  }\n\n  /**\n   * Static properties\n   */\n\n  /**\n   * Helper to fix browsers inconsistency on RTL:\n   *  - Firefox inverts the scrollbar initial position\n   *  - IE11 inverts both scrollbar position and scrolling offset\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n   */\n  static getRtlHelpers() {\n    const dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML =\n      '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    const scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    const dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    const dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    const dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    const dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(\n      dummyContainerChild\n    );\n\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left &&\n        dummyContainerChildOffset.left -\n          dummyContainerScrollOffsetAfterScroll.left !==\n          0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  }\n\n  static defaultOptions = {\n    autoHide: true,\n    forceVisible: false,\n    clickOnTrack: true,\n    clickOnTrackSpeed: 40,\n    classNames: {\n      contentEl: 'simplebar-content',\n      contentWrapper: 'simplebar-content-wrapper',\n      offset: 'simplebar-offset',\n      mask: 'simplebar-mask',\n      wrapper: 'simplebar-wrapper',\n      placeholder: 'simplebar-placeholder',\n      scrollbar: 'simplebar-scrollbar',\n      track: 'simplebar-track',\n      heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n      heightAutoObserverEl: 'simplebar-height-auto-observer',\n      visible: 'simplebar-visible',\n      horizontal: 'simplebar-horizontal',\n      vertical: 'simplebar-vertical',\n      hover: 'simplebar-hover',\n      dragging: 'simplebar-dragging'\n    },\n    scrollbarMinSize: 25,\n    scrollbarMaxSize: 0,\n    timeout: 1000\n  };\n\n  static getOffset(el) {\n    const rect = el.getBoundingClientRect();\n    const elDocument = getElementDocument(el);\n    const elWindow = getElementWindow(el);\n\n    return {\n      top:\n        rect.top +\n        (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left:\n        rect.left +\n        (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  }\n\n  static instances = new WeakMap();\n\n  init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this);\n\n    // We stop here on server-side\n    if (canUseDOM) {\n      this.initDOM();\n\n      this.setAccessibilityAttributes();\n\n      this.scrollbarWidth = this.getScrollbarWidth();\n\n      this.recalculate();\n\n      this.initListeners();\n    }\n  }\n\n  initDOM() {\n    // make sure this element doesn't have the elements yet\n    if (\n      Array.prototype.filter.call(this.el.children, child =>\n        child.classList.contains(this.classNames.wrapper)\n      ).length\n    ) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(`.${this.classNames.wrapper}`);\n      this.contentWrapperEl =\n        this.options.scrollableNode ||\n        this.el.querySelector(`.${this.classNames.contentWrapper}`);\n      this.contentEl =\n        this.options.contentNode ||\n        this.el.querySelector(`.${this.classNames.contentEl}`);\n\n      this.offsetEl = this.el.querySelector(`.${this.classNames.offset}`);\n      this.maskEl = this.el.querySelector(`.${this.classNames.mask}`);\n\n      this.placeholderEl = this.findChild(\n        this.wrapperEl,\n        `.${this.classNames.placeholder}`\n      );\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverWrapperEl}`\n      );\n      this.heightAutoObserverEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverEl}`\n      );\n      this.axis.x.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.horizontal}`\n      );\n      this.axis.y.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.vertical}`\n      );\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(\n        this.classNames.heightAutoObserverWrapperEl\n      );\n      this.heightAutoObserverEl.classList.add(\n        this.classNames.heightAutoObserverEl\n      );\n\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      const track = document.createElement('div');\n      const scrollbar = document.createElement('div');\n\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n\n      track.appendChild(scrollbar);\n\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n\n    this.el.setAttribute('data-simplebar', 'init');\n  }\n\n  setAccessibilityAttributes() {\n    const ariaLabel = this.options.ariaLabel || 'scrollable content';\n\n    this.contentWrapperEl.setAttribute('tabindex', '0');\n    this.contentWrapperEl.setAttribute('role', 'region');\n    this.contentWrapperEl.setAttribute('aria-label', ariaLabel);\n  }\n\n  initListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll);\n\n    // Browser zoom triggers a window resize\n    elWindow.addEventListener('resize', this.onWindowResize);\n\n    // Hack for https://github.com/WICG/ResizeObserver/issues/38\n    let resizeObserverStarted = false;\n    const resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n    this.resizeObserver = new resizeObserver(() => {\n      if (!resizeObserverStarted) return;\n      this.recalculate();\n    });\n\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n\n    elWindow.requestAnimationFrame(() => {\n      resizeObserverStarted = true;\n    });\n\n    // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  }\n\n  recalculate() {\n    const elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n\n    const isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    const isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    const contentElOffsetWidth = this.contentEl.offsetWidth;\n\n    const contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n\n    const elOverflowX = this.elStyles.overflowX;\n    const elOverflowY = this.elStyles.overflowY;\n\n    this.contentEl.style.padding = `${this.elStyles.paddingTop} ${this.elStyles.paddingRight} ${this.elStyles.paddingBottom} ${this.elStyles.paddingLeft}`;\n    this.wrapperEl.style.margin = `-${this.elStyles.paddingTop} -${this.elStyles.paddingRight} -${this.elStyles.paddingBottom} -${this.elStyles.paddingLeft}`;\n\n    const contentElScrollHeight = this.contentEl.scrollHeight;\n    const contentElScrollWidth = this.contentEl.scrollWidth;\n\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%';\n\n    // Determine placeholder size\n    this.placeholderEl.style.width = isWidthAuto\n      ? `${contentElOffsetWidth}px`\n      : 'auto';\n    this.placeholderEl.style.height = `${contentElScrollHeight}px`;\n\n    const contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing =\n      contentElScrollHeight > contentWrapperElOffsetHeight;\n\n    // Set isOverflowing to false if user explicitely set hidden overflow\n    this.axis.x.isOverflowing =\n      elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing =\n      elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n\n    this.axis.x.forceVisible =\n      this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible =\n      this.options.forceVisible === 'y' || this.options.forceVisible === true;\n\n    this.hideNativeScrollbar();\n\n    // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n    let offsetForXScrollbar = this.axis.x.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n    let offsetForYScrollbar = this.axis.y.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n\n    this.axis.x.isOverflowing =\n      this.axis.x.isOverflowing &&\n      contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing =\n      this.axis.y.isOverflowing &&\n      contentElScrollHeight >\n        contentWrapperElOffsetHeight - offsetForXScrollbar;\n\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n\n    this.axis.x.scrollbar.el.style.width = `${this.axis.x.scrollbar.size}px`;\n    this.axis.y.scrollbar.el.style.height = `${this.axis.y.scrollbar.size}px`;\n\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n\n  /**\n   * Calculate scrollbar size\n   */\n  getScrollbarSize(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n\n    const contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    let scrollbarSize;\n\n    let scrollbarRatio = trackSize / contentSize;\n\n    // Calculate new height/position of drag handle.\n    scrollbarSize = Math.max(\n      ~~(scrollbarRatio * trackSize),\n      this.options.scrollbarMinSize\n    );\n\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n\n    return scrollbarSize;\n  }\n\n  positionScrollbar(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n\n    const contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    let scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollingInverted\n        ? -scrollOffset\n        : scrollOffset;\n    let scrollPourcent = scrollOffset / (contentSize - hostSize);\n\n    let handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n        ? handleOffset + (trackSize - scrollbar.size)\n        : handleOffset;\n\n    scrollbar.el.style.transform =\n      axis === 'x'\n        ? `translate3d(${handleOffset}px, 0, 0)`\n        : `translate3d(0, ${handleOffset}px, 0)`;\n  }\n\n  toggleTrackVisibility(axis = 'y') {\n    const track = this.axis[axis].track.el;\n    const scrollbar = this.axis[axis].scrollbar.el;\n\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    }\n\n    // Even if forceVisible is enabled, scrollbar itself should be hidden\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  }\n\n  hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] =\n      this.axis.y.isOverflowing || this.axis.y.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n    this.offsetEl.style.bottom =\n      this.axis.x.isOverflowing || this.axis.x.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n  }\n\n  /**\n   * On scroll event handling\n   */\n  onScroll = () => {\n    const elWindow = getElementWindow(this.el);\n    if (!this.scrollXTicking) {\n      elWindow.requestAnimationFrame(this.scrollX);\n      this.scrollXTicking = true;\n    }\n\n    if (!this.scrollYTicking) {\n      elWindow.requestAnimationFrame(this.scrollY);\n      this.scrollYTicking = true;\n    }\n  };\n\n  scrollX = () => {\n    if (this.axis.x.isOverflowing) {\n      this.showScrollbar('x');\n      this.positionScrollbar('x');\n    }\n\n    this.scrollXTicking = false;\n  };\n\n  scrollY = () => {\n    if (this.axis.y.isOverflowing) {\n      this.showScrollbar('y');\n      this.positionScrollbar('y');\n    }\n\n    this.scrollYTicking = false;\n  };\n\n  onMouseEnter = () => {\n    this.showScrollbar('x');\n    this.showScrollbar('y');\n  };\n\n  onMouseMove = e => {\n    this.mouseX = e.clientX;\n    this.mouseY = e.clientY;\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseMoveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseMoveForAxis('y');\n    }\n  };\n\n  onMouseMoveForAxis(axis = 'y') {\n    this.axis[axis].track.rect = this.axis[\n      axis\n    ].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n\n    const isWithinScrollbarBoundsX = this.isWithinBounds(\n      this.axis[axis].scrollbar.rect\n    );\n\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  }\n\n  onMouseLeave = () => {\n    this.onMouseMove.cancel();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseLeaveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseLeaveForAxis('y');\n    }\n\n    this.mouseX = -1;\n    this.mouseY = -1;\n  };\n\n  onMouseLeaveForAxis(axis = 'y') {\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  }\n\n  onWindowResize = () => {\n    // Recalculate scrollbarWidth in case it's a zoom\n    this.scrollbarWidth = this.getScrollbarWidth();\n\n    this.hideNativeScrollbar();\n  };\n\n  /**\n   * Show scrollbar\n   */\n  showScrollbar(axis = 'y') {\n    let scrollbar = this.axis[axis].scrollbar.el;\n\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n\n  /**\n   * Hide Scrollbar\n   */\n  hideScrollbars = () => {\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (!this.isWithinBounds(this.axis.y.track.rect)) {\n      this.axis.y.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.y.isVisible = false;\n    }\n\n    if (!this.isWithinBounds(this.axis.x.track.rect)) {\n      this.axis.x.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.x.isVisible = false;\n    }\n  };\n\n  onPointerEvent = e => {\n    let isWithinTrackXBounds, isWithinTrackYBounds;\n\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      isWithinTrackXBounds = this.isWithinBounds(this.axis.x.track.rect);\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      isWithinTrackYBounds = this.isWithinBounds(this.axis.y.track.rect);\n    }\n\n    // If any pointer event is called on the scrollbar\n    if (isWithinTrackXBounds || isWithinTrackYBounds) {\n      // Preventing the event's default action stops text being\n      // selectable during the drag.\n      e.preventDefault();\n      // Prevent event leaking\n      e.stopPropagation();\n\n      if (e.type === 'mousedown') {\n        if (isWithinTrackXBounds) {\n          this.axis.x.scrollbar.rect = this.axis.x.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.x.scrollbar.rect)) {\n            this.onDragStart(e, 'x');\n          } else {\n            this.onTrackClick(e, 'x');\n          }\n        }\n\n        if (isWithinTrackYBounds) {\n          this.axis.y.scrollbar.rect = this.axis.y.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.y.scrollbar.rect)) {\n            this.onDragStart(e, 'y');\n          } else {\n            this.onTrackClick(e, 'y');\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * on scrollbar handle drag movement starts\n   */\n  onDragStart(e, axis = 'y') {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n    const eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset =\n      eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n\n    this.el.classList.add(this.classNames.dragging);\n\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n\n  /**\n   * Drag scrollbar handle\n   */\n  drag = e => {\n    let eventOffset;\n    const track = this.axis[this.draggedAxis].track;\n    const trackSize = track.rect[this.axis[this.draggedAxis].sizeAttr];\n    const scrollbar = this.axis[this.draggedAxis].scrollbar;\n    const contentSize = this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollSizeAttr\n    ];\n    const hostSize = parseInt(\n      this.elStyles[this.axis[this.draggedAxis].sizeAttr],\n      10\n    );\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (this.draggedAxis === 'y') {\n      eventOffset = e.pageY;\n    } else {\n      eventOffset = e.pageX;\n    }\n\n    // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n    let dragPos =\n      eventOffset -\n      track.rect[this.axis[this.draggedAxis].offsetAttr] -\n      this.axis[this.draggedAxis].dragOffset;\n    // Convert the mouse position into a percentage of the scrollbar height/width.\n    let dragPerc = dragPos / (trackSize - scrollbar.size);\n\n    // Scroll the content by the same percentage.\n    let scrollPos = dragPerc * (contentSize - hostSize);\n\n    // Fix browsers inconsistency on RTL\n    if (this.draggedAxis === 'x') {\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n          ? scrollPos - (trackSize + scrollbar.size)\n          : scrollPos;\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted\n          ? -scrollPos\n          : scrollPos;\n    }\n\n    this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollOffsetAttr\n    ] = scrollPos;\n  };\n\n  /**\n   * End scroll handle drag\n   */\n  onEndDrag = e => {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.el.classList.remove(this.classNames.dragging);\n\n    elDocument.removeEventListener('mousemove', this.drag, true);\n    elDocument.removeEventListener('mouseup', this.onEndDrag, true);\n    this.removePreventClickId = elWindow.setTimeout(() => {\n      // Remove these asynchronously so we still suppress click events\n      // generated simultaneously with mouseup.\n      elDocument.removeEventListener('click', this.preventClick, true);\n      elDocument.removeEventListener('dblclick', this.preventClick, true);\n      this.removePreventClickId = null;\n    });\n  };\n\n  /**\n   * Handler to ignore click events during drag\n   */\n  preventClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  onTrackClick(e, axis = 'y') {\n    if (!this.options.clickOnTrack) return;\n\n    const elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n    const scrollbar = this.axis[axis].scrollbar;\n    const scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    let scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    const t =\n      axis === 'y'\n        ? this.mouseY - scrollbarOffset\n        : this.mouseX - scrollbarOffset;\n    const dir = t < 0 ? -1 : 1;\n    const scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n\n    const scrollTo = () => {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          scrolled -= this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          scrolled += this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n\n    scrollTo();\n  }\n\n  /**\n   * Getter for content element\n   */\n  getContentElement() {\n    return this.contentEl;\n  }\n\n  /**\n   * Getter for original scrolling element\n   */\n  getScrollElement() {\n    return this.contentWrapperEl;\n  }\n\n  getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (\n        getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar')\n          .display === 'none' ||\n        'scrollbarWidth' in document.documentElement.style ||\n        '-ms-overflow-style' in document.documentElement.style\n      ) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  }\n\n  removeListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n\n    elWindow.removeEventListener('resize', this.onWindowResize);\n\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n\n    // Cancel all debounced functions\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n\n  /**\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\n   */\n  unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n\n  /**\n   * Check if mouse is within bounds\n   */\n  isWithinBounds(bbox) {\n    return (\n      this.mouseX >= bbox.left &&\n      this.mouseX <= bbox.left + bbox.width &&\n      this.mouseY >= bbox.top &&\n      this.mouseY <= bbox.top + bbox.height\n    );\n  }\n\n  /**\n   * Find element children matches query\n   */\n  findChild(el, query) {\n    const matches =\n      el.matches ||\n      el.webkitMatchesSelector ||\n      el.mozMatchesSelector ||\n      el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, child =>\n      matches.call(child, query)\n    )[0];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}