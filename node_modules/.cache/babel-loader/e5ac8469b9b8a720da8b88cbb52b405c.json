{"ast":null,"code":"//  const Addpromos= () => {\n//   return(\n//     <>\n//     <Container>\n//    <Box className=\"breadcrumb\">\n//     <Breadcrumb\n//      routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Promos' }]}\n//     />\n//     </Box> \n//     <SimpleCard>\n//       <Formik>\n//       {/* //  onSubmit={handleSubmit}\n//       //  initialValues={initialValues}\n//       //  validationSchema={validationSchema} */}\n//           {/* {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => ( */}\n//          {/* <form onSubmit ={handleSubmit}> */}\n//          <Grid container spacing={2}>\n//                 <Grid item xs={12} md={6}>\n//                   <SimpleFormNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Title',\n//                       label: 'Title',\n//                       // onBlur: handleBlur,\n//                       // value: values.Title,\n//                       // onChange: handleChange,\n//                       // helperText: touched.Title && errors.Title,\n//                       // error: Boolean(errors.Title && touched.Title),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <AutocompleteComboNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Type',\n//                       label: 'Type',\n//                       // value: values.Type,\n//                       // onBlur: handleBlur,\n//                       // onChange: handleChange('Type'),\n//                       // helperText: touched.Type && errors.Type,\n//                       // error: Boolean(errors.Type && touched.Type),\n//                     }}\n//                   />\n//                 </Grid>\n//                 </Grid>\n//                  {/* </form> */}\n//       </Formik>\n//     </SimpleCard>\n//     </Container>\n//     </>\n//   )\n//   }\n// export default Addpromos","map":{"version":3,"names":[],"sources":["/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Addpromos.jsx"],"sourcesContent":["\n\n\n\n//  const Addpromos= () => {\n//   return(\n//     <>\n//     <Container>\n//    <Box className=\"breadcrumb\">\n//     <Breadcrumb\n//      routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Promos' }]}\n//     />\n//     </Box> \n//     <SimpleCard>\n//       <Formik>\n//       {/* //  onSubmit={handleSubmit}\n//       //  initialValues={initialValues}\n//       //  validationSchema={validationSchema} */}\n//           {/* {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => ( */}\n//          {/* <form onSubmit ={handleSubmit}> */}\n//          <Grid container spacing={2}>\n//                 <Grid item xs={12} md={6}>\n//                   <SimpleFormNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Title',\n//                       label: 'Title',\n//                       // onBlur: handleBlur,\n//                       // value: values.Title,\n//                       // onChange: handleChange,\n//                       // helperText: touched.Title && errors.Title,\n//                       // error: Boolean(errors.Title && touched.Title),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <AutocompleteComboNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Type',\n//                       label: 'Type',\n//                       // value: values.Type,\n//                       // onBlur: handleBlur,\n//                       // onChange: handleChange('Type'),\n//                       // helperText: touched.Type && errors.Type,\n//                       // error: Boolean(errors.Type && touched.Type),\n//                     }}\n//                   />\n//                 </Grid>\n//                 </Grid>\n\n\n              \n\n\n//                  {/* </form> */}\n\n            \n//       </Formik>\n     \n\n\n\n\n\n//     </SimpleCard>\n//     </Container>\n    \n//     </>\n//   )\n//   }\n\n// export default Addpromos"],"mappings":"AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AAOA;AACA;AAEA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}