{"ast":null,"code":"import _defineProperty from \"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Fileattachment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { FormControl, InputLabel, TextField, FormHelperText } from '@material-ui/core';\nimport { VerticalAlignTopOutlined } from '@ant-design/icons';\nimport Icon from '@ant-design/icons';\nimport ReactFileReader from 'react-file-reader';\nimport { read } from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Fileattachment(props) {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data1 = _useState2[0],\n      setdata = _useState2[1];\n\n  console.log(props);\n  useEffect(function () {\n    setdata(props.props);\n  }, [props]); // 1. Register the column and header name to be extracted in excel.\n\n  var sheetInfo = {\n    sheet: 'ProductLibrary',\n    cell: [{\n      col: null,\n      header: null\n    }, // cell[0]\n    {\n      col: 'A',\n      header: 'Attr'\n    }, // cell[1]\n    {\n      col: 'B',\n      header: 'Item'\n    }, // cell[2]\n    {\n      col: 'C',\n      header: 'Value'\n    } // cell[3]\n    ]\n  };\n\n  var _useState3 = useState('Click to upload file'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      BtnPlaceholder = _useState4[0],\n      setBtnPlaceholder = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      UploadMsg = _useState6[0],\n      setUploadMsg = _useState6[1];\n\n  function handleFiles(e) {\n    var files = e[0],\n        f = files;\n    var name = e[0].name;\n    console.log(name);\n    setBtnPlaceholder(name);\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      var data = new Uint8Array(e.target.result);\n      var workbook = read(data, {\n        type: 'array'\n      });\n      var finaldata = [];\n      var cell_length = sheetInfo.cell.length;\n\n      if (workbook.Sheets[sheetInfo.sheet] !== undefined) {\n        for (var i = 1; i < cell_length; i++) {\n          var row_count = 2; // skip row1 header\n\n          do {\n            finaldata[row_count] = _objectSpread(_objectSpread({}, finaldata[row_count]), {}, _defineProperty({}, sheetInfo.cell[i].header, workbook.Sheets[sheetInfo.sheet][sheetInfo.cell[i].col + row_count].v));\n            row_count++;\n          } while (workbook.Sheets[sheetInfo.sheet][sheetInfo.cell[i].col + row_count]);\n        }\n\n        console.log('Correct Excel Uploaded!');\n        setUploadMsg('Uploaded Successfully!');\n      } else {\n        console.log('Wrong Excel Uploaded!');\n        setUploadMsg('Wrong Excel Uploaded!');\n      }\n\n      console.log(finaldata); // setExcelDataFN(finaldata,true,name);\n    }; // reader.readAsText(files);\n\n\n    reader.readAsArrayBuffer(f);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      variant: \"outlined\",\n      margin: \"0px\",\n      style: {\n        userSelect: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        variant: \"outlined\",\n        shrink: true // required={true}\n        ,\n        style: {\n          marginLeft: -4,\n          background: 'white',\n          paddingLeft: 6,\n          paddingRight: 4\n        },\n        children: data1.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactFileReader, {\n        handleFiles: handleFiles,\n        fileTypes: '.xlsx',\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          InputProps: {\n            style: {\n              color: 'black'\n            }\n          },\n          value: BtnPlaceholder,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VerticalAlignTopOutlined, {\n          type: \"upload\",\n          style: {\n            position: 'absolute',\n            padding: '18px',\n            right: 0,\n            top: 0,\n            color: 'grey'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        id: \"component-error-text\",\n        children: UploadMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Fileattachment, \"LFQNzMPBe5DuKqSdU76aHMD3Avg=\");\n\n_c = Fileattachment;\nexport default Fileattachment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fileattachment\");","map":{"version":3,"names":["React","useState","useEffect","FormControl","InputLabel","TextField","FormHelperText","VerticalAlignTopOutlined","Icon","ReactFileReader","read","Fileattachment","props","data1","setdata","console","log","sheetInfo","sheet","cell","col","header","BtnPlaceholder","setBtnPlaceholder","UploadMsg","setUploadMsg","handleFiles","e","files","f","name","reader","FileReader","onload","data","Uint8Array","target","result","workbook","type","finaldata","cell_length","length","Sheets","undefined","i","row_count","v","readAsArrayBuffer","userSelect","marginLeft","background","paddingLeft","paddingRight","label","style","color","position","padding","right","top"],"sources":["/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Fileattachment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FormControl, InputLabel, TextField, FormHelperText } from '@material-ui/core';\nimport { VerticalAlignTopOutlined } from '@ant-design/icons';\nimport Icon from '@ant-design/icons';\nimport ReactFileReader from 'react-file-reader';\nimport { read } from 'xlsx';\n\nfunction Fileattachment(props) {\n  const [data1, setdata] = useState({});\n  console.log(props);\n  useEffect(() => {\n    setdata(props.props);\n  }, [props]);\n\n  // 1. Register the column and header name to be extracted in excel.\n  const sheetInfo = {\n    sheet: 'ProductLibrary',\n    cell: [\n      { col: null, header: null }, // cell[0]\n      { col: 'A', header: 'Attr' }, // cell[1]\n      { col: 'B', header: 'Item' }, // cell[2]\n      { col: 'C', header: 'Value' }, // cell[3]\n    ],\n  };\n\n  const [BtnPlaceholder, setBtnPlaceholder] = useState('Click to upload file');\n  const [UploadMsg, setUploadMsg] = useState('');\n\n  function handleFiles(e) {\n    var files = e[0],\n      f = files;\n    let name = e[0].name;\n    console.log(name);\n    setBtnPlaceholder(name);\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      var data = new Uint8Array(e.target.result);\n\n      var workbook = read(data, { type: 'array' });\n      let finaldata = [];\n      let cell_length = sheetInfo.cell.length;\n\n      if (workbook.Sheets[sheetInfo.sheet] !== undefined) {\n        for (let i = 1; i < cell_length; i++) {\n          let row_count = 2; // skip row1 header\n          do {\n            finaldata[row_count] = {\n              ...finaldata[row_count],\n              [sheetInfo.cell[i].header]:\n                workbook.Sheets[sheetInfo.sheet][sheetInfo.cell[i].col + row_count].v,\n            };\n\n            row_count++;\n          } while (workbook.Sheets[sheetInfo.sheet][sheetInfo.cell[i].col + row_count]);\n        }\n        console.log('Correct Excel Uploaded!');\n        setUploadMsg('Uploaded Successfully!');\n      } else {\n        console.log('Wrong Excel Uploaded!');\n        setUploadMsg('Wrong Excel Uploaded!');\n      }\n      console.log(finaldata);\n      // setExcelDataFN(finaldata,true,name);\n    };\n    // reader.readAsText(files);\n    reader.readAsArrayBuffer(f);\n  }\n\n  return (\n    <>\n      <FormControl\n        fullWidth\n        variant=\"outlined\"\n        margin=\"0px\"\n        style={{\n          userSelect: 'none',\n        }}\n      >\n        <InputLabel\n          variant=\"outlined\"\n          shrink\n          // required={true}\n          style={{\n            marginLeft: -4,\n            background: 'white',\n            paddingLeft: 6,\n            paddingRight: 4,\n          }}\n        >\n          {data1.label}\n        </InputLabel>\n\n        <ReactFileReader handleFiles={handleFiles} fileTypes={'.xlsx'}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            InputProps={{ style: { color: 'black' } }}\n            value={BtnPlaceholder}\n            disabled={true}\n          />\n          <VerticalAlignTopOutlined\n            type=\"upload\"\n            style={{\n              position: 'absolute',\n              padding: '18px',\n              right: 0,\n              top: 0,\n              color: 'grey',\n            }}\n          />\n          <Icon />\n        </ReactFileReader>\n        <FormHelperText id=\"component-error-text\">{UploadMsg}</FormHelperText>\n      </FormControl>\n    </>\n  );\n}\nexport default Fileattachment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}