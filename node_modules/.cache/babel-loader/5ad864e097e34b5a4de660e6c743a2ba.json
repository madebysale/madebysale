{"ast":null,"code":"import _slicedToArray from \"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteComboWithIdValue.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport { makeStyles } from '@material-ui/styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\nvar useStyles = makeStyles(function (theme) {\n  return {};\n}); // function AutocompleteCombo(props)\n\nvar AutocompleteComboWithIdValue = function AutocompleteComboWithIdValue(props) {\n  _s();\n\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      personName = _useState2[0],\n      setPersonName = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data2 = _useState4[0],\n      setdata = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      keyvalue = _useState6[0],\n      setkeyvalue = _useState6[1];\n\n  useEffect(function () {\n    setdata(props.props);\n    setkeyvalue(props.props.names);\n  }, [props]);\n\n  var handleChange = function handleChange(event) {\n    var value = event.target.value;\n    setPersonName( // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      className: classes.main3,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: data2.id,\n        label: data2.label,\n        value: data2.value,\n        onBlur: data2.onBlur,\n        onChange: data2.onChange,\n        fullWidth: true,\n        select: true,\n        helperText: data2.helperText,\n        error: data2.error,\n        children: keyvalue.map(function (name) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name.id,\n            children: name.value\n          }, name.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(AutocompleteComboWithIdValue, \"+tV97odOz2IpGiKUGAcCkG9B3AQ=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = AutocompleteComboWithIdValue;\nexport default AutocompleteComboWithIdValue;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutocompleteComboWithIdValue\");","map":{"version":3,"names":["React","useState","useEffect","Theme","useTheme","MenuItem","FormControl","Select","TextField","InputLabel","makeStyles","FormHelperText","names","useStyles","theme","AutocompleteComboWithIdValue","props","classes","personName","setPersonName","data2","setdata","keyvalue","setkeyvalue","handleChange","event","value","target","split","main3","id","label","onBlur","onChange","helperText","error","map","name"],"sources":["/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteComboWithIdValue.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport { makeStyles } from '@material-ui/styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nconst useStyles = makeStyles((theme) => ({}));\n\n// function AutocompleteCombo(props)\n\nconst AutocompleteComboWithIdValue = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = useState([]);\n\n  const [data2, setdata] = useState([]);\n  const [keyvalue, setkeyvalue] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n    setkeyvalue(props.props.names);\n  }, [props]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value\n    );\n  };\n\n  return (\n    <>\n      <FormControl fullWidth className={classes.main3}>\n        {/* <InputLabel id=\"demo-simple-select-helper-label\">{data2.name}</InputLabel> */}\n        {/* <Select\n          //  name={data2.name}\n          label={data2.label}\n          value={data2.value}\n          onChange={handleChange}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select> */}\n        {/* <InputLabel id=\"demo-simple-select-helper-label\">{data2.label}</InputLabel> */}\n        <TextField\n          id={data2.id}\n          label={data2.label}\n          value={data2.value}\n          onBlur={data2.onBlur}\n          onChange={data2.onChange}\n          fullWidth\n          select\n          helperText={data2.helperText}\n          error={data2.error}\n        >\n          {keyvalue.map((name) => (\n            <MenuItem key={name.id} value={name.id}>\n              {name.value}\n            </MenuItem>\n          ))}\n        </TextField>\n      </FormControl>\n    </>\n  );\n};\nexport default AutocompleteComboWithIdValue;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,sBAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;;AAEA,IAAMC,KAAK,GAAG,CACZ,eADY,EAEZ,WAFY,EAGZ,cAHY,EAIZ,eAJY,EAKZ,gBALY,EAMZ,eANY,EAOZ,eAPY,EAQZ,mBARY,EASZ,kBATY,EAUZ,cAVY,CAAd;AAaA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAACI,KAAD;EAAA,OAAY,EAAZ;AAAA,CAAD,CAA5B,C,CAEA;;AAEA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,KAAD,EAAW;EAAA;;EAC9C,IAAMC,OAAO,GAAGJ,SAAS,EAAzB;EACA,IAAMC,KAAK,GAAGV,QAAQ,EAAtB;;EACA,gBAAoCH,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOiB,UAAP;EAAA,IAAmBC,aAAnB;;EAEA,iBAAyBlB,QAAQ,CAAC,EAAD,CAAjC;EAAA;EAAA,IAAOmB,KAAP;EAAA,IAAcC,OAAd;;EACA,iBAAgCpB,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOqB,QAAP;EAAA,IAAiBC,WAAjB;;EAEArB,SAAS,CAAC,YAAM;IACdmB,OAAO,CAACL,KAAK,CAACA,KAAP,CAAP;IACAO,WAAW,CAACP,KAAK,CAACA,KAAN,CAAYJ,KAAb,CAAX;EACD,CAHQ,EAGN,CAACI,KAAD,CAHM,CAAT;;EAKA,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;IAC9B,IACYC,KADZ,GAEID,KAFJ,CACEE,MADF,CACYD,KADZ;IAGAP,aAAa,EACX;IACA,OAAOO,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACE,KAAN,CAAY,GAAZ,CAA5B,GAA+CF,KAFpC,CAAb;EAID,CARD;;EAUA,oBACE;IAAA,uBACE,QAAC,WAAD;MAAa,SAAS,MAAtB;MAAuB,SAAS,EAAET,OAAO,CAACY,KAA1C;MAAA,uBAeE,QAAC,SAAD;QACE,EAAE,EAAET,KAAK,CAACU,EADZ;QAEE,KAAK,EAAEV,KAAK,CAACW,KAFf;QAGE,KAAK,EAAEX,KAAK,CAACM,KAHf;QAIE,MAAM,EAAEN,KAAK,CAACY,MAJhB;QAKE,QAAQ,EAAEZ,KAAK,CAACa,QALlB;QAME,SAAS,MANX;QAOE,MAAM,MAPR;QAQE,UAAU,EAAEb,KAAK,CAACc,UARpB;QASE,KAAK,EAAEd,KAAK,CAACe,KATf;QAAA,UAWGb,QAAQ,CAACc,GAAT,CAAa,UAACC,IAAD;UAAA,oBACZ,QAAC,QAAD;YAAwB,KAAK,EAAEA,IAAI,CAACP,EAApC;YAAA,UACGO,IAAI,CAACX;UADR,GAAeW,IAAI,CAACP,EAApB;YAAA;YAAA;YAAA;UAAA,SADY;QAAA,CAAb;MAXH;QAAA;QAAA;QAAA;MAAA;IAfF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAqCD,CA5DD;;GAAMf,4B;UACYF,S,EACFT,Q;;;KAFVW,4B;AA6DN,eAAeA,4BAAf"},"metadata":{},"sourceType":"module"}