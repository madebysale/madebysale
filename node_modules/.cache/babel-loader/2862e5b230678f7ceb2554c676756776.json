{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import React, { useState } from 'react';\n// import { Box, styled } from '@mui/system';\n// import AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\n// import { Breadcrumb, SimpleCard } from 'app/components';\n// import Grid from '@mui/material/Grid';\n// import SimpleFormNew from '../material-kit/forms/SimpleFormNew';\n// import { makeStyles } from '@material-ui/styles';\n// import { Formik } from 'formik';\n// import * as Yup from 'yup';\n// import { LoadingButton } from '@mui/lab';\n// import useAuth from 'app/hooks/useAuth';\n// import { useNavigate } from 'react-router-dom';\n// const Container = styled('div')(({ theme }) => ({\n//   margin: '30px',\n//   [theme.breakpoints.down('sm')]: { margin: '16px' },\n//   '& .breadcrumb': {\n//     marginBottom: '30px',\n//     [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n//   },\n// }));\n// const useStyles = makeStyles((theme) => ({\n//   btn2: {\n//     marginTop: '10px',\n//     padding: '7px 23px',\n//     border: 'none',\n//     fontSize: '15px',\n//     color: '#fff',\n//     background: '#303f9f',\n//   },\n// }));\n// const handleChange = (event) => {\n//   console.log(event);\n// };\n// // inital login credentials\n// const initialValues = {\n//   Name: '',\n//   Start_Date: '',\n//   End_Date: '',\n//   Product_to_buy: '',\n//   Product_to_get: '',\n//   Description: '',\n//   // AttachDocument: '',\n//   // Note: ''\n// };\n// // form field validation schema\n// const validationSchema = Yup.object().shape({\n//     Name: Yup.string()\n//     .min(6, 'Name must be 6 character length')\n//     .required('Name is required!'),\n//     Start_Date: Yup.string()\n//     .min(6, 'Type must be 6 character length')\n//     .required('Type is required!'),\n//     End_Date: Yup.number()\n//     .max(4, 'port must be 4 character length')\n//     .required('port is required!'),\n//     Product_to_buy: Yup.string()\n//     .min(6, 'Charactersperline must be 6 character length')\n//     .required('Characters per line is required!'),\n//     Product_to_get: Yup.string()\n//     .min(6, 'IPAddress must be 6 character length')\n//     .matches(/(^(\\d{1,3}\\.){3}(\\d{1,3})$)/, {\n//       message: 'Invalid IP address',\n//       excludeEmptyString: true\n//     })\n//     .required('IPAddress per line is required!'),\n//     Description: Yup.string()\n//     .min(6, 'Profile must be 6 character length')\n//     .required('Profile per line is required!'),\n// });\n// const Addpromos= (props) => {\n//   const classes = useStyles();\n//   const [value, setValue] = useState('Controlled');\n//   const { register } = useAuth();\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n//   // const [note, setNote] = useState('');\n//   const handleForSubmit = (values) => {\n//     console.log(values);\n//   };\n//   return (\n//     <Container>\n//       <Box className=\"breadcrumb\">\n//         <Breadcrumb\n//           routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Promos' }]}\n//         />\n//       </Box>\n//       <SimpleCard>\n//         <Formik\n//           onSubmit={handleForSubmit}\n//           initialValues={initialValues}\n//           validationSchema={validationSchema}\n//         >\n//           {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n//             <form onSubmit={handleSubmit}>\n//               <Grid container spacing={2}>\n//                 <Grid item xs={12} md={6}>\n//                   <SimpleFormNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Name',\n//                       label: 'Name',\n//                       onBlur: handleBlur,\n//                       value: values.Name,\n//                       onChange: handleChange,\n//                       helperText: touched.Name && errors.Name,\n//                       error: Boolean(errors.Name && touched.Name),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <AutocompleteComboNew\n//                     props={{\n//                         type: 'text',\n//                       name: 'Start Date',\n//                       label: 'Start Date',\n//                       value: values.Start_Date,\n//                       onBlur: handleBlur,\n//                       onChange: handleChange('Type'),\n//                       helperText: touched.Start_Date && errors.Start_Date,\n//                       error: Boolean(errors.Start_Date && touched.Start_Date),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <AutocompleteComboNew\n//                     props={{\n//                         type: 'text',\n//                       name: 'End Date',\n//                       label: 'End Date',\n//                       value: values.End_Date,\n//                       onBlur: handleBlur,\n//                       onChange: handleChange('Profile'),\n//                       helperText: touched.End_Date && errors.End_Date,\n//                       error: Boolean(errors.End_Date && touched.End_Date),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <SimpleFormNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Product to buy',\n//                       label: 'Product to buy',\n//                       onBlur: handleBlur,\n//                       value: values.Product_to_buy,\n//                       onChange: handleChange,\n//                       helperText: touched.Product_to_buy && errors.Product_to_buy,\n//                       error: Boolean(errors.Product_to_buy && touched.Product_to_buy),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <SimpleFormNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Product to get',\n//                       label: 'Product to get',\n//                       onBlur: handleBlur,\n//                       value: values.Product_to_get,\n//                       onChange: handleChange,\n//                       helperText: touched.Product_to_get && errors.Product_to_get,\n//                       error: Boolean(errors.Product_to_get && touched.Product_to_get),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <SimpleFormNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Description',\n//                       label: 'Description',\n//                       onBlur: handleBlur,\n//                       value: values.Description,\n//                       onChange: handleChange,\n//                       helperText: touched.Description && errors.Description,\n//                       error: Boolean(errors.Description && touched.Description),\n//                     }}\n//                   /> \n//                 </Grid>\n//               </Grid>\n//               <LoadingButton\n//                 variant=\"contained\"\n//                 type=\"submit\"\n//                 loading={loading}\n//                 className={classes.btn2}\n//               >\n//                 Add Promos\n//               </LoadingButton>\n//             </form>\n//           )}\n//         </Formik>\n//       </SimpleCard>\n//     </Container>\n//   );\n// };\n// export default Addpromos;\nvar Addpromos = function Addpromos() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = Addpromos;\nexport default Addpromos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addpromos\");","map":{"version":3,"names":["Addpromos"],"sources":["/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Addpromos.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Box, styled } from '@mui/system';\n// import AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\n// import { Breadcrumb, SimpleCard } from 'app/components';\n// import Grid from '@mui/material/Grid';\n// import SimpleFormNew from '../material-kit/forms/SimpleFormNew';\n// import { makeStyles } from '@material-ui/styles';\n// import { Formik } from 'formik';\n// import * as Yup from 'yup';\n// import { LoadingButton } from '@mui/lab';\n// import useAuth from 'app/hooks/useAuth';\n// import { useNavigate } from 'react-router-dom';\n\n// const Container = styled('div')(({ theme }) => ({\n//   margin: '30px',\n//   [theme.breakpoints.down('sm')]: { margin: '16px' },\n//   '& .breadcrumb': {\n//     marginBottom: '30px',\n//     [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n//   },\n// }));\n\n// const useStyles = makeStyles((theme) => ({\n//   btn2: {\n//     marginTop: '10px',\n//     padding: '7px 23px',\n//     border: 'none',\n//     fontSize: '15px',\n//     color: '#fff',\n//     background: '#303f9f',\n//   },\n// }));\n\n// const handleChange = (event) => {\n//   console.log(event);\n// };\n\n// // inital login credentials\n// const initialValues = {\n//   Name: '',\n//   Start_Date: '',\n//   End_Date: '',\n//   Product_to_buy: '',\n//   Product_to_get: '',\n//   Description: '',\n\n//   // AttachDocument: '',\n//   // Note: ''\n// };\n\n// // form field validation schema\n// const validationSchema = Yup.object().shape({\n//     Name: Yup.string()\n//     .min(6, 'Name must be 6 character length')\n//     .required('Name is required!'),\n\n//     Start_Date: Yup.string()\n//     .min(6, 'Type must be 6 character length')\n//     .required('Type is required!'),\n\n//     End_Date: Yup.number()\n//     .max(4, 'port must be 4 character length')\n//     .required('port is required!'),\n\n//     Product_to_buy: Yup.string()\n//     .min(6, 'Charactersperline must be 6 character length')\n//     .required('Characters per line is required!'),\n\n//     Product_to_get: Yup.string()\n//     .min(6, 'IPAddress must be 6 character length')\n//     .matches(/(^(\\d{1,3}\\.){3}(\\d{1,3})$)/, {\n//       message: 'Invalid IP address',\n//       excludeEmptyString: true\n//     })\n//     .required('IPAddress per line is required!'),\n\n//     Description: Yup.string()\n//     .min(6, 'Profile must be 6 character length')\n//     .required('Profile per line is required!'),\n// });\n\n// const Addpromos= (props) => {\n//   const classes = useStyles();\n//   const [value, setValue] = useState('Controlled');\n//   const { register } = useAuth();\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n//   // const [note, setNote] = useState('');\n//   const handleForSubmit = (values) => {\n//     console.log(values);\n//   };\n//   return (\n//     <Container>\n//       <Box className=\"breadcrumb\">\n//         <Breadcrumb\n//           routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Promos' }]}\n//         />\n//       </Box>\n//       <SimpleCard>\n//         <Formik\n//           onSubmit={handleForSubmit}\n//           initialValues={initialValues}\n//           validationSchema={validationSchema}\n//         >\n//           {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n//             <form onSubmit={handleSubmit}>\n//               <Grid container spacing={2}>\n//                 <Grid item xs={12} md={6}>\n//                   <SimpleFormNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Name',\n//                       label: 'Name',\n//                       onBlur: handleBlur,\n//                       value: values.Name,\n//                       onChange: handleChange,\n//                       helperText: touched.Name && errors.Name,\n//                       error: Boolean(errors.Name && touched.Name),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <AutocompleteComboNew\n//                     props={{\n//                         type: 'text',\n//                       name: 'Start Date',\n//                       label: 'Start Date',\n//                       value: values.Start_Date,\n//                       onBlur: handleBlur,\n//                       onChange: handleChange('Type'),\n//                       helperText: touched.Start_Date && errors.Start_Date,\n//                       error: Boolean(errors.Start_Date && touched.Start_Date),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <AutocompleteComboNew\n//                     props={{\n//                         type: 'text',\n//                       name: 'End Date',\n//                       label: 'End Date',\n//                       value: values.End_Date,\n//                       onBlur: handleBlur,\n//                       onChange: handleChange('Profile'),\n//                       helperText: touched.End_Date && errors.End_Date,\n//                       error: Boolean(errors.End_Date && touched.End_Date),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <SimpleFormNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Product to buy',\n//                       label: 'Product to buy',\n//                       onBlur: handleBlur,\n//                       value: values.Product_to_buy,\n//                       onChange: handleChange,\n//                       helperText: touched.Product_to_buy && errors.Product_to_buy,\n//                       error: Boolean(errors.Product_to_buy && touched.Product_to_buy),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <SimpleFormNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Product to get',\n//                       label: 'Product to get',\n//                       onBlur: handleBlur,\n//                       value: values.Product_to_get,\n//                       onChange: handleChange,\n//                       helperText: touched.Product_to_get && errors.Product_to_get,\n//                       error: Boolean(errors.Product_to_get && touched.Product_to_get),\n//                     }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12} md={6}>\n//                   <SimpleFormNew\n//                     props={{\n//                       type: 'text',\n//                       name: 'Description',\n//                       label: 'Description',\n//                       onBlur: handleBlur,\n//                       value: values.Description,\n//                       onChange: handleChange,\n//                       helperText: touched.Description && errors.Description,\n//                       error: Boolean(errors.Description && touched.Description),\n//                     }}\n//                   /> \n               \n//                 </Grid>\n                     \n          \n          \n//               </Grid>\n//               <LoadingButton\n//                 variant=\"contained\"\n//                 type=\"submit\"\n//                 loading={loading}\n//                 className={classes.btn2}\n//               >\n//                 Add Promos\n                \n//               </LoadingButton>\n//             </form>\n//           )}\n//         </Formik>\n//       </SimpleCard>\n//     </Container>\n//   );\n// };\n\n// export default Addpromos;\n\n\n\n const Addpromos= () => {\n  return(\n    <>\n    \n    \n    </>\n  )\n  }\n\nexport default Addpromos"],"mappingstB,oBACE,qCADF;AAMC,CAPF;;KAAMA,S;AASP,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}