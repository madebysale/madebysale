[{"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/index.jsx":"1","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/serviceWorker.js":"2","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/App.jsx":"3","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/SettingsContext.js":"4","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/Store.js":"5","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/JWTAuthContext.js":"6","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/routes.jsx":"7","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/index.js":"8","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/index.js":"9","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/axios.js":"10","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/MatxLayout.jsx":"11","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/notification.js":"12","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SimpleCard.jsx":"13","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx":"14","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxVerticalNav/MatxVerticalNav.jsx":"15","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Calendar/Session12Routes.js":"16","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/Session10Routes.js":"17","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/Session11Routes.js":"18","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/index.js":"19","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Typography.js":"20","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useSettings.js":"21","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Calendar/Calendar.jsx":"22","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SMSLog.jsx":"23","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/StaffReport.jsx":"24","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SMSSettings.jsx":"25","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SendSMS.jsx":"26","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/ListPages.jsx":"27","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/AddPage.jsx":"28","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SliderSettings.jsx":"29","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PurchasesReport.jsx":"30","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/CustomersReport.jsx":"31","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ExpensesReport.jsx":"32","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/MonthlyPurchases.jsx":"33","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/ShopSettings.jsx":"34","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/SuppliersReport.jsx":"35","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/TaxReport.jsx":"36","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PaymentsReport.jsx":"37","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProfitLoss.jsx":"38","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/DailySales.jsx":"39","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/MonthlySales.jsx":"40","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/BrandsReport.jsx":"41","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/CategoriesReport.jsx":"42","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/AdjustmentsReport.jsx":"43","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProductsReport.jsx":"44","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProductQuantityAlerts.jsx":"45","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/BestSellers.jsx":"46","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/SalesReport.jsx":"47","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/DailyPurchases.jsx":"48","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/WarehouseStockChart.jsx":"49","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/OverviewChart.jsx":"50","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/RegisterReport.jsx":"51","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1.jsx":"52","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Loadable.jsx":"53","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PieRechartComponent.jsx":"54","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/Years.jsx":"55","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/Calendars.jsx":"56","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/SimpleTable.jsx":"57","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Topbar.jsx":"58","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Sidenav.jsx":"59","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebar.jsx":"60","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useAuth.js":"61","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx":"62","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLoading.jsx":"63","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Footer.jsx":"64","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/StatCards.jsx":"65","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserListHead.jsx":"66","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserMoreMenu.jsx":"67","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserListToolbar.jsx":"68","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/SearchNotFound.jsx":"69","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/User.jsx":"70","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/Scrollbar.jsx":"71","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/Label.jsx":"72","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Sidenav.jsx":"73","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/utils/constant.js":"74","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/mockImages.jsx":"75","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/navigations.js":"76","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/CustomizedDialog.jsx":"77","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebarToggle.jsx":"78","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebarContent.jsx":"79","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Brand.jsx":"80","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx":"81","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ShoppingCart.jsx":"82","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/events.jsx":"83","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/NotificationBar/NotificationBar.jsx":"84","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Singleimage.jsx":"85","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleFormNew.jsx":"86","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteComboNew.jsx":"87","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/utils/utils.js":"88","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/themeColors.js":"89","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/NotificationContext.js":"90","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxCustomizer/MatxCustomizer.jsx":"91","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useNotification.js":"92","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/EcommerceActions.js":"93","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxCustomizer/BadgeSelected.jsx":"94","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/mock.js":"95","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/auth.js":"96","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/ecommerce.js":"97","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSuspense.jsx":"98","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/MatxTheme.jsx":"99","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/EchartTheme.jsx":"100","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxProgressBar.jsx":"101","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxMenu.jsx":"102","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSearchBox.jsx":"103","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLogo.jsx":"104","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ChatHead.jsx":"105","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ConfirmationDialog.jsx":"106","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ChatAvatar.jsx":"107","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Chatbox.jsx":"108","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Breadcrumb.jsx":"109","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenavContent.jsx":"110","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenavContainer.jsx":"111","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenav.jsx":"112","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/icons/GoogleIcon.jsx":"113","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/icons/FacebookIcon.jsx":"114","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/RootReducer.js":"115","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Session9Routes.js":"116","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/MaterialRoutes.js":"117","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/DashboardRoutes.js":"118","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/settings.js":"119","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Session8Routes.js":"120","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/Session7Routes.js":"121","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/Session5Routes.js":"122","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/Session4Routes.js":"123","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/session3Routes.js":"124","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Session2Routes.js":"125","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/SessionRoutes.js":"126","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/Session6Routes.js":"127","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Session1Routes.js":"128","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/NotFound.jsx":"129","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/ChartsRoute.jsx":"130","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/auth/AuthGuard.jsx":"131","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/initThemes.js":"132","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Settings.js":"133","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/auth/authRoles.js":"134","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AppAutoComplete.jsx":"135","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/AppDialog.jsx":"136","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/Analytics.jsx":"137","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Appuploadimage.jsx":"138","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/AppForm.jsx":"139","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/AppTable.jsx":"140","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Backups.jsx":"141","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/AppExpansionPanel.jsx":"142","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/AppSnackbar.jsx":"143","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/AppSlider.jsx":"144","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/AppSwitch.jsx":"145","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/AppRadio.jsx":"146","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/AppMenu.jsx":"147","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/ck/Appeditor.jsx":"148","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/icons/AppIcon.jsx":"149","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/AppCheckbox.jsx":"150","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/AppButton.jsx":"151","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Productdetail.jsx":"152","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Editproduct.jsx":"153","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Stockdetails.jsx":"154","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Profile.jsx":"155","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Conutstock.jsx":"156","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/StockCounts.jsx":"157","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/AddAdjustment.jsx":"158","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/QuantityAdjustments.jsx":"159","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/ImportProducts.jsx":"160","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/PrintBarcode.jsx":"161","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/ListProducts.jsx":"162","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/AddReturn.jsx":"163","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/AddProduct.jsx":"164","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/ListReturns.jsx":"165","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/AppEchart.jsx":"166","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/JwtRegister.jsx":"167","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/ForgotPassword.jsx":"168","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/JwtLogin.jsx":"169","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/GiftCards.jsx":"170","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Deliveries.jsx":"171","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/PosSales.jsx":"172","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Addsalecsv.jsx":"173","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Addsales.jsx":"174","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/SalesList.jsx":"175","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/Addquotation.jsx":"176","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/themeOptions.js":"177","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/ListPurchases.jsx":"178","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/Listquotation.jsx":"179","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/ListExpenses.jsx":"180","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddPurchase.jsx":"181","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddPurchaseCSV.jsx":"182","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddExpense.jsx":"183","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleForm.jsx":"184","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Multipleimage.jsx":"185","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/Addfeild.jsx":"186","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/Date.jsx":"187","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/UpgradeCard.jsx":"188","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/TopSellingTable.jsx":"189","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Fileattachment.jsx":"190","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/SimpleRadioNew.jsx":"191","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleForms.jsx":"192","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/SimpleRadio.jsx":"193","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/Pdfdownloadbutton.jsx":"194","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/FormGroupCheckbox.jsx":"195","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SimpleCheckbox.jsx":"196","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/LineChart.jsx":"197","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/Doughnut.jsx":"198","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/components.js":"199","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/DDbutton.js":"200","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/ComparisonChart.jsx":"201","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/Searchtable.jsx":"202","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useBrand.js":"203","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/AreaChart.jsx":"204","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/Showhideformcheckbox.jsx":"205","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SearchwithAadtable.jsx":"206","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteComboWithIdValue.jsx":"207","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/LabelledCheckbox.jsx":"208","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/Dbutton.jsx":"209","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/Countstack.jsx":"210","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteCombo.jsx":"211","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/SimpleMenu.jsx":"212","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/SelectedMenu.jsx":"213","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/MaxHeightMenu.jsx":"214","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SearchtableNew.jsx":"215","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/StandaloneRadio.jsx":"216","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/SijmpleSwitch.jsx":"217","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/PlacingRadioLabel.jsx":"218","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/PlacingSwitchLabel.jsx":"219","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/LabelledSwitch.jsx":"220","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/FormGroupSwitch.jsx":"221","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/CustomizedSwitch.jsx":"222","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/VerticalSlider.jsx":"223","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/CustomizedMenu.jsx":"224","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/InputSlider.jsx":"225","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/ContinuousSlider.jsx":"226","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/RangeSlider.jsx":"227","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/TransitionSnackbar.jsx":"228","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/DiscreteSlider.jsx":"229","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/SimpleSnackbar.jsx":"230","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/StackedSnackbar.jsx":"231","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/DirectionSnackbar.jsx":"232","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/PositionedSnackbar.jsx":"233","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/LongLengthSnackbar.jsx":"234","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/CustomizedSnackbar.jsx":"235","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/SimpleExpansionPanel.jsx":"236","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/DetailedExpansionPanel.jsx":"237","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx":"238","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/ControlledAccordion.jsx":"239","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/RowCards.jsx":"240","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/CustomizedExpansionPanel.jsx":"241","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/StatCards2.jsx":"242","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/Doughnut.jsx":"243","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/Campaigns.jsx":"244","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/SimpleDialog.jsx":"245","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/SimpleAlerts.jsx":"246","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/ResponsiveDialog.jsx":"247","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/OptimalSizeDialog.jsx":"248","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/FullScreenDialog.jsx":"249","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/FormDialog.jsx":"250","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/DialogTransition.jsx":"251","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/ConfirmationDialog.jsx":"252","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/BadgeAutocomplete.jsx":"253","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/AddTransferCSV.jsx":"254","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/AddTransfer.jsx":"255","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/ListTransfers.jsx":"256","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListSuppliers.jsx":"257","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddSupplier.jsx":"258","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListCustomers.jsx":"259","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddBiller.jsx":"260","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddCustomer.jsx":"261","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListUsers.jsx":"262","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddUser.jsx":"263","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListBillers.jsx":"264","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Notifications.jsx":"265","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Addnotification.jsx":"266","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/GroupPermissions.jsx":"267","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EmailTemplates.jsx":"268","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Warehouses.jsx":"269","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/TaxRates.jsx":"270","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Brands.jsx":"271","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Variants.jsx":"272","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ExpenseCategories.jsx":"273","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Units.jsx":"274","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/PriceGroups.jsx":"275","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Categories.jsx":"276","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/CustomerGroups.jsx":"277","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Currencies.jsx":"278","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ChangeLogo.jsx":"279","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPrinters.jsx":"280","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Promos.jsx":"281","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPrinter.jsx":"282","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/POSSettings.jsx":"283","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/BrandContext.js":"284","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/BrandReducer.js":"285","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/NotificationReducer.js":"286","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/NavigationReducer.js":"287","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/EcommerceReducer.js":"288","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/SystemSettings.jsx":"289","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/BrandActions.js":"290","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/NavigationAction.js":"291","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/NotificationActions.js":"292","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCurrencies.js":"293","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCustomerGroups.js":"294","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddExpenseCategories.jsx":"295","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddUnits.jsx":"296","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddVariants.jsx":"297","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddTaxRates.jsx":"298","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPriceGroups.jsx":"299","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddBrands.jsx":"300","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCategories.js":"301","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddWareHouses.jsx":"302","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCategories.js":"303","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPromos.js":"304","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPromos.jsx":"305","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCurrenies.js":"306","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListExpenseCategories.js":"307","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListUnits.js":"308","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPriceGroups.js":"309","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListBrands.js":"310","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListVariants.js":"311","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListWareHouses.js":"312","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListTaxRates.js":"313","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCurrencies.js":"314","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPromos.js":"315","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditBrands.js":"316","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCategories.js":"317","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPrint.js":"318","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPrinter.js":"319","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCustomerGroups.js":"320","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCustomerGroups.js":"321","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditExpenseCategories.js":"322","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditUnits.js":"323","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditTaxRates.js":"324","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditVariants.js":"325","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditWareHouses.js":"326","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPriceGroups.js":"327","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/GroupProductPrices.js":"328","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/PrintBarcode.js":"329"},{"size":848,"mtime":1655822386000,"results":"330","hashOfConfig":"331"},{"size":4933,"mtime":1655822386000,"results":"332","hashOfConfig":"331"},{"size":649,"mtime":1667396500000,"results":"333","hashOfConfig":"331"},{"size":878,"mtime":1655822386000,"results":"334","hashOfConfig":"331"},{"size":549,"mtime":1655822386000,"results":"335","hashOfConfig":"331"},{"size":4806,"mtime":1670564236670,"results":"336","hashOfConfig":"331"},{"size":1888,"mtime":1664456864000,"results":"337","hashOfConfig":"331"},{"size":130,"mtime":1655822386000,"results":"338","hashOfConfig":"331"},{"size":1706,"mtime":1663754380000,"results":"339","hashOfConfig":"331"},{"size":264,"mtime":1655822386000,"results":"340","hashOfConfig":"331"},{"size":374,"mtime":1655822386000,"results":"341","hashOfConfig":"331"},{"size":1884,"mtime":1655822386000,"results":"342","hashOfConfig":"331"},{"size":821,"mtime":1665474468000,"results":"343","hashOfConfig":"331"},{"size":4420,"mtime":1663837616000,"results":"344","hashOfConfig":"331"},{"size":5455,"mtime":1663845364000,"results":"345","hashOfConfig":"331"},{"size":255,"mtime":1664456818000,"results":"346","hashOfConfig":"331"},{"size":3293,"mtime":1663760218000,"results":"347","hashOfConfig":"331"},{"size":1009,"mtime":1663767386000,"results":"348","hashOfConfig":"331"},{"size":115,"mtime":1655822386000,"results":"349","hashOfConfig":"331"},{"size":4413,"mtime":1663839594000,"results":"350","hashOfConfig":"331"},{"size":177,"mtime":1655822386000,"results":"351","hashOfConfig":"331"},{"size":827,"mtime":1664860598000,"results":"352","hashOfConfig":"331"},{"size":2079,"mtime":1666011462000,"results":"353","hashOfConfig":"331"},{"size":766,"mtime":1663762960000,"results":"354","hashOfConfig":"331"},{"size":3380,"mtime":1666011468000,"results":"355","hashOfConfig":"331"},{"size":4883,"mtime":1666011418000,"results":"356","hashOfConfig":"331"},{"size":744,"mtime":1666011398000,"results":"357","hashOfConfig":"331"},{"size":7069,"mtime":1666011390000,"results":"358","hashOfConfig":"331"},{"size":11118,"mtime":1666011446000,"results":"359","hashOfConfig":"331"},{"size":789,"mtime":1665475224000,"results":"360","hashOfConfig":"331"},{"size":789,"mtime":1665475116000,"results":"361","hashOfConfig":"331"},{"size":786,"mtime":1665475134000,"results":"362","hashOfConfig":"331"},{"size":781,"mtime":1665475166000,"results":"363","hashOfConfig":"331"},{"size":28868,"mtime":1666011434000,"results":"364","hashOfConfig":"331"},{"size":778,"mtime":1663762920000,"results":"365","hashOfConfig":"331"},{"size":760,"mtime":1663762724000,"results":"366","hashOfConfig":"331"},{"size":786,"mtime":1665475180000,"results":"367","hashOfConfig":"331"},{"size":11365,"mtime":1666010972000,"results":"368","hashOfConfig":"331"},{"size":794,"mtime":1664536648000,"results":"369","hashOfConfig":"331"},{"size":786,"mtime":1664536716000,"results":"370","hashOfConfig":"331"},{"size":780,"mtime":1665475086000,"results":"371","hashOfConfig":"331"},{"size":792,"mtime":1665475094000,"results":"372","hashOfConfig":"331"},{"size":795,"mtime":1665475042000,"results":"373","hashOfConfig":"331"},{"size":786,"mtime":1665475194000,"results":"374","hashOfConfig":"331"},{"size":845,"mtime":1665475188000,"results":"375","hashOfConfig":"331"},{"size":1739,"mtime":1665475068000,"results":"376","hashOfConfig":"331"},{"size":750,"mtime":1666010984000,"results":"377","hashOfConfig":"331"},{"size":792,"mtime":1665475124000,"results":"378","hashOfConfig":"331"},{"size":3876,"mtime":1666011026000,"results":"379","hashOfConfig":"331"},{"size":5815,"mtime":1666010956000,"results":"380","hashOfConfig":"331"},{"size":786,"mtime":1665475232000,"results":"381","hashOfConfig":"331"},{"size":4737,"mtime":1666013210000,"results":"382","hashOfConfig":"331"},{"size":247,"mtime":1655822386000,"results":"383","hashOfConfig":"331"},{"size":2428,"mtime":1664285494000,"results":"384","hashOfConfig":"331"},{"size":3972,"mtime":1664536642000,"results":"385","hashOfConfig":"331"},{"size":1077,"mtime":1665405184000,"results":"386","hashOfConfig":"331"},{"size":10098,"mtime":1670839458562,"results":"387","hashOfConfig":"331"},{"size":10453,"mtime":1666013202000,"results":"388","hashOfConfig":"331"},{"size":3071,"mtime":1666012834000,"results":"389","hashOfConfig":"331"},{"size":685,"mtime":1664879250000,"results":"390","hashOfConfig":"331"},{"size":160,"mtime":1655822386000,"results":"391","hashOfConfig":"331"},{"size":414,"mtime":1655822386000,"results":"392","hashOfConfig":"331"},{"size":691,"mtime":1655822386000,"results":"393","hashOfConfig":"331"},{"size":949,"mtime":1665474514000,"results":"394","hashOfConfig":"331"},{"size":1057,"mtime":1665063436000,"results":"395","hashOfConfig":"331"},{"size":1951,"mtime":1662450656000,"results":"396","hashOfConfig":"331"},{"size":8847,"mtime":1666185514000,"results":"397","hashOfConfig":"331"},{"size":2502,"mtime":1664777322000,"results":"398","hashOfConfig":"331"},{"size":682,"mtime":1662448654000,"results":"399","hashOfConfig":"331"},{"size":743,"mtime":1662450882000,"results":"400","hashOfConfig":"331"},{"size":1486,"mtime":1662467032000,"results":"401","hashOfConfig":"331"},{"size":2419,"mtime":1663841506000,"results":"402","hashOfConfig":"331"},{"size":1474,"mtime":1655822386000,"results":"403","hashOfConfig":"331"},{"size":172,"mtime":1655822386000,"results":"404","hashOfConfig":"331"},{"size":348,"mtime":1662448932000,"results":"405","hashOfConfig":"331"},{"size":11630,"mtime":1671085596764,"results":"406","hashOfConfig":"331"},{"size":2417,"mtime":1664803184000,"results":"407","hashOfConfig":"331"},{"size":1207,"mtime":1655822386000,"results":"408","hashOfConfig":"331"},{"size":1800,"mtime":1664879058000,"results":"409","hashOfConfig":"331"},{"size":1222,"mtime":1664869414000,"results":"410","hashOfConfig":"331"},{"size":227,"mtime":1655822386000,"results":"411","hashOfConfig":"331"},{"size":5721,"mtime":1665468336000,"results":"412","hashOfConfig":"331"},{"size":4067,"mtime":1665405192000,"results":"413","hashOfConfig":"331"},{"size":5304,"mtime":1665468302000,"results":"414","hashOfConfig":"331"},{"size":779,"mtime":1665137738000,"results":"415","hashOfConfig":"331"},{"size":1410,"mtime":1666185512000,"results":"416","hashOfConfig":"331"},{"size":2420,"mtime":1665991258000,"results":"417","hashOfConfig":"331"},{"size":4642,"mtime":1655822386000,"results":"418","hashOfConfig":"331"},{"size":7312,"mtime":1663656762000,"results":"419","hashOfConfig":"331"},{"size":2852,"mtime":1655822386000,"results":"420","hashOfConfig":"331"},{"size":6969,"mtime":1655822386000,"results":"421","hashOfConfig":"331"},{"size":197,"mtime":1655822386000,"results":"422","hashOfConfig":"331"},{"size":2297,"mtime":1655822386000,"results":"423","hashOfConfig":"331"},{"size":213,"mtime":1655822386000,"results":"424","hashOfConfig":"331"},{"size":141,"mtime":1655822386000,"results":"425","hashOfConfig":"331"},{"size":3164,"mtime":1655822386000,"results":"426","hashOfConfig":"331"},{"size":15049,"mtime":1655822386000,"results":"427","hashOfConfig":"331"},{"size":224,"mtime":1655822386000,"results":"428","hashOfConfig":"331"},{"size":399,"mtime":1663845336000,"results":"429","hashOfConfig":"331"},{"size":980,"mtime":1655822386000,"results":"430","hashOfConfig":"331"},{"size":1023,"mtime":1655822386000,"results":"431","hashOfConfig":"331"},{"size":1675,"mtime":1663839070000,"results":"432","hashOfConfig":"331"},{"size":1616,"mtime":1663755168000,"results":"433","hashOfConfig":"331"},{"size":2220,"mtime":1663315308000,"results":"434","hashOfConfig":"331"},{"size":1223,"mtime":1663755174000,"results":"435","hashOfConfig":"331"},{"size":1882,"mtime":1655822386000,"results":"436","hashOfConfig":"331"},{"size":697,"mtime":1655822386000,"results":"437","hashOfConfig":"331"},{"size":9528,"mtime":1655822386000,"results":"438","hashOfConfig":"331"},{"size":2121,"mtime":1665468942000,"results":"439","hashOfConfig":"331"},{"size":272,"mtime":1663656664000,"results":"440","hashOfConfig":"331"},{"size":283,"mtime":1655822386000,"results":"441","hashOfConfig":"331"},{"size":1035,"mtime":1663656610000,"results":"442","hashOfConfig":"331"},{"size":550,"mtime":1655822386000,"results":"443","hashOfConfig":"331"},{"size":472,"mtime":1655822386000,"results":"444","hashOfConfig":"331"},{"size":443,"mtime":1667395431000,"results":"445","hashOfConfig":"331"},{"size":7944,"mtime":1671167976318,"results":"446","hashOfConfig":"331"},{"size":2274,"mtime":1662988842000,"results":"447","hashOfConfig":"331"},{"size":347,"mtime":1655822386000,"results":"448","hashOfConfig":"331"},{"size":767,"mtime":1663845334000,"results":"449","hashOfConfig":"331"},{"size":434,"mtime":1665121566000,"results":"450","hashOfConfig":"331"},{"size":1148,"mtime":1666010840000,"results":"451","hashOfConfig":"331"},{"size":553,"mtime":1663746390000,"results":"452","hashOfConfig":"331"},{"size":815,"mtime":1663324054000,"results":"453","hashOfConfig":"331"},{"size":419,"mtime":1663320924000,"results":"454","hashOfConfig":"331"},{"size":992,"mtime":1664455442000,"results":"455","hashOfConfig":"331"},{"size":631,"mtime":1663224322000,"results":"456","hashOfConfig":"331"},{"size":389,"mtime":1663745688000,"results":"457","hashOfConfig":"331"},{"size":1736,"mtime":1665127228000,"results":"458","hashOfConfig":"331"},{"size":997,"mtime":1655822386000,"results":"459","hashOfConfig":"331"},{"size":336,"mtime":1655822386000,"results":"460","hashOfConfig":"331"},{"size":1232,"mtime":1655822386000,"results":"461","hashOfConfig":"331"},{"size":397,"mtime":1663845328000,"results":"462","hashOfConfig":"331"},{"size":436,"mtime":1663835156000,"results":"463","hashOfConfig":"331"},{"size":288,"mtime":1655822386000,"results":"464","hashOfConfig":"331"},{"size":957,"mtime":1663571500000,"results":"465","hashOfConfig":"331"},{"size":1999,"mtime":1655822386000,"results":"466","hashOfConfig":"331"},{"size":9350,"mtime":1665063434000,"results":"467","hashOfConfig":"331"},{"size":977,"mtime":1662988838000,"results":"468","hashOfConfig":"331"},{"size":1020,"mtime":1663063700000,"results":"469","hashOfConfig":"331"},{"size":701,"mtime":1663223490000,"results":"470","hashOfConfig":"331"},{"size":644,"mtime":1666011098000,"results":"471","hashOfConfig":"331"},{"size":1405,"mtime":1655822386000,"results":"472","hashOfConfig":"331"},{"size":1929,"mtime":1655822386000,"results":"473","hashOfConfig":"331"},{"size":1386,"mtime":1655822386000,"results":"474","hashOfConfig":"331"},{"size":1442,"mtime":1655822386000,"results":"475","hashOfConfig":"331"},{"size":1249,"mtime":1663067482000,"results":"476","hashOfConfig":"331"},{"size":1212,"mtime":1655822386000,"results":"477","hashOfConfig":"331"},{"size":1228,"mtime":1663845304000,"results":"478","hashOfConfig":"331"},{"size":17217,"mtime":1663332832000,"results":"479","hashOfConfig":"331"},{"size":1662,"mtime":1663140360000,"results":"480","hashOfConfig":"331"},{"size":5297,"mtime":1663845344000,"results":"481","hashOfConfig":"331"},{"size":9653,"mtime":1665474726000,"results":"482","hashOfConfig":"331"},{"size":12951,"mtime":1666185516000,"results":"483","hashOfConfig":"331"},{"size":4434,"mtime":1666010600000,"results":"484","hashOfConfig":"331"},{"size":20373,"mtime":1668682537000,"results":"485","hashOfConfig":"331"},{"size":5257,"mtime":1666010558000,"results":"486","hashOfConfig":"331"},{"size":777,"mtime":1665474778000,"results":"487","hashOfConfig":"331"},{"size":6790,"mtime":1666083964000,"results":"488","hashOfConfig":"331"},{"size":838,"mtime":1665474768000,"results":"489","hashOfConfig":"331"},{"size":2894,"mtime":1666010576000,"results":"490","hashOfConfig":"331"},{"size":4898,"mtime":1666004558000,"results":"491","hashOfConfig":"331"},{"size":1467,"mtime":1670566007621,"results":"492","hashOfConfig":"331"},{"size":11838,"mtime":1666011050000,"results":"493","hashOfConfig":"331"},{"size":25634,"mtime":1668325296000,"results":"494","hashOfConfig":"331"},{"size":789,"mtime":1666011054000,"results":"495","hashOfConfig":"331"},{"size":1767,"mtime":1664285492000,"results":"496","hashOfConfig":"331"},{"size":5729,"mtime":1665336320000,"results":"497","hashOfConfig":"331"},{"size":2102,"mtime":1655822386000,"results":"498","hashOfConfig":"331"},{"size":5291,"mtime":1670564712500,"results":"499","hashOfConfig":"331"},{"size":766,"mtime":1663313638000,"results":"500","hashOfConfig":"331"},{"size":762,"mtime":1663313572000,"results":"501","hashOfConfig":"331"},{"size":757,"mtime":1663313648000,"results":"502","hashOfConfig":"331"},{"size":17165,"mtime":1666011336000,"results":"503","hashOfConfig":"331"},{"size":14905,"mtime":1665569256000,"results":"504","hashOfConfig":"331"},{"size":760,"mtime":1663313400000,"results":"505","hashOfConfig":"331"},{"size":12744,"mtime":1666010914000,"results":"506","hashOfConfig":"331"},{"size":465,"mtime":1663845324000,"results":"507","hashOfConfig":"331"},{"size":783,"mtime":1665474978000,"results":"508","hashOfConfig":"331"},{"size":783,"mtime":1666010924000,"results":"509","hashOfConfig":"331"},{"size":780,"mtime":1665474968000,"results":"510","hashOfConfig":"331"},{"size":13357,"mtime":1666003864000,"results":"511","hashOfConfig":"331"},{"size":14647,"mtime":1666003882000,"results":"512","hashOfConfig":"331"},{"size":8175,"mtime":1666003860000,"results":"513","hashOfConfig":"331"},{"size":660,"mtime":1663936364000,"results":"514","hashOfConfig":"331"},{"size":794,"mtime":1665137638000,"results":"515","hashOfConfig":"331"},{"size":4831,"mtime":1666097446000,"results":"516","hashOfConfig":"331"},{"size":498,"mtime":1663653974000,"results":"517","hashOfConfig":"331"},{"size":1481,"mtime":1663845348000,"results":"518","hashOfConfig":"331"},{"size":6793,"mtime":1665063430000,"results":"519","hashOfConfig":"331"},{"size":3409,"mtime":1665127868000,"results":"520","hashOfConfig":"331"},{"size":1572,"mtime":1665991244000,"results":"521","hashOfConfig":"331"},{"size":990,"mtime":1665393400000,"results":"522","hashOfConfig":"331"},{"size":1329,"mtime":1664890784000,"results":"523","hashOfConfig":"331"},{"size":528,"mtime":1666010326000,"results":"524","hashOfConfig":"331"},{"size":7863,"mtime":1667382007000,"results":"525","hashOfConfig":"331"},{"size":989,"mtime":1665727212000,"results":"526","hashOfConfig":"331"},{"size":1644,"mtime":1663832428000,"results":"527","hashOfConfig":"331"},{"size":1891,"mtime":1663832428000,"results":"528","hashOfConfig":"331"},{"size":3073,"mtime":1664886636000,"results":"529","hashOfConfig":"331"},{"size":739,"mtime":1665474448000,"results":"530","hashOfConfig":"331"},{"size":1503,"mtime":1663832428000,"results":"531","hashOfConfig":"331"},{"size":6287,"mtime":1666096114000,"results":"532","hashOfConfig":"331"},{"size":162,"mtime":1667390537000,"results":"533","hashOfConfig":"331"},{"size":619,"mtime":1655822386000,"results":"534","hashOfConfig":"331"},{"size":1643,"mtime":1667382359000,"results":"535","hashOfConfig":"331"},{"size":6711,"mtime":1667382296000,"results":"536","hashOfConfig":"331"},{"size":2460,"mtime":1668325062000,"results":"537","hashOfConfig":"331"},{"size":2603,"mtime":1666010454000,"results":"538","hashOfConfig":"331"},{"size":699,"mtime":1663930254000,"results":"539","hashOfConfig":"331"},{"size":2359,"mtime":1666005612000,"results":"540","hashOfConfig":"331"},{"size":1746,"mtime":1663936354000,"results":"541","hashOfConfig":"331"},{"size":857,"mtime":1655822386000,"results":"542","hashOfConfig":"331"},{"size":1757,"mtime":1655822386000,"results":"543","hashOfConfig":"331"},{"size":1239,"mtime":1655822386000,"results":"544","hashOfConfig":"331"},{"size":6339,"mtime":1665553954000,"results":"545","hashOfConfig":"331"},{"size":1832,"mtime":1663223480000,"results":"546","hashOfConfig":"331"},{"size":1226,"mtime":1655822386000,"results":"547","hashOfConfig":"331"},{"size":1201,"mtime":1662447024000,"results":"548","hashOfConfig":"331"},{"size":1734,"mtime":1655822386000,"results":"549","hashOfConfig":"331"},{"size":1205,"mtime":1655822386000,"results":"550","hashOfConfig":"331"},{"size":1375,"mtime":1655822386000,"results":"551","hashOfConfig":"331"},{"size":6423,"mtime":1655822386000,"results":"552","hashOfConfig":"331"},{"size":1440,"mtime":1655822386000,"results":"553","hashOfConfig":"331"},{"size":2124,"mtime":1655822386000,"results":"554","hashOfConfig":"331"},{"size":1460,"mtime":1655822386000,"results":"555","hashOfConfig":"331"},{"size":801,"mtime":1655822386000,"results":"556","hashOfConfig":"331"},{"size":641,"mtime":1655822386000,"results":"557","hashOfConfig":"331"},{"size":1063,"mtime":1655822386000,"results":"558","hashOfConfig":"331"},{"size":1961,"mtime":1655822386000,"results":"559","hashOfConfig":"331"},{"size":1244,"mtime":1655822386000,"results":"560","hashOfConfig":"331"},{"size":811,"mtime":1655822386000,"results":"561","hashOfConfig":"331"},{"size":1320,"mtime":1655822386000,"results":"562","hashOfConfig":"331"},{"size":1423,"mtime":1655822386000,"results":"563","hashOfConfig":"331"},{"size":1029,"mtime":1655822386000,"results":"564","hashOfConfig":"331"},{"size":1890,"mtime":1655822386000,"results":"565","hashOfConfig":"331"},{"size":2017,"mtime":1655822386000,"results":"566","hashOfConfig":"331"},{"size":2452,"mtime":1655822386000,"results":"567","hashOfConfig":"331"},{"size":1948,"mtime":1655822386000,"results":"568","hashOfConfig":"331"},{"size":3537,"mtime":1655822386000,"results":"569","hashOfConfig":"331"},{"size":2662,"mtime":1655822386000,"results":"570","hashOfConfig":"331"},{"size":3353,"mtime":1655822386000,"results":"571","hashOfConfig":"331"},{"size":2497,"mtime":1655822386000,"results":"572","hashOfConfig":"331"},{"size":3255,"mtime":1663832428000,"results":"573","hashOfConfig":"331"},{"size":1240,"mtime":1655822386000,"results":"574","hashOfConfig":"331"},{"size":2586,"mtime":1655822386000,"results":"575","hashOfConfig":"331"},{"size":1548,"mtime":1664881440000,"results":"576","hashOfConfig":"331"},{"size":1719,"mtime":1655822386000,"results":"577","hashOfConfig":"331"},{"size":3231,"mtime":1655822386000,"results":"578","hashOfConfig":"331"},{"size":2036,"mtime":1655822386000,"results":"579","hashOfConfig":"331"},{"size":1642,"mtime":1655822386000,"results":"580","hashOfConfig":"331"},{"size":1776,"mtime":1655822386000,"results":"581","hashOfConfig":"331"},{"size":3949,"mtime":1655822386000,"results":"582","hashOfConfig":"331"},{"size":5528,"mtime":1662445718000,"results":"583","hashOfConfig":"331"},{"size":12146,"mtime":1670587394898,"results":"584","hashOfConfig":"331"},{"size":10167,"mtime":1666011282000,"results":"585","hashOfConfig":"331"},{"size":756,"mtime":1666011320000,"results":"586","hashOfConfig":"331"},{"size":772,"mtime":1663746976000,"results":"587","hashOfConfig":"331"},{"size":15048,"mtime":1666010686000,"results":"588","hashOfConfig":"331"},{"size":772,"mtime":1663746950000,"results":"589","hashOfConfig":"331"},{"size":17044,"mtime":1666010618000,"results":"590","hashOfConfig":"331"},{"size":17439,"mtime":1666010654000,"results":"591","hashOfConfig":"331"},{"size":783,"mtime":1664197714000,"results":"592","hashOfConfig":"331"},{"size":11955,"mtime":1666010716000,"results":"593","hashOfConfig":"331"},{"size":766,"mtime":1663746848000,"results":"594","hashOfConfig":"331"},{"size":1690,"mtime":1665123202000,"results":"595","hashOfConfig":"331"},{"size":4059,"mtime":1665126418000,"results":"596","hashOfConfig":"331"},{"size":765,"mtime":1666011170000,"results":"597","hashOfConfig":"331"},{"size":666,"mtime":1666011150000,"results":"598","hashOfConfig":"331"},{"size":746,"mtime":1666011248000,"results":"599","hashOfConfig":"331"},{"size":741,"mtime":1666011206000,"results":"600","hashOfConfig":"331"},{"size":716,"mtime":1666011114000,"results":"601","hashOfConfig":"331"},{"size":740,"mtime":1666011242000,"results":"602","hashOfConfig":"331"},{"size":767,"mtime":1666011164000,"results":"603","hashOfConfig":"331"},{"size":713,"mtime":1666011236000,"results":"604","hashOfConfig":"331"},{"size":749,"mtime":1670925731832,"results":"605","hashOfConfig":"331"},{"size":746,"mtime":1670840665469,"results":"606","hashOfConfig":"331"},{"size":759,"mtime":1666013206000,"results":"607","hashOfConfig":"331"},{"size":746,"mtime":1666011136000,"results":"608","hashOfConfig":"331"},{"size":1617,"mtime":1666011126000,"results":"609","hashOfConfig":"331"},{"size":753,"mtime":1670849588023,"results":"610","hashOfConfig":"331"},{"size":716,"mtime":1666010320000,"results":"611","hashOfConfig":"331"},{"size":7963,"mtime":1670498164700,"results":"612","hashOfConfig":"331"},{"size":40758,"mtime":1666011182000,"results":"613","hashOfConfig":"331"},{"size":2666,"mtime":1667395615000,"results":"614","hashOfConfig":"331"},{"size":567,"mtime":1667391093000,"results":"615","hashOfConfig":"331"},{"size":644,"mtime":1655822386000,"results":"616","hashOfConfig":"331"},{"size":408,"mtime":1655822386000,"results":"617","hashOfConfig":"331"},{"size":1420,"mtime":1655822386000,"results":"618","hashOfConfig":"331"},{"size":83207,"mtime":1666011198000,"results":"619","hashOfConfig":"331"},{"size":1054,"mtime":1667391727000,"results":"620","hashOfConfig":"331"},{"size":773,"mtime":1655822386000,"results":"621","hashOfConfig":"331"},{"size":1112,"mtime":1655822386000,"results":"622","hashOfConfig":"331"},{"size":5636,"mtime":1671015416510,"results":"623","hashOfConfig":"331"},{"size":4341,"mtime":1670567639144,"results":"624","hashOfConfig":"331"},{"size":4123,"mtime":1671091125232,"results":"625","hashOfConfig":"331"},{"size":5057,"mtime":1670589818721,"results":"626","hashOfConfig":"331"},{"size":3347,"mtime":1670827183066,"results":"627","hashOfConfig":"331"},{"size":5695,"mtime":1670589754472,"results":"628","hashOfConfig":"331"},{"size":3369,"mtime":1671103893306,"results":"629","hashOfConfig":"331"},{"size":6115,"mtime":1670589851489,"results":"630","hashOfConfig":"331"},{"size":6950,"mtime":1670831615641,"results":"631","hashOfConfig":"331"},{"size":8611,"mtime":1670589408113,"results":"632","hashOfConfig":"331"},{"size":12614,"mtime":1671167900260,"results":"633","hashOfConfig":"331"},{"size":12603,"mtime":1671020369686,"results":"634","hashOfConfig":"331"},{"size":7032,"mtime":1671016191798,"results":"635","hashOfConfig":"331"},{"size":12394,"mtime":1671020255528,"results":"636","hashOfConfig":"331"},{"size":11838,"mtime":1671095324771,"results":"637","hashOfConfig":"331"},{"size":12365,"mtime":1671097106153,"results":"638","hashOfConfig":"331"},{"size":11614,"mtime":1671108595311,"results":"639","hashOfConfig":"331"},{"size":11834,"mtime":1671100670806,"results":"640","hashOfConfig":"331"},{"size":11273,"mtime":1671107213084,"results":"641","hashOfConfig":"331"},{"size":12832,"mtime":1671102563571,"results":"642","hashOfConfig":"331"},{"size":11452,"mtime":1671101309187,"results":"643","hashOfConfig":"331"},{"size":5641,"mtime":1671015568492,"results":"644","hashOfConfig":"331"},{"size":7036,"mtime":1671103602942,"results":"645","hashOfConfig":"331"},{"size":6118,"mtime":1671021465011,"results":"646","hashOfConfig":"331"},{"size":6954,"mtime":1671023869014,"results":"647","hashOfConfig":"331"},{"size":12602,"mtime":1671084379578,"results":"648","hashOfConfig":"331"},{"size":7967,"mtime":1671083874493,"results":"649","hashOfConfig":"331"},{"size":11578,"mtime":1671086997562,"results":"650","hashOfConfig":"331"},{"size":4345,"mtime":1671086444511,"results":"651","hashOfConfig":"331"},{"size":4129,"mtime":1671091136285,"results":"652","hashOfConfig":"331"},{"size":5061,"mtime":1671097264617,"results":"653","hashOfConfig":"331"},{"size":5719,"mtime":1671101363268,"results":"654","hashOfConfig":"331"},{"size":3351,"mtime":1671104026471,"results":"655","hashOfConfig":"331"},{"size":8615,"mtime":1671099351190,"results":"656","hashOfConfig":"331"},{"size":3373,"mtime":1671099809857,"results":"657","hashOfConfig":"331"},{"size":12141,"mtime":1671109910315,"results":"658","hashOfConfig":"331"},{"size":10107,"mtime":1671173307218,"results":"659","hashOfConfig":"331"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},"u8dioy",{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"662"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"662"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"662"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"662"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"662"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"662"},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"662"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"662"},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"662"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"662"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"662"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"662"},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"662"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"662"},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"662"},{"filePath":"786","messages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790","usedDeprecatedRules":"662"},{"filePath":"791","messages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"662"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"662"},{"filePath":"799","messages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"801","messages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"803","messages":"804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"807","messages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"662"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"662"},{"filePath":"813","messages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"662"},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"662"},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"662"},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"662"},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"831","messages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"833","messages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"662"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"842","messages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"662"},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851","usedDeprecatedRules":"662"},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"662"},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857","usedDeprecatedRules":"662"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860","usedDeprecatedRules":"662"},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"662"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"662"},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"869","messages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"871","messages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"877","messages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"881","messages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"883","messages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"887","messages":"888","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"893","messages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"897","messages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"899","messages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"905","messages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"907","messages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"909","messages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"662"},{"filePath":"912","messages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"914","messages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"918","messages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"924","messages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"930","messages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"932","messages":"933","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"936","messages":"937","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"938","messages":"939","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"942","messages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"944","messages":"945","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"946","messages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"948","messages":"949","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"950","messages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"952","messages":"953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"954","messages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"960","messages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"964","messages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"966","messages":"967","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"662"},{"filePath":"969","messages":"970","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"971","messages":"972","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"973","messages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"975","messages":"976","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"977","messages":"978","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"979","messages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"981","messages":"982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"983","messages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"985","messages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"987","messages":"988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"989","messages":"990","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"991","usedDeprecatedRules":"662"},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"996","messages":"997","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1000","usedDeprecatedRules":"662"},{"filePath":"1001","messages":"1002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1003","messages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005","usedDeprecatedRules":"662"},{"filePath":"1006","messages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1008","usedDeprecatedRules":"662"},{"filePath":"1009","messages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1011","usedDeprecatedRules":"662"},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1014","messages":"1015","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1016","usedDeprecatedRules":"662"},{"filePath":"1017","messages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1019","messages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023","usedDeprecatedRules":"662"},{"filePath":"1024","messages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1026","usedDeprecatedRules":"662"},{"filePath":"1027","messages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1029","usedDeprecatedRules":"662"},{"filePath":"1030","messages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1032","usedDeprecatedRules":"662"},{"filePath":"1033","messages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1035","usedDeprecatedRules":"662"},{"filePath":"1036","messages":"1037","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1038","messages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1040","messages":"1041","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1042","messages":"1043","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1044","messages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1046","usedDeprecatedRules":"662"},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1049","usedDeprecatedRules":"662"},{"filePath":"1050","messages":"1051","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1052","usedDeprecatedRules":"662"},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055","usedDeprecatedRules":"662"},{"filePath":"1056","messages":"1057","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058","usedDeprecatedRules":"662"},{"filePath":"1059","messages":"1060","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1061","usedDeprecatedRules":"662"},{"filePath":"1062","messages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1064","usedDeprecatedRules":"662"},{"filePath":"1065","messages":"1066","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1067","messages":"1068","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1069","messages":"1070","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1071","messages":"1072","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1073","messages":"1074","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1075","usedDeprecatedRules":"662"},{"filePath":"1076","messages":"1077","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078","usedDeprecatedRules":"662"},{"filePath":"1079","messages":"1080","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1081","usedDeprecatedRules":"662"},{"filePath":"1082","messages":"1083","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1084","usedDeprecatedRules":"662"},{"filePath":"1085","messages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1087","usedDeprecatedRules":"662"},{"filePath":"1088","messages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1090","usedDeprecatedRules":"662"},{"filePath":"1091","messages":"1092","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1093","usedDeprecatedRules":"662"},{"filePath":"1094","messages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1096","messages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1098","usedDeprecatedRules":"662"},{"filePath":"1099","messages":"1100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1101","messages":"1102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1103","messages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105","usedDeprecatedRules":"662"},{"filePath":"1106","messages":"1107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1108","messages":"1109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1110","messages":"1111","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1112","usedDeprecatedRules":"662"},{"filePath":"1113","messages":"1114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1115","usedDeprecatedRules":"662"},{"filePath":"1116","messages":"1117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1118","messages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1120","messages":"1121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1122","messages":"1123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1124","messages":"1125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1126","messages":"1127","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1128","usedDeprecatedRules":"662"},{"filePath":"1129","messages":"1130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1131","messages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1133","messages":"1134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1135","usedDeprecatedRules":"662"},{"filePath":"1136","messages":"1137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1138","usedDeprecatedRules":"662"},{"filePath":"1139","messages":"1140","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1141","usedDeprecatedRules":"662"},{"filePath":"1142","messages":"1143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1144","messages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1146","usedDeprecatedRules":"662"},{"filePath":"1147","messages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149","usedDeprecatedRules":"662"},{"filePath":"1150","messages":"1151","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1152","usedDeprecatedRules":"662"},{"filePath":"1153","messages":"1154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1155","messages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1157","messages":"1158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1159","messages":"1160","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1161","usedDeprecatedRules":"662"},{"filePath":"1162","messages":"1163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1164","messages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1166","messages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1168","messages":"1169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1170","messages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1172","messages":"1173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1174","messages":"1175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1176","messages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1178","messages":"1179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1180","messages":"1181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1182","messages":"1183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1184","messages":"1185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1186","messages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1188","messages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1190","messages":"1191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1192","messages":"1193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1194","messages":"1195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1196","messages":"1197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1198","messages":"1199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1200","messages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1202","messages":"1203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1204","messages":"1205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1206","messages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1208","messages":"1209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1210","messages":"1211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1212","messages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1214","messages":"1215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1216","messages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1218","messages":"1219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1220","messages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1222","messages":"1223","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1224","usedDeprecatedRules":"662"},{"filePath":"1225","messages":"1226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1227","messages":"1228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1229","messages":"1230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1231","messages":"1232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1233","messages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1235","messages":"1236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1237","messages":"1238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1239","usedDeprecatedRules":"662"},{"filePath":"1240","messages":"1241","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1242","usedDeprecatedRules":"662"},{"filePath":"1243","messages":"1244","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1245","usedDeprecatedRules":"662"},{"filePath":"1246","messages":"1247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1248","messages":"1249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1250","usedDeprecatedRules":"662"},{"filePath":"1251","messages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253","usedDeprecatedRules":"662"},{"filePath":"1254","messages":"1255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1256","usedDeprecatedRules":"662"},{"filePath":"1257","messages":"1258","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1259","usedDeprecatedRules":"662"},{"filePath":"1260","messages":"1261","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1262","usedDeprecatedRules":"662"},{"filePath":"1263","messages":"1264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1265","usedDeprecatedRules":"662"},{"filePath":"1266","messages":"1267","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1268","usedDeprecatedRules":"662"},{"filePath":"1269","messages":"1270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1271","usedDeprecatedRules":"662"},{"filePath":"1272","messages":"1273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1274","usedDeprecatedRules":"662"},{"filePath":"1275","messages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1277","usedDeprecatedRules":"662"},{"filePath":"1278","messages":"1279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1280","messages":"1281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1282","messages":"1283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1284","messages":"1285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1286","messages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1288","messages":"1289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1290","messages":"1291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1292","messages":"1293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1294","messages":"1295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1296","messages":"1297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1298","messages":"1299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1300","messages":"1301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1302","messages":"1303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1304","usedDeprecatedRules":"662"},{"filePath":"1305","messages":"1306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1307","messages":"1308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1309","messages":"1310","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1311","usedDeprecatedRules":"662"},{"filePath":"1312","messages":"1313","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1314","usedDeprecatedRules":"662"},{"filePath":"1315","messages":"1316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1317","messages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1321","messages":"1322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1323","messages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1325","messages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1327","usedDeprecatedRules":"662"},{"filePath":"1328","messages":"1329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1330","messages":"1331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1332","messages":"1333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"662"},{"filePath":"1334","messages":"1335","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1336","usedDeprecatedRules":"662"},{"filePath":"1337","messages":"1338","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1339","usedDeprecatedRules":"662"},{"filePath":"1340","messages":"1341","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"662"},{"filePath":"1343","messages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1345","usedDeprecatedRules":"662"},{"filePath":"1346","messages":"1347","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1348","usedDeprecatedRules":"662"},{"filePath":"1349","messages":"1350","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"662"},{"filePath":"1352","messages":"1353","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1354","usedDeprecatedRules":"662"},{"filePath":"1355","messages":"1356","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1357","usedDeprecatedRules":"662"},{"filePath":"1358","messages":"1359","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1360","usedDeprecatedRules":"662"},{"filePath":"1361","messages":"1362","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1363","usedDeprecatedRules":"662"},{"filePath":"1364","messages":"1365","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1366","messages":"1367","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"662"},{"filePath":"1369","messages":"1370","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1371","usedDeprecatedRules":"662"},{"filePath":"1372","messages":"1373","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374","usedDeprecatedRules":"662"},{"filePath":"1375","messages":"1376","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"662"},{"filePath":"1378","messages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"662"},{"filePath":"1381","messages":"1382","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1383","usedDeprecatedRules":"662"},{"filePath":"1384","messages":"1385","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386","usedDeprecatedRules":"662"},{"filePath":"1387","messages":"1388","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1389","usedDeprecatedRules":"662"},{"filePath":"1390","messages":"1391","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1392","usedDeprecatedRules":"662"},{"filePath":"1393","messages":"1394","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1395","usedDeprecatedRules":"662"},{"filePath":"1396","messages":"1397","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1398","usedDeprecatedRules":"662"},{"filePath":"1399","messages":"1400","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401","usedDeprecatedRules":"662"},{"filePath":"1402","messages":"1403","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1404","usedDeprecatedRules":"662"},{"filePath":"1405","messages":"1406","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1407","usedDeprecatedRules":"662"},{"filePath":"1408","messages":"1409","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1410","usedDeprecatedRules":"662"},{"filePath":"1411","messages":"1412","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1413","usedDeprecatedRules":"662"},{"filePath":"1414","messages":"1415","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1416","usedDeprecatedRules":"662"},{"filePath":"1417","messages":"1418","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1419","usedDeprecatedRules":"662"},{"filePath":"1420","messages":"1421","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1422","usedDeprecatedRules":"662"},{"filePath":"1423","messages":"1424","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1425","usedDeprecatedRules":"662"},{"filePath":"1426","messages":"1427","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1428","usedDeprecatedRules":"662"},{"filePath":"1429","messages":"1430","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1431","usedDeprecatedRules":"662"},{"filePath":"1432","messages":"1433","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1434","usedDeprecatedRules":"662"},{"filePath":"1435","messages":"1436","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1437","usedDeprecatedRules":"662"},{"filePath":"1438","messages":"1439","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1440","usedDeprecatedRules":"662"},{"filePath":"1441","messages":"1442","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/index.jsx",[],["1443","1444"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/serviceWorker.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/App.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/SettingsContext.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/Store.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/JWTAuthContext.js",["1445"],"import React, { createContext, useEffect, useReducer } from 'react'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios.js'\nimport { MatxLoading } from 'app/components'\n\nconst initialState = {\n    isAuthenticated: false,\n    isInitialised: false,\n    user: null\n}\nconst isValidToken = (accessToken) => {\n    if (!accessToken) {\n        return false\n    }\n\n    const decodedToken = jwtDecode(accessToken)\n    const currentTime = Date.now() / 1000\n    return decodedToken.exp > currentTime\n}\nconst setSession = (accessToken) => {\n    if (accessToken) {\n        localStorage.setItem('accessToken', accessToken)\n        axios.defaults.headers.common['x-token'] = `${accessToken}`\n    } else {\n        localStorage.removeItem('accessToken')\n        delete axios.defaults.headers.common['x-token']\n    }\n}\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'INIT':\n            {\n                const { isAuthenticated, user } = action.payload\n\n                return {\n                    ...state,\n                    isAuthenticated,\n                    isInitialised: true,\n                    user\n                }\n            }\n        case 'LOGIN':\n            {\n                const { user } = action.payload\n\n                return {\n                    ...state,\n                    isAuthenticated: true,\n                    user\n                }\n            }\n        case 'LOGOUT':\n            {\n                return {\n                    ...state,\n                    isAuthenticated: false,\n                    user: null\n                }\n            }\n        case 'REGISTER':\n            {\n                const { user } = action.payload\n\n                return {\n                    ...state,\n                    isAuthenticated: true,\n                    user\n                }\n            }\n        default:\n            {\n                return {\n                    ...state\n                }\n            }\n    }\n}\nconst AuthContext = createContext({\n    ...initialState,\n    method: 'JWT',\n    login: () => Promise.resolve(),\n    logout: () => { },\n    register: () => Promise.resolve()\n})\nexport const AuthProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const login = async (email, password) => {\n        const response = await axios.post('http://43.205.125.69:3000/api/public/adminposlogin', { email, password })\n        const { accessToken, user } = response.data.data\n        console.log(accessToken, user, 'kamlesh rajpoot')\n        setSession(accessToken)\n\n        dispatch({\n            type: 'LOGIN', payload: {\n                user\n            }\n        })\n    }\n    const register = async (email, username, password) => {\n        const response = await axios.post('/api/auth/register', { email, username, password })\n\n        const { accessToken, user } = response.data\n\n        setSession(accessToken)\n\n        dispatch({\n            type: 'REGISTER', payload: {\n                user\n            }\n        })\n    }\n    const logout = () => {\n        setSession(null)\n        dispatch({ type: 'LOGOUT' })\n    }\n    useEffect(() => {\n        ;\n        (async () => {\n            try {\n                const accessToken = window.localStorage.getItem('accessToken')\n\n                if (accessToken) {\n\n                    setSession(accessToken)\n                    // const response = await axios.get('/api/auth/profile')\n                    // const { user } = response.data\n                    const response = await axios.post('http://43.205.125.69:3000/api/admin/adminposdetails')\n                    const { user } = response.data.data\n                    dispatch({\n                        type: 'INIT',\n                        payload: {\n                            isAuthenticated: true,\n                            user\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: 'INIT',\n                        payload: {\n                            isAuthenticated: false,\n                            user: null\n                        }\n                    })\n                }\n            } catch (err) {\n                console.error(err)\n                dispatch({\n                    type: 'INIT',\n                    payload: {\n                        isAuthenticated: false,\n                        user: null\n                    }\n                })\n            }\n        })()\n    }, [])\n    if (!state.isInitialised) {\n        return <MatxLoading />\n    } return (<AuthContext.Provider value={\n        {\n            ...state,\n            method: 'JWT',\n            login,\n            logout,\n            register\n        }\n    }> {children} </AuthContext.Provider>)\n}\nexport default AuthContext\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/routes.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/index.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/index.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/axios.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/MatxLayout.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/notification.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SimpleCard.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxVerticalNav/MatxVerticalNav.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Calendar/Session12Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/Session10Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/Session11Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/index.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Typography.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useSettings.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Calendar/Calendar.jsx",["1446","1447"],"import React, { useState } from 'react';\nimport { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Calendars from '../../views/material-kit/calenders/Calendars';\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst Calendar1 = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Calendar' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Calendars />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Calendar1;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SMSLog.jsx",["1448","1449"],"import React, { useState } from 'react';\nimport { Typography } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  paper6: {\n    padding: '35px 25px',\n    boxShadow: 'none',\n    background: '#fff',\n  },\n  selet: {\n    color: '#000',\n    border: '1px solid #e7dcdc',\n    padding: '11px',\n    marginTop: '20px',\n  },\n}));\nexport default function SMSLog() {\n  const classes = useStyles();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'SMS Log' }]}\n        />\n      </Box>\n      {/* <SimpleCard> */}\n\n      <Box className={classes.paper6}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container>\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              id=\"date-picker-inline\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n          </Grid>\n        </MuiPickersUtilsProvider>\n        <Typography className={classes.selet}>\n          There is no log available for the selected date.\n        </Typography>\n      </Box>\n      {/* </SimpleCard> */}\n    </Container>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/StaffReport.jsx",["1450"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst StaffReport = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Staff Report\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default StaffReport;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SMSSettings.jsx",["1451","1452","1453","1454","1455","1456","1457"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Typography } from '@mui/material';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { makeStyles } from '@material-ui/styles';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  Gateway: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Gateway: Yup.string()\n    .min(6, 'Gateway must be 6 character length')\n    .required('Gateway is required!'),\n});\n\nconst SMSSettings = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'SMS Settings' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <AutocompleteComboNew\n                props={{\n                  names: [\n                    'Oliver Hansen',\n                    'Van Henry',\n                    'April Tucker',\n                    'Ralph Hubbard',\n                    'Omar Alexander',\n                    'Carlos Abbott',\n                    'Miriam Wagner',\n                    'Bradley Wilkerson',\n                    'Virginia Andrews',\n                    'Kelly Snyder',\n                  ],\n                  name: 'Gateway',\n                  label: 'Gateway',\n                  value: values.Gateway,\n                  onBlur: handleBlur,\n                  onChange: handleChange('Gateway'),\n                  helperText: touched.Gateway && errors.Gateway,\n                  error: Boolean(errors.Gateway && touched.Gateway),\n                }}\n              />\n              <Typography style={{ marginTop: '10px' }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default SMSSettings;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SendSMS.jsx",["1458","1459","1460","1461","1462","1463","1464","1465","1466"],"import React, { useState, useEffect } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@mui/material';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '15px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  fil: {\n    width: '100%',\n    height: '50px',\n    marginBottom: '0px',\n    borderRadius: '5px',\n    padding: '10px',\n    border: '1px solid #cfcfcf',\n  },\n}));\n\nconst people = ['Siri', 'Alexa', 'Google', 'Facebook', 'Twitter', 'Linkedin', 'Sinkedin'];\n\n// inital login credentials\nconst initialValues = {\n  Phone: '',\n  Message: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('number is required!'),\n\n  Message: Yup.string()\n    .min(6, 'Message must be 6 character length')\n    .required('Message is required!'),\n});\n\nconst SendSMS = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const [searchResults, setSearchResults] = useState([]);\n  // at every occurance of the change event, sets the current value of the form to the state\n  const handleChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  useEffect(() => {\n    const results = people.filter((person) => person.toLowerCase().includes(searchTerm));\n    setSearchResults(results);\n  }, [searchTerm]);\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Send SMS' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search phone by customer\"\n                    value={searchTerm}\n                    onChange={handleChange}\n                    className={classes.fil}\n                  />\n                </Grid>\n                {/* <ul>\n        {searchResults.map(item => (\n          <li>{item}</li>\n        ))}\n      </ul> */}\n                <Grid item xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Phone',\n                      label: 'Mobile',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      rows: 4,\n                      multiline: true,\n                      name: 'Message',\n                      label: 'Message',\n                      onBlur: handleBlur,\n                      value: values.Message,\n                      onChange: handleChange,\n                      helperText: touched.Message && errors.Message,\n                      error: Boolean(errors.Message && touched.Message),\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Send Msg\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default SendSMS;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/ListPages.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/AddPage.jsx",["1467","1468","1469","1470","1471","1472"],"import React, { useState } from 'react';\nimport Label from '../material-kit/tables/Label';\nimport { Checkbox, Grid } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Title: '',\n  Name: '',\n  Description: '',\n  Slug: '',\n  MenuOrder: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Title: Yup.string()\n    .min(6, 'Title must be 6 character length')\n    .required('Title is required!'),\n\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n  Description: Yup.string()\n    .min(6, 'Description must be 6 character length')\n    .required('Description is required!'),\n\n  Slug: Yup.string()\n    .min(6, 'Slug must be 6 character length')\n    .required('Slug per line is required!'),\n\n  MenuOrder: Yup.string()\n    .min(6, 'MenuOrder must be 6 character length')\n    .required('MenuOrder per line is required!'),\n});\n\nconst AddPage = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Page' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Title',\n                      label: 'Title',\n                      onBlur: handleBlur,\n                      value: values.Title,\n                      onChange: handleChange,\n                      helperText: touched.Title && errors.Title,\n                      error: Boolean(errors.Title && touched.Title),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Slug',\n                      label: 'Slug',\n                      onBlur: handleBlur,\n                      value: values.Slug,\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'MenuOrder',\n                      label: 'Menu Order',\n                      onBlur: handleBlur,\n                      value: values.MenuOrder,\n                      onChange: handleChange,\n                      helperText: touched.MenuOrder && errors.MenuOrder,\n                      error: Boolean(errors.MenuOrder && touched.MenuOrder),\n                    }}\n                  />\n                  <Checkbox value=\"checkedA\" defaultChecked />\n                  <Label> Show in top menus</Label>\n                </Grid>\n              </Grid>\n              <Label>Body</Label>\n              <CKEditor\n                editor={ClassicEditor}\n                data={note}\n                onReady={(editor) => {\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setNote(data);\n                  console.log({ event, editor, data });\n                }}\n                onBlur={(event, editor) => {\n                  handleBlur();\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n              <div className=\"content-invalid-feedback\">\n                {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n              </div>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Page\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPage;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SliderSettings.jsx",["1473","1474","1475","1476","1477","1478","1479","1480"],"import React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  textnew1: {\n    fontSize: '15px',\n    fontWeight: '600',\n    paddingBottom: '20px',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst initialValues = {\n  Link1: 'http://ci.dev/sma/shop/products',\n  Link2: '',\n  Link3: '',\n  Link4: '',\n  Link5: '',\n  Caption1: '',\n  Caption2: '',\n  Caption3: '',\n  Caption4: '',\n  Caption5: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Link1: Yup.number()\n    .min(6, 'Link1 must be 6 character length')\n    .required('Link1 is required!'),\n\n  Link2: Yup.string()\n    .min(6, 'Link2 must be 6 character length')\n    .required('Link2 is required!'),\n\n  Link3: Yup.string()\n    .min(6, 'Link3 must be 6 character length')\n    .required('Link3 is required!'),\n\n  Link4: Yup.string()\n    .min(6, 'Link4 must be 6 character length')\n    .required('Link4 is required!'),\n\n  Link5: Yup.string()\n    .min(6, 'Link5 must be 6 character length')\n    .required('Link5 is required!'),\n\n  Caption1: Yup.string()\n    .min(6, 'Caption1 must be 6 character length')\n    .required('Caption1 is required!'),\n  Caption2: Yup.string()\n    .min(6, 'Caption2 must be 6 character length')\n    .required('Caption2 is required!'),\n\n  Caption3: Yup.string()\n    .min(6, 'Caption3 must be 6 character length')\n    .required('Caption3 is required!'),\n  Caption4: Yup.string()\n    .min(6, 'Caption4 must be 6 character length')\n    .required('Caption4 is required!'),\n  Caption5: Yup.string()\n    .min(6, 'Caption5 must be 6 character length')\n    .required('Caption5 is required!'),\n});\n\nconst SliderSettings = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Slider Settings' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Paper\n                style={{\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '30px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Shop Settings\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Link1',\n                        label: 'Link 1',\n                        onBlur: handleBlur,\n                        value: values.Link1,\n                        onChange: handleChange,\n                        helperText: touched.Link1 && errors.Link1,\n                        error: Boolean(errors.Link1 && touched.Link1),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Link2',\n                        label: 'Link 2',\n                        onBlur: handleBlur,\n                        value: values.Link2,\n                        onChange: handleChange,\n                        helperText: touched.Link2 && errors.Link2,\n                        error: Boolean(errors.Link2 && touched.Link2),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Link3',\n                        label: 'Link 3',\n                        onBlur: handleBlur,\n                        value: values.Link3,\n                        onChange: handleChange,\n                        helperText: touched.Link3 && errors.Link3,\n                        error: Boolean(errors.Link3 && touched.Link3),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Link4',\n                        label: 'Link 4',\n                        onBlur: handleBlur,\n                        value: values.Link4,\n                        onChange: handleChange,\n                        helperText: touched.Link4 && errors.Link4,\n                        error: Boolean(errors.Link4 && touched.Link4),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Link5',\n                        label: 'Link 5',\n                        onBlur: handleBlur,\n                        value: values.Link5,\n                        onChange: handleChange,\n                        helperText: touched.Link5 && errors.Link5,\n                        error: Boolean(errors.Link5 && touched.Link5),\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Caption1',\n                        label: 'Caption 1',\n                        onBlur: handleBlur,\n                        value: values.Caption1,\n                        onChange: handleChange,\n                        helperText: touched.Caption1 && errors.Caption1,\n                        error: Boolean(errors.Caption1 && touched.Caption1),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Caption2',\n                        label: 'Caption 2',\n                        onBlur: handleBlur,\n                        value: values.Caption2,\n                        onChange: handleChange,\n                        helperText: touched.Caption2 && errors.Caption2,\n                        error: Boolean(errors.Caption2 && touched.Caption2),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Caption3',\n                        label: 'Caption 3',\n                        onBlur: handleBlur,\n                        value: values.Caption3,\n                        onChange: handleChange,\n                        helperText: touched.Caption3 && errors.Caption3,\n                        error: Boolean(errors.Caption3 && touched.Caption3),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Caption4',\n                        label: 'Caption 4',\n                        onBlur: handleBlur,\n                        value: values.Caption4,\n                        onChange: handleChange,\n                        helperText: touched.Caption4 && errors.Caption4,\n                        error: Boolean(errors.Caption4 && touched.Caption4),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Caption5',\n                        label: 'Caption 5',\n                        onBlur: handleBlur,\n                        value: values.Caption5,\n                        onChange: handleChange,\n                        helperText: touched.Caption5 && errors.Caption5,\n                        error: Boolean(errors.Caption5 && touched.Caption5),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography>Image 1</Typography>\n                    <Singleimage />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography style={{ padding: '0px 0px' }}>Image 2</Typography>\n                    <Singleimage />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography style={{ padding: '0px 0px' }}>Image 3</Typography>\n                    <Singleimage />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography style={{ padding: '0px 0px' }}>Image 4</Typography>\n                    <Singleimage />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography style={{ padding: '0px 0px 0px 0px' }}>Image 5</Typography>\n                    <Singleimage />\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Update\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default SliderSettings;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PurchasesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/CustomersReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ExpensesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/MonthlyPurchases.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/ShopSettings.jsx",["1481","1482","1483","1484","1485","1486"],"import React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  textnew1: {\n    fontSize: '15px',\n    fontWeight: '600',\n    paddingBottom: '20px',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst initialValues = {\n  ShopName: 'Stock Manager Advance with All Modules',\n  Shipping: '0',\n  Description: 'Stock Manager Advance with All Modules',\n  Warehouse: '',\n  Products: '',\n  Productspagedescription: 'Jewelry',\n  Email: 'info@tecdiary.com',\n  AboutPage: '',\n  TermsPage: '',\n  PrivacyPolicyPage: '',\n  ContactPage: '',\n  PaymentText: '',\n  Biller: '',\n  FollowText: 'Please click the link below to follow us on social media.',\n  Facebook: 'http://facebook.com/tecdiary',\n  Twitter: 'http://facebook.com/tecdiary',\n  CookieMessage:\n    'We use cookies to improve your experience on our website. By browsing this website, you agree to our use of cookies.',\n  CookiePage: '',\n  HideBrands: '',\n  Disablecart: '',\n  Instgram: '',\n  Phone: '',\n  Privateshop: '',\n  GooglePlus: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  ShopName: Yup.string()\n    .min(6, 'ShopName must be 6 character length')\n    .required('Shop Name is required!'),\n\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n\n  Description: Yup.string()\n    .min(6, 'Description must be 6 character length')\n    .required('Description is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  Products: Yup.string()\n    .min(6, 'Products must be 6 character length')\n    .required('Products is required!'),\n\n  Productspagedescription: Yup.string()\n    .min(6, 'Productspagedescription must be 6 character length')\n    .required('Products page description is required!'),\n\n  Email: Yup.string()\n    .email()\n    .required('Email is required!'),\n\n  PaymentText: Yup.string()\n    .min(6, 'PaymentText must be 6 character length')\n    .required('Payment Text is required!'),\n\n  TermsPage: Yup.string()\n    .min(6, 'TermsPage must be 6 character length')\n    .required('Terms Page is required!'),\n  AboutPage: Yup.string()\n    .min(6, 'AboutPage must be 6 character length')\n    .required('About Page is required!'),\n\n  PrivacyPolicyPage: Yup.string()\n    .min(6, 'PrivacyPolicyPage must be 6 character length')\n    .required('Privacy Policy Page is required!'),\n\n  ContactPage: Yup.string()\n    .min(6, 'ContactPage must be 6 character length')\n    .required('Contact Page is required!'),\n\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller  is required!'),\n\n  FollowText: Yup.string()\n    .min(6, 'FollowText must be 6 character length')\n    .required('Follow Text is required!'),\n\n  Facebook: Yup.string()\n    .min(6, 'Facebook must be 6 character length')\n    .required('Facebook  is required!'),\n\n  Twitter: Yup.string()\n    .min(6, 'Twitter must be 6 character length')\n    .required('Twitter is required!'),\n\n  CookieMessage: Yup.string()\n    .min(6, 'CookieMessage must be 6 character length')\n    .required('Cookie Message is required!'),\n\n  CookiePage: Yup.string()\n    .min(6, 'CookiePage must be 6 character length')\n    .required('Cookie Page  is required!'),\n  HideBrands: Yup.string()\n    .min(6, 'HideBrands must be 6 character length')\n    .required('Hide Brands is required!'),\n  Disablecart: Yup.string()\n    .min(6, 'Disablecart must be 6 character length')\n    .required('Disable cart is required!'),\n  Instgram: Yup.string()\n    .min(6, 'Instgram must be 6 character length')\n    .required('Instgram is required!'),\n\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('number is required!'),\n\n  Privateshop: Yup.number()\n    .min(6, 'Privateshop must be 6 character length')\n    .required('Privateshop is required!'),\n\n  GooglePlus: Yup.number()\n    .min(6, 'GooglePlus must be 6 character length')\n    .required('GooglePlus is required!'),\n});\n\nconst ShopSettings = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Shop Settings' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Paper\n                style={{\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '30px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Shop Settings\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ShopName',\n                        label: 'Shop Name',\n                        onBlur: handleBlur,\n                        value: values.ShopName,\n                        onChange: handleChange,\n                        helperText: touched.ShopName && errors.ShopName,\n                        error: Boolean(errors.ShopName && touched.ShopName),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Description',\n                        label: 'Description',\n                        onBlur: handleBlur,\n                        value: values.Description,\n                        onChange: handleChange,\n                        helperText: touched.Description && errors.Description,\n                        error: Boolean(errors.Description && touched.Description),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Productspagedescription ',\n                        label: 'Products page description ',\n                        onBlur: handleBlur,\n                        value: values.Productspagedescription,\n                        onChange: handleChange,\n                        helperText:\n                          touched.Productspagedescription && errors.Productspagedescription,\n                        error: Boolean(\n                          errors.Productspagedescription && touched.Productspagedescription\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'number',\n                        name: 'Phone',\n                        label: 'Phone',\n                        onBlur: handleBlur,\n                        value: values.Phone,\n                        onChange: handleChange,\n                        helperText: touched.Phone && errors.Phone,\n                        error: Boolean(errors.Phone && touched.Phone),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Email',\n                        label: 'Email',\n                        onBlur: handleBlur,\n                        value: values.Email,\n                        onChange: handleChange,\n                        helperText: touched.Email && errors.Email,\n                        error: Boolean(errors.Email && touched.Email),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Products',\n                        label: 'Products page (grid style)',\n                        value: values.Products,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Products'),\n                        helperText: touched.Products && errors.Products,\n                        error: Boolean(errors.Products && touched.Products),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'AboutPage',\n                        label: 'About Page',\n                        value: values.AboutPage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('AboutPage'),\n                        helperText: touched.AboutPage && errors.AboutPage,\n                        error: Boolean(errors.AboutPage && touched.AboutPage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'TermsPage',\n                        label: 'Terms Page',\n                        value: values.TermsPage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('TermsPage'),\n                        helperText: touched.TermsPage && errors.TermsPage,\n                        error: Boolean(errors.TermsPage && touched.TermsPage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'PrivacyPolicyPage ',\n                        label: 'Privacy Policy Page ',\n                        value: values.PrivacyPolicyPage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('PrivacyPolicyPage'),\n                        helperText: touched.PrivacyPolicyPage && errors.PrivacyPolicyPage,\n                        error: Boolean(errors.PrivacyPolicyPage && touched.PrivacyPolicyPage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ContactPage',\n                        label: 'Contact Page',\n                        value: values.ContactPage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ContactPage'),\n                        helperText: touched.ContactPage && errors.ContactPage,\n                        error: Boolean(errors.ContactPage && touched.ContactPage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'PaymentText',\n                        label: 'Payment Text',\n                        value: values.PaymentText,\n                        onBlur: handleBlur,\n                        onChange: handleChange('PaymentText'),\n                        helperText: touched.PaymentText && errors.PaymentText,\n                        error: Boolean(errors.PaymentText && touched.PaymentText),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Privateshop',\n                        label: 'Private shop (for members only) ',\n                        value: values.Privateshop,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Privateshop'),\n                        helperText: touched.Privateshop && errors.Privateshop,\n                        error: Boolean(errors.Privateshop && touched.Privateshop),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Shipping',\n                        label: 'Shipping',\n                        onBlur: handleBlur,\n                        value: values.Shipping,\n                        onChange: handleChange,\n                        helperText: touched.Shipping && errors.Shipping,\n                        error: Boolean(errors.Shipping && touched.Shipping),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Warehouse',\n                        label: 'Warehouse',\n                        value: values.Warehouse,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Warehouse'),\n                        helperText: touched.Warehouse && errors.Warehouse,\n                        error: Boolean(errors.Warehouse && touched.Warehouse),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Biller',\n                        label: 'Biller',\n                        value: values.Biller,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Biller'),\n                        helperText: touched.Biller && errors.Biller,\n                        error: Boolean(errors.Biller && touched.Biller),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'FollowText',\n                        label: 'Follow Text',\n                        onBlur: handleBlur,\n                        value: values.FollowText,\n                        onChange: handleChange,\n                        helperText: touched.FollowText && errors.FollowText,\n                        error: Boolean(errors.FollowText && touched.FollowText),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Facebook',\n                        label: 'Facebook',\n                        onBlur: handleBlur,\n                        value: values.Facebook,\n                        onChange: handleChange,\n                        helperText: touched.Facebook && errors.Facebook,\n                        error: Boolean(errors.Facebook && touched.Facebook),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Twitter',\n                        label: 'Twitter',\n                        onBlur: handleBlur,\n                        value: values.Twitter,\n                        onChange: handleChange,\n                        helperText: touched.Twitter && errors.Twitter,\n                        error: Boolean(errors.Twitter && touched.Twitter),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'GooglePlus',\n                        label: 'Google Plus',\n                        onBlur: handleBlur,\n                        value: values.GooglePlus,\n                        onChange: handleChange,\n                        helperText: touched.GooglePlus && errors.GooglePlus,\n                        error: Boolean(errors.GooglePlus && touched.GooglePlus),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Instgram',\n                        label: 'Instgram',\n                        onBlur: handleBlur,\n                        value: values.Instgram,\n                        onChange: handleChange,\n                        helperText: touched.Instgram && errors.Instgram,\n                        error: Boolean(errors.Instgram && touched.Instgram),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CookieMessage',\n                        label: 'Cookie Message',\n                        onBlur: handleBlur,\n                        value: values.CookieMessage,\n                        onChange: handleChange,\n                        helperText: touched.CookieMessage && errors.CookieMessage,\n                        error: Boolean(errors.CookieMessage && touched.CookieMessage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'CookiePage',\n                        label: 'Cookie Page',\n                        value: values.CookiePage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('CookiePage'),\n                        helperText: touched.CookiePage && errors.CookiePage,\n                        error: Boolean(errors.CookiePage && touched.CookiePage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'HideBrands',\n                        label: 'Hide Brands/Categories with 0 product',\n                        value: values.HideBrands,\n                        onBlur: handleBlur,\n                        onChange: handleChange('HideBrands'),\n                        helperText: touched.HideBrands && errors.HideBrands,\n                        error: Boolean(errors.HideBrands && touched.HideBrands),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Disablecart',\n                        label: 'Disable cart & price',\n                        value: values.Disablecart,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Disablecart'),\n                        helperText: touched.Disablecart && errors.Disablecart,\n                        error: Boolean(errors.Disablecart && touched.Disablecart),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography style={{ padding: '10px 0px' }}>Logo</Typography>\n                    <Singleimage />\n                    <Typography style={{ padding: '20px 0px' }}>\n                      Bank Details (if you want to accept direct bank-in/transfer payments)\n                    </Typography>\n                    <CKEditor\n                      editor={ClassicEditor}\n                      data={note}\n                      onReady={(editor) => {\n                        console.log('Editor is ready to use!', editor);\n                      }}\n                      onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setNote(data);\n                        console.log({ event, editor, data });\n                      }}\n                      onBlur={(event, editor) => {\n                        handleBlur();\n                        console.log('Blur.', editor);\n                      }}\n                      onFocus={(event, editor) => {\n                        console.log('Focus.', editor);\n                      }}\n                    />\n                    <div className=\"content-invalid-feedback\">\n                      {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                    </div>\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Update\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default ShopSettings;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/SuppliersReport.jsx",["1487"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst SuppliersReport = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Suppliers Report\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default SuppliersReport;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/TaxReport.jsx",["1488"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst TaxReport = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Tax Report\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default TaxReport;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PaymentsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProfitLoss.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/DailySales.jsx",["1489"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Calendars from '../../views/material-kit/calenders/Calendars';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst DailySales = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Daily Sales' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Calendars />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default DailySales;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/MonthlySales.jsx",["1490"],"import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Years from '../../views/material-kit/calenders/Years';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst MonthlySales = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Monthly Sales' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Years />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default MonthlySales;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/BrandsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/CategoriesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/AdjustmentsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProductsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProductQuantityAlerts.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/BestSellers.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/SalesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/DailyPurchases.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/WarehouseStockChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/OverviewChart.jsx",["1491","1492"],"import React, { useState, useEffect } from 'react';\nimport { Typography } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport StatCards from '../../views/dashboard/shared/StatCards';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddchartIcon from '@mui/icons-material/Addchart';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport AlignVerticalBottomIcon from '@mui/icons-material/AlignVerticalBottom';\nimport DensitySmallIcon from '@mui/icons-material/DensitySmall';\nimport EventNoteIcon from '@mui/icons-material/EventNote';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\nimport StarIcon from '@mui/icons-material/Star';\nimport MoneyIcon from '@mui/icons-material/Money';\nimport PieRechartComponent from './PieRechartComponent';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  box0: {\n    width: '100%',\n    backgroundColor: '#fff',\n    boxShadow: 'none',\n    padding: '15px',\n    marginBottom: '15px',\n  },\n}));\n\nconst OverviewChart = (props) => {\n  const classes = useStyles();\n  const [data5, setdata] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n  }, [props]);\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Overview Chart' }]}\n        />\n      </Box>\n      {/* <div className={classes.box0}> */}\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#2eadd3' }}\n            icon={<AddchartIcon />}\n            title=\"Warehouse Stock Chart\"\n            url=\"/Reports/WarehouseStockChart\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#ad2727' }}\n            icon={<AlignVerticalBottomIcon />}\n            title=\"Product Expiry Alerts\"\n            url=\"/Reports/ProductsReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#303f9f' }}\n            icon={<EventNoteIcon />}\n            title=\"Monthly Sales\"\n            url=\"/Reports/MonthlySales\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#fabb3d' }}\n            icon={<MoneyIcon />}\n            title=\"Profit and/or Loss\"\n            url=\"/Reports/ProfitLoss\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#428BCA' }}\n            icon={<PeopleAltIcon />}\n            title=\"Suppliers Report\"\n            url=\"/Reports/SuppliersReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#428BCA' }}\n            icon={<TrendingUpIcon />}\n            title=\"Best Sellers\"\n            url=\"/Reports/BestSellers\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#78cd51' }}\n            icon={<DensitySmallIcon />}\n            title=\"Products Report\"\n            url=\"/Reports/ProductsReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#7b1fa2' }}\n            icon={<FavoriteBorderIcon />}\n            title=\"Sales Report\"\n            url=\"/Reports/SalesReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#78cd51' }}\n            icon={<StarIcon />}\n            title=\"Purchases Report\"\n            url=\"/Reports/PurchasesReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#428BCA' }}\n            icon={<PeopleAltIcon />}\n            title=\"Staff Report\"\n            url=\"/Reports/StaffReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#ff5454' }}\n            icon={<AlignVerticalBottomIcon />}\n            title=\"Product Quantity Alerts\"\n            url=\"/Reports/ProductQuantityAlerts\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#fabb3d' }}\n            icon={<EventNoteIcon />}\n            title=\"Daily Sales\"\n            url=\"/Reports/DailySales\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4} mb={2}>\n          <StatCards\n            style={{ backgroundColor: '#fabb3d' }}\n            icon={<MoneyIcon />}\n            title=\"Payments Report\"\n            url=\"/Reports/PaymentsReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4} mb={2}>\n          <StatCards\n            style={{ backgroundColor: '#000' }}\n            icon={<PeopleAltIcon />}\n            title=\"Customers Report\"\n            url=\"/Reports/CustomersReport\"\n          />\n        </Grid>\n      </Grid>\n      {/* </div> */}\n      <SimpleCard>\n        <Typography>\n          Stock Overview Chart including monthly sales with product tax and order tax (columns),\n          purchases (line) and current stock value by cost and price (pie). You can save the graph\n          as jpg, png and pdf.\n        </Typography>\n        <PieRechartComponent />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default OverviewChart;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/RegisterReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Loadable.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PieRechartComponent.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/Years.jsx",["1493","1494","1495","1496","1497"],"import React, { useState } from 'react';\nimport YearPicker from 'react-single-year-picker';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    '& .MuiTableCell-root': {\n      borderLeft: '1px solid rgba(224, 224, 224, 1)',\n      border: '1px solid rgba(224, 224, 224, 1)',\n    },\n  },\n  box7: {\n    background: '#e5e1e1',\n    justifyContent: 'center',\n    width: '100%',\n    textAlign: 'center',\n    display: 'flex',\n    padding: '9px 0px',\n  },\n});\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nfunction createData(\n  January = '',\n  February = '',\n  March = '',\n  April = '',\n  May = '',\n  June = '',\n  July = '',\n  August = '',\n  September = '',\n  October = '',\n  November = '',\n  December = ''\n) {\n  return {\n    January,\n    February,\n    March,\n    April,\n    May,\n    June,\n    July,\n    August,\n    September,\n    October,\n    November,\n    December,\n  };\n}\n\nconst rows = [createData(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)];\n\nfunction Years() {\n  const [yearSelected, setYear] = useState(1990);\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box className={classes.box7}>\n        <YearPicker\n          yearArray={['2019', '2020']}\n          value={yearSelected}\n          onSelect={(e) => setYear(e)}\n          hideInput={true}\n          // activeIcon={src url}\n          // icon={src url}\n          // leftIcon={src url}\n          // rightIcon={src url}\n          minRange={1000}\n          maxRange={2018}\n        />\n      </Box>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Jan</TableCell>\n            <TableCell align=\"center\">Feb</TableCell>\n            <TableCell align=\"center\">March</TableCell>\n            <TableCell align=\"center\">April</TableCell>\n            <TableCell align=\"center\">May</TableCell>\n            <TableCell align=\"center\">June</TableCell>\n            <TableCell align=\"center\">July</TableCell>\n            <TableCell align=\"center\">August</TableCell>\n            <TableCell align=\"center\">Sept</TableCell>\n            <TableCell align=\"center\">October</TableCell>\n            <TableCell align=\"center\">Nov</TableCell>\n            <TableCell align=\"center\">Dec</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell align=\"center\">{row.January}</TableCell>\n              <TableCell align=\"center\">{row.February}</TableCell>\n              <TableCell align=\"center\">{row.March}</TableCell>\n              <TableCell align=\"center\">{row.April}</TableCell>\n              <TableCell align=\"center\">{row.May}</TableCell>\n              <TableCell align=\"center\">{row.June}</TableCell>\n              <TableCell align=\"center\">{row.July}</TableCell>\n              <TableCell align=\"center\">{row.August}</TableCell>\n              <TableCell align=\"center\">{row.September}</TableCell>\n              <TableCell align=\"center\">{row.October}</TableCell>\n              <TableCell align=\"center\">{row.November}</TableCell>\n              <TableCell align=\"center\">{row.December}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\nexport default Years;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/Calendars.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/SimpleTable.jsx",["1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\nimport Label from './Label';\nimport Scrollbar from './Scrollbar';\nimport USERLIST from './User';\nimport SearchNotFound from './SearchNotFound';\nimport UserListHead from './UserListHead';\nimport UserListToolbar from './UserListToolbar';\nimport UserMoreMenu from './UserMoreMenu';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', alignRight: false },\n  { id: 'image', label: 'Image', alignRight: false },\n  { id: 'unit', label: 'Unit', alignRight: false },\n  { id: 'cost', label: 'Cost', alignRight: false },\n  { id: 'price', label: 'Price', alignRight: false },\n  { id: 'code', label: 'Code', alignRight: false },\n  { id: 'brand', label: 'Brand', alignRight: false },\n  { id: 'quantity', label: 'Quantity', alignRight: false },\n  { id: 'category_id', label: 'Category_id', alignRight: false },\n  { id: 'alert_quantity', label: 'Alert_quantity', alignRight: false },\n  { id: 'action', label: 'Action', alignRight: false },\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction SimpleTable(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      <Scrollbar>\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      <TableCell align=\"left\">{image}</TableCell>\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell>\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Container>\n    // </Page>\n  );\n}\nexport default SimpleTable;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Topbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Sidenav.jsx",["1517","1518"],"import React from 'react';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\nimport Brand from '../../Brand';\r\nimport Sidenav from '../../Sidenav';\r\n\r\nconst SidebarNavRoot = styled(Box)(({ theme, width, primaryBg, bgImgURL }) => ({\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  height: '100vh',\r\n  width: width,\r\n  fontFamily: 'Montserrat,sans-serif !important',\r\n  boxShadow: themeShadows[8],\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundPosition: 'top',\r\n  backgroundSize: 'cover',\r\n  zIndex: 111,\r\n  overflow: 'hidden',\r\n  backgroundColor: '#fff',\r\n  color: '#000 !important',\r\n  transition: 'all 250ms ease-in-out',\r\n  boxShadow: 'rgb(0 0 0 / 10%) 0px 10px 50px',\r\n  // backgroundImage: `linear-gradient(45deg,#303f9f,#7b1fa2)!important;`,\r\n  '&:hover': {\r\n    width: sideNavWidth,\r\n    '& .sidenavHoverShow': {\r\n      display: 'block',\r\n      color: '#000 !important',\r\n      // fontFamily: \"Montserrat,sans-serif !important\",\r\n    },\r\n    '& .compactNavItem': {\r\n      width: '100%',\r\n      maxWidth: '100%',\r\n      color: '#000 !important',\r\n      '& .nav-bullet': {\r\n        display: 'block',\r\n        color: '#000 !important',\r\n        // fontFamily: \"Montserrat,sans-serif !important\",\r\n      },\r\n      '& .nav-bullet-text': {\r\n        display: 'none',\r\n        color: '#000 !important',\r\n        // fontFamily: \"Montserrat,sans-serif !important\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavListBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  color: '#000 !important',\r\n}));\r\n\r\nconst Layout1Sidenav = () => {\r\n  const theme = useTheme();\r\n  const { settings, updateSettings } = useSettings();\r\n  const leftSidebar = settings.layout1Settings.leftSidebar;\r\n  const { mode, bgImgURL } = leftSidebar;\r\n\r\n  const getSidenavWidth = () => {\r\n    switch (mode) {\r\n      case 'compact':\r\n        return sidenavCompactWidth;\r\n      default:\r\n        return sideNavWidth;\r\n    }\r\n  };\r\n  const primaryRGB = convertHexToRGB(theme.palette.primary.main);\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    updateSettings({\r\n      layout1Settings: {\r\n        leftSidebar: {\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSidenavToggle = () => {\r\n    updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' });\r\n  };\r\n\r\n  return (\r\n    <SidebarNavRoot bgImgURL={bgImgURL} primaryBg={primaryRGB} width={getSidenavWidth()}>\r\n      <NavListBox>\r\n        <Brand>\r\n          {/* <Hidden smDown>\r\n            <Switch\r\n              onChange={handleSidenavToggle}\r\n              checked={leftSidebar.mode !== 'full'}\r\n              size=\"small\"\r\n            />\r\n          </Hidden> */}\r\n        </Brand>\r\n        <Sidenav />\r\n      </NavListBox>\r\n    </SidebarNavRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(Layout1Sidenav);\r\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebar.jsx",["1519","1520"],"import useSettings from 'app/hooks/useSettings';\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme';\nimport SecondarySidebarContent from './SecondarySidebarContent';\nimport SecondarySidebarToggle from './SecondarySidebarToggle';\n\nconst SecondarySidebar = () => {\n  const { settings } = useSettings();\n  const secondarySidebarTheme = settings.themes[settings.secondarySidebar.theme];\n\n  return (\n    <SecondarySidenavTheme theme={secondarySidebarTheme}>\n      {/* {settings.secondarySidebar.open && <SecondarySidebarContent />} */}\n      {/* <SecondarySidebarToggle /> */}\n    </SecondarySidenavTheme>\n  );\n};\n\nexport default SecondarySidebar;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useAuth.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLoading.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Footer.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/StatCards.jsx",["1521","1522","1523"],"import React from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  box1: {\n    width: '100%',\n    boxShadow: 'rgb(99 99 99 / 20%) 0px 2px 8px 0px',\n    textAlign: 'center',\n    color: '#fff',\n    padding: '15px',\n    justifyItems: 'center',\n    display: 'inline-grid',\n    borderRadius: '5px',\n  },\n}));\n\nconst StatCards = (props) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <NavLink to={props.url} exact>\n        <Box mb={0} className={classes.box1} style={props.style}>\n          {props.icon}\n          {props.title}\n        </Box>\n      </NavLink>\n    </>\n  );\n};\n\nexport default StatCards;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserListHead.jsx",["1524","1525"],"\nimport { useRef, useState,React } from 'react';\nimport PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@mui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nUserListHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function UserListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserMoreMenu.jsx",["1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536"],"import { useRef, useState, React } from 'react';\nimport { Icon } from '@iconify/react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport DataSaverOnIcon from '@mui/icons-material/DataSaverOn';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport LocalPrintshopIcon from '@mui/icons-material/LocalPrintshop';\nimport CustomizedDialogs from '../dialog/CustomizedDialog';\nimport face from '../../../../../src/public/assets/images/face.jpg';\n// material\nimport {\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Button,\n  Dialog,\n  Typography,\n} from '@material-ui/core';\n\nimport { withStyles } from '@material-ui/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from 'axios';\n\n// import CloseIcon from '@material-ui/icons/Close';\n// ----------------------------------------------------------------------\n// import { EditForm } from '../../Forms/index';\n\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\n  margin: 0,\n  padding: theme.spacing(2),\n  '& .closeButton': {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\nconst useStyles = makeStyles((theme) => ({\n  new4: {\n    marginBottom: '0px',\n    padding: '0px',\n    marginTop: '0px',\n  },\n  bt6: {\n    padding: '8px !important',\n    background: '#c50912',\n    fontSize: '11px',\n    color: '#fff',\n  },\n  bt7: {\n    padding: '8px !important',\n    background: '#e5e0e0',\n    fontSize: '11px',\n    color: '#000',\n  },\n}));\nconst DialogContent1 = styled(MuiDialogContent)(({ theme }) => ({\n  '&.root': { padding: theme.spacing(2) },\n}));\n\nconst DialogActions1 = styled(MuiDialogActions)(({ theme }) => ({\n  '&.root': { margin: 0, padding: theme.spacing(1) },\n}));\n\nconst DialogTitle1 = (props) => {\n  const { children, onClose } = props;\n  return (\n    <DialogTitleRoot disableTypography>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitleRoot>\n  );\n};\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          {/* <CloseIcon /> */}\n          Close\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function UserMoreMenu(props) {\n  const classes = useStyles();\n  const [premiumContent, setPremiumContent] = useState([]);\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  /// delete popup\n  const [open1, setOpen1] = useState(false);\n  const handleClickOpen1 = () => setOpen1(true);\n  const handleClose1 = () => setOpen1(false);\n  const deleterow = () => {\n    const Livechaturl = `http://3.23.210.57:3000/api/v1/auth/deleteinterviews`;\n    axios\n      .post(Livechaturl, {\n        interview_id: props.id,\n      })\n      .then((response) => {\n        const outlook = response;\n        alert(outlook.data.message);\n        window.location.href = '/dashboard/interview';\n      });\n    setOpen(false);\n  };\n  const editrow = () => {\n    alert(JSON.stringify(props.id));\n  };\n  /// image popup\n  const [open2, setOpen2] = useState(false);\n  const handleClickOpen2 = () => setOpen2(true);\n  const handleClose2 = () => setOpen2(false);\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' },\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem component={RouterLink} to=\"/Product/Productdetail\">\n          <ListItemIcon>\n            <AssignmentIcon width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText\n            className={classes.new4}\n            primary=\"Product Details\"\n            // primaryTypographyProps={{ variant: 'body2' }}\n            // onClick={editrow}\n          />\n        </MenuItem>\n        <MenuItem component={RouterLink} to=\"#\">\n          <ListItemIcon>\n            <DataSaverOnIcon width={24} height={24} onClick={handleClickOpen} />\n          </ListItemIcon>\n          <ListItemText className={classes.new4} primary=\"Duplicate Product\" onClick={editrow} />\n        </MenuItem>\n\n        <MenuItem component={RouterLink} to=\"/Product/Editproduct\" sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} onClick={handleClickOpen} />\n          </ListItemIcon>\n          <ListItemText className={classes.new4} primary=\"Edit Product\" onClick={editrow} />\n        </MenuItem>\n\n        <MenuItem\n          component={RouterLink}\n          to=\"#\"\n          sx={{ color: 'text.secondary' }}\n          onClick={handleClickOpen2}\n        >\n          <ListItemIcon>\n            <AddPhotoAlternateIcon width={24} height={24} onClick={handleClickOpen2} />\n          </ListItemIcon>\n          <ListItemText className={classes.new4} primary=\"View Image\" />\n        </MenuItem>\n\n        <MenuItem\n          component={RouterLink}\n          to=\"/Product/PrintBarcode\"\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <LocalPrintshopIcon width={24} height={24} onClick={handleClickOpen} />\n          </ListItemIcon>\n          <ListItemText className={classes.new4} primary=\"Print Barcode/Label\" onClick={editrow} />\n        </MenuItem>\n\n        <MenuItem component={RouterLink} to=\"#\" sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} onClick={handleClickOpen1} />\n          </ListItemIcon>\n          <ListItemText\n            className={classes.new4}\n            primary=\"Delete Product\"\n            onClick={handleClickOpen1}\n          />\n        </MenuItem>\n      </Menu>\n      <div>\n        {/* /// delete product */}\n\n        <Dialog\n          onClose={handleClose1}\n          open={open1}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MuiDialogTitle id=\"customized-dialog-title\" onClose={handleClose1}>\n            Delete Product\n          </MuiDialogTitle>\n\n          <DialogContent1 dividers>\n            <Typography gutterBottom>Are you sure</Typography>\n          </DialogContent1>\n\n          <DialogActions1>\n            <Button onClick={handleClose1} className={classes.bt6}>\n              Yes I'am Sure\n            </Button>\n            <Button onClick={handleClose1} className={classes.bt7}>\n              No\n            </Button>\n          </DialogActions1>\n        </Dialog>\n        {/* /// end delete product */}\n        {/* /// View image */}\n        <Dialog\n          open={open2}\n          onClose={handleClose2}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <MuiDialogContent>\n            <img src={face} style={{ width: '100%' }} />\n          </MuiDialogContent>\n        </Dialog>\n        {/* /// View image end*/}\n      </div>\n    </>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserListToolbar.jsx",["1537","1538","1539"],"import { useRef, useState, React } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\n// import roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\n// import { styled } from '@material-ui/core/styles';\nimport { alpha, styled } from '@mui/material';\n\nimport {\n  Box,\n  Toolbar,\n  Tooltip,\n  IconButton,\n  Typography,\n  OutlinedInput,\n  InputAdornment,\n} from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': { width: 320 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nUserListToolbar.propTypes = {\n  numSelected: PropTypes.number,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n};\n\nexport default function UserListToolbar({ numSelected, filterName, onFilterName }) {\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: 'primary.main',\n          bgcolor: 'primary.lighter',\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={filterName}\n          onChange={onFilterName}\n          placeholder=\"Search interview...\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Icon icon={trash2Fill} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>{/* <Icon icon={roundFilterList} /> */}</IconButton>\n        </Tooltip>\n      )}\n    </RootStyle>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/SearchNotFound.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/User.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/Scrollbar.jsx",["1540","1541"],"import { useRef, useState,React } from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleBarReact from 'simplebar-react';\n// material\nimport { Box,alpha, styled } from \"@mui/material\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')({\n  flexGrow: 1,\n  height: '100%',\n  overflow: 'hidden'\n});\n\nconst SimpleBarStyle = styled(SimpleBarReact)(({ theme }) => ({\n  maxHeight: '100%',\n  '& .simplebar-scrollbar': {\n    '&:before': {\n      backgroundColor: alpha(theme.palette.grey[600], 0.48)\n    },\n    '&.simplebar-visible:before': {\n      opacity: 1\n    }\n  },\n  '& .simplebar-track.simplebar-vertical': {\n    width: 10\n  },\n  '& .simplebar-track.simplebar-horizontal .simplebar-scrollbar': {\n    height: 6\n  },\n  '& .simplebar-mask': {\n    zIndex: 'inherit'\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nScrollbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  sx: PropTypes.object\n};\n\nexport default function Scrollbar({ children, sx, ...other }) {\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n\n  if (isMobile) {\n    return (\n      <Box sx={{ overflowX: 'auto', ...sx }} {...other}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <RootStyle>\n      <SimpleBarStyle timeout={500} clickOnTrack={false} sx={sx} {...other}>\n        {children}\n      </SimpleBarStyle>\n    </RootStyle>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/Label.jsx",["1542"],"import PropTypes from 'prop-types';\n// material\nimport { Box,alpha, styled } from \"@mui/material\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('span')(({ theme, styleprops }) => {\n  const { color, variant } = styleprops;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette[color].main}`\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color].dark,\n    backgroundColor: alpha(theme.palette[color].main, 0.16)\n  });\n\n  return {\n    height: 22,\n    fontWeight: 500,\n    fontSize: \"14px\",\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    // fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    // fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== 'default'\n      ? {\n          ...(variant === 'filled' && { ...styleFilled(color) }),\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\n          ...(variant === 'ghost' && { ...styleGhost(color) })\n        }\n      : {\n          ...(variant === 'outlined' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`\n          }),\n          ...(variant === 'ghost' && {\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.grey[500_16]\n          })\n        })\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\n  return (\n    <RootStyle styleprops={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'default',\n    'primary',\n    'secondary',\n    'info',\n    'success',\n    'warning',\n    'error'\n  ]),\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost'])\n};\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Sidenav.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/utils/constant.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/mockImages.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/navigations.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/CustomizedDialog.jsx",["1543"],"import CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport MuiDialogActions from '@mui/material/DialogActions';\nimport MuiDialogContent from '@mui/material/DialogContent';\nimport MuiDialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/system';\nimport { useState } from 'react';\n\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\n  margin: 0,\n  padding: theme.spacing(2),\n  '& .closeButton': {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst DialogTitle = (props) => {\n  const { children, onClose } = props;\n  return (\n    <DialogTitleRoot disableTypography>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitleRoot>\n  );\n};\n\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\n  '&.root': { padding: theme.spacing(2) },\n}));\n\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\n  '&.root': { margin: 0, padding: theme.spacing(1) },\n}));\n\nconst CustomizedDialogs = () => {\n  const [open1, setOpen1] = useState(false);\n\n  const handleClickOpen1 = () => setOpen1(true);\n\n  const handleClose1 = () => setOpen1(false);\n\n  return (\n    <div>\n      {/* <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Delete product\n      </Button> */}\n\n      <Dialog onClose={handleClose1} open={open1}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose1}>\n          <Typography gutterBottom style={{ fontWeight: '600' }}>\n            Delete Product\n          </Typography>\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <Typography gutterBottom>Are you sure</Typography>\n        </DialogContent>\n\n        <DialogActions>\n          <Button style={{ background: '#1976d2', color: '#fff' }} onClick={handleClose1}>\n            Yes I'am Sure\n          </Button>\n          <Button onClick={handleClose1} color=\"primary\">\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CustomizedDialogs;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebarToggle.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebarContent.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Brand.jsx",["1544","1545"],"import { Box, styled } from '@mui/material';\nimport { MatxLogo } from 'app/components';\nimport useSettings from 'app/hooks/useSettings';\nimport { Span } from './Typography';\nimport newlogo from '../../../src/public/assets/images/logos/newlogo.png';\n\nconst BrandRoot = styled(Box)(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: '9px 9px 9px 0px',\n  marginBottom: '10px',\n  borderBottom: '1px solid #eeeeef',\n}));\n\nconst StyledSpan = styled(Span)(({ mode }) => ({\n  fontSize: 18,\n  marginLeft: '-21px',\n  fontWeight: '600',\n  display: mode === 'compact' ? 'none' : 'block',\n}));\n\nconst Brand = ({ children }) => {\n  const { settings } = useSettings();\n  const leftSidebar = settings.layout1Settings.leftSidebar;\n  const { mode } = leftSidebar;\n\n  return (\n    <BrandRoot>\n      <Box display=\"flex\" alignItems=\"center\">\n        <img style={{ width: '100px' }} src={newlogo} />\n        <StyledSpan mode={mode} className=\"sidenavHoverShow\">\n          POS\n        </StyledSpan>\n      </Box>\n\n      <Box className=\"sidenavHoverShow\" sx={{ display: mode === 'compact' ? 'none' : 'block' }}>\n        {children || null}\n      </Box>\n    </BrandRoot>\n  );\n};\n\nexport default Brand;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ShoppingCart.jsx",["1546"],"import { Badge, Button, Drawer, Icon, IconButton, ThemeProvider } from '@mui/material';\nimport { Box, styled, useTheme } from '@mui/system';\nimport useAuth from 'app/hooks/useAuth';\nimport useSettings from 'app/hooks/useSettings';\nimport {\n  deleteProductFromCart,\n  getCartList,\n  updateCartAmount,\n} from 'app/redux/actions/EcommerceActions';\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant';\nimport { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { themeShadows } from './MatxTheme/themeColors';\nimport { H6, Small } from './Typography';\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n  '& span': {\n    color: theme.palette.text.primary,\n  },\n  '& #disable': {\n    color: theme.palette.text.disabled,\n  },\n}));\n\nconst MiniCart = styled('div')(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  width: sideNavWidth,\n}));\n\nconst CartBox = styled('div')(() => ({\n  padding: '4px',\n  paddingLeft: '16px',\n  display: 'flex',\n  alignItems: 'center',\n  boxShadow: themeShadows[6],\n  height: topBarHeight,\n  '& h5': {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: '16px',\n    fontWeight: '500',\n  },\n}));\n\nconst ProductBox = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: '8px 8px',\n  transition: 'background 300ms ease',\n  '&:hover': {\n    background: 'rgba(0,0,0,0.01)',\n  },\n}));\n\nconst IMG = styled('img')(() => ({\n  width: 48,\n}));\n\nconst ProductDetails = styled('div')(() => ({\n  marginRight: '8',\n  textAlign: 'center',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  '& h6': {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    display: 'block',\n    width: 120,\n    marginBottom: '4px',\n  },\n}));\n\nlet cartListLoaded = false;\n\nfunction ShoppingCart({ container }) {\n  const [totalCost, setTotalCost] = useState(0);\n  const [panelOpen, setPanelOpen] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { cartList } = useSelector((state) => state.ecommerce);\n  const { settings } = useSettings();\n  const theme = useTheme();\n  const secondary = theme.palette.text.secondary;\n\n  if (!cartListLoaded) {\n    dispatch(getCartList(user.id));\n    cartListLoaded = true;\n  }\n\n  const handleDrawerToggle = () => {\n    setPanelOpen(!panelOpen);\n  };\n\n  const handleCheckoutClick = () => {\n    if (totalCost > 0) {\n      navigate('/ecommerce/checkout');\n      setPanelOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    let total = 0;\n\n    cartList.forEach((product) => {\n      total += product.price * product.amount;\n    });\n    setTotalCost(total);\n  }, [cartList]);\n\n  const { palette } = useTheme();\n  const textColor = palette.text.primary;\n\n  return (\n    <Fragment>\n      <IconButton onClick={handleDrawerToggle}>\n        <Badge color=\"success\" badgeContent={cartList.length}>\n          <Icon sx={{ color: '#fff' }}>shopping_cart</Icon>\n        </Badge>\n      </IconButton>\n\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor={'right'}\n          open={panelOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          <MiniCart>\n            <CartBox>\n              <Icon color=\"primary\">shopping_cart</Icon>\n              <h5>Cart</h5>\n            </CartBox>\n\n            <Box flexGrow={1} overflow=\"auto\">\n              {cartList.map((product) => (\n                <ProductBox key={product.id}>\n                  <Box mr=\"4px\" display=\"flex\" flexDirection=\"column\">\n                    <StyledIconButton\n                      size=\"small\"\n                      onClick={() =>\n                        dispatch(updateCartAmount(user.id, product.id, product.amount + 1))\n                      }\n                    >\n                      <Icon sx={{ cursor: 'pinter' }}>keyboard_arrow_up</Icon>\n                    </StyledIconButton>\n                    <StyledIconButton\n                      disabled={!(product.amount - 1)}\n                      size=\"small\"\n                      onClick={() =>\n                        dispatch(updateCartAmount(user.id, product.id, product.amount - 1))\n                      }\n                    >\n                      <Icon id={!(product.amount - 1) && 'disable'}>keyboard_arrow_down</Icon>\n                    </StyledIconButton>\n                  </Box>\n                  <Box mr={1}>\n                    <IMG src={product.imgUrl} alt={product.title} />\n                  </Box>\n                  <ProductDetails>\n                    <H6>{product.title}</H6>\n                    <Small sx={{ color: secondary }}>\n                      ${product.price} x {product.amount}\n                    </Small>\n                  </ProductDetails>\n                  <StyledIconButton\n                    size=\"small\"\n                    onClick={() => dispatch(deleteProductFromCart(user.userId, product.id))}\n                  >\n                    <Icon fontSize=\"small\">clear</Icon>\n                  </StyledIconButton>\n                </ProductBox>\n              ))}\n            </Box>\n\n            <Button\n              sx={{ width: '100%', borderRadius: 0 }}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleCheckoutClick}\n            >\n              Checkout (${totalCost.toFixed(2)})\n            </Button>\n          </MiniCart>\n        </Drawer>\n      </ThemeProvider>\n    </Fragment>\n  );\n}\n\nexport default ShoppingCart;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/events.jsx",["1547"],"const now = new Date();\n\nexport default [\n  {\n    id: 0,\n    title: 'All Day Event very long title',\n    allDay: true,\n    start: new Date(2015, 3, 0),\n    end: new Date(2015, 3, 1),\n  },\n  {\n    id: 1,\n    title: 'Long Event',\n    start: new Date(2015, 3, 7),\n    end: new Date(2015, 3, 10),\n  },\n\n  {\n    id: 2,\n    title: 'DTS STARTS',\n    start: new Date(2016, 2, 13, 0, 0, 0),\n    end: new Date(2016, 2, 20, 0, 0, 0),\n  },\n\n  {\n    id: 3,\n    title: 'DTS ENDS',\n    start: new Date(2016, 10, 6, 0, 0, 0),\n    end: new Date(2016, 10, 13, 0, 0, 0),\n  },\n\n  {\n    id: 4,\n    title: 'Some Event',\n    start: new Date(2015, 3, 9, 0, 0, 0),\n    end: new Date(2015, 3, 10, 0, 0, 0),\n  },\n  {\n    id: 5,\n    title: 'Conference',\n    start: new Date(2015, 3, 11),\n    end: new Date(2015, 3, 13),\n    desc: 'Big conference for important people',\n  },\n  {\n    id: 6,\n    title: 'Meeting',\n    start: new Date(2015, 3, 12, 10, 30, 0, 0),\n    end: new Date(2015, 3, 12, 12, 30, 0, 0),\n    desc: 'Pre-meeting meeting, to prepare for the meeting',\n  },\n  {\n    id: 7,\n    title: 'Lunch',\n    start: new Date(2015, 3, 12, 12, 0, 0, 0),\n    end: new Date(2015, 3, 12, 13, 0, 0, 0),\n    desc: 'Power lunch',\n  },\n  {\n    id: 8,\n    title: 'Meeting',\n    start: new Date(2015, 3, 12, 14, 0, 0, 0),\n    end: new Date(2015, 3, 12, 15, 0, 0, 0),\n  },\n  {\n    id: 9,\n    title: 'Happy Hour',\n    start: new Date(2015, 3, 12, 17, 0, 0, 0),\n    end: new Date(2015, 3, 12, 17, 30, 0, 0),\n    desc: 'Most important meal of the day',\n  },\n  {\n    id: 10,\n    title: 'Dinner',\n    start: new Date(2015, 3, 12, 20, 0, 0, 0),\n    end: new Date(2015, 3, 12, 21, 0, 0, 0),\n  },\n  {\n    id: 11,\n    title: 'Planning Meeting with Paige',\n    start: new Date(2015, 3, 13, 8, 0, 0),\n    end: new Date(2015, 3, 13, 10, 30, 0),\n  },\n  {\n    id: 11.1,\n    title: 'Inconvenient Conference Call',\n    start: new Date(2015, 3, 13, 9, 30, 0),\n    end: new Date(2015, 3, 13, 12, 0, 0),\n  },\n  {\n    id: 11.2,\n    title: \"Project Kickoff - Lou's Shoes\",\n    start: new Date(2015, 3, 13, 11, 30, 0),\n    end: new Date(2015, 3, 13, 14, 0, 0),\n  },\n  {\n    id: 11.3,\n    title: 'Quote Follow-up - Tea by Tina',\n    start: new Date(2015, 3, 13, 15, 30, 0),\n    end: new Date(2015, 3, 13, 16, 0, 0),\n  },\n  {\n    id: 12,\n    title: 'Late Night Event',\n    start: new Date(2015, 3, 17, 19, 30, 0),\n    end: new Date(2015, 3, 18, 2, 0, 0),\n  },\n  {\n    id: 12.5,\n    title: 'Late Same Night Event',\n    start: new Date(2015, 3, 17, 19, 30, 0),\n    end: new Date(2015, 3, 17, 23, 30, 0),\n  },\n  {\n    id: 13,\n    title: 'Multi-day Event',\n    start: new Date(2015, 3, 20, 19, 30, 0),\n    end: new Date(2015, 3, 22, 2, 0, 0),\n  },\n  {\n    id: 14,\n    title: 'Today',\n    start: new Date(new Date().setHours(new Date().getHours() - 3)),\n    end: new Date(new Date().setHours(new Date().getHours() + 3)),\n  },\n  {\n    id: 15,\n    title: 'Point in Time Event',\n    start: now,\n    end: now,\n  },\n  {\n    id: 16,\n    title: 'Video Record',\n    start: new Date(2015, 3, 14, 15, 30, 0),\n    end: new Date(2015, 3, 14, 19, 0, 0),\n  },\n  {\n    id: 17,\n    title: 'Dutch Song Producing',\n    start: new Date(2015, 3, 14, 16, 30, 0),\n    end: new Date(2015, 3, 14, 20, 0, 0),\n  },\n  {\n    id: 18,\n    title: 'Itaewon Halloween Meeting',\n    start: new Date(2015, 3, 14, 16, 30, 0),\n    end: new Date(2015, 3, 14, 17, 30, 0),\n  },\n  {\n    id: 19,\n    title: 'Online Coding Test',\n    start: new Date(2015, 3, 14, 17, 30, 0),\n    end: new Date(2015, 3, 14, 20, 30, 0),\n  },\n  {\n    id: 20,\n    title: 'An overlapped Event',\n    start: new Date(2015, 3, 14, 17, 0, 0),\n    end: new Date(2015, 3, 14, 18, 30, 0),\n  },\n  {\n    id: 21,\n    title: 'Phone Interview',\n    start: new Date(2015, 3, 14, 17, 0, 0),\n    end: new Date(2015, 3, 14, 18, 30, 0),\n  },\n  {\n    id: 22,\n    title: 'Cooking Class',\n    start: new Date(2015, 3, 14, 17, 30, 0),\n    end: new Date(2015, 3, 14, 19, 0, 0),\n  },\n  {\n    id: 23,\n    title: 'Go to the gym',\n    start: new Date(2015, 3, 14, 18, 30, 0),\n    end: new Date(2015, 3, 14, 20, 0, 0),\n  },\n];\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/NotificationBar/NotificationBar.jsx",["1548"],"import { Badge, Button, Card, Drawer, Icon, IconButton, ThemeProvider } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport useNotification from 'app/hooks/useNotification';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant';\r\nimport { getTimeDifference } from 'app/utils/utils.js';\r\nimport React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { themeShadows } from '../MatxTheme/themeColors';\r\nimport { Paragraph, Small } from '../Typography';\r\n\r\nconst Notification = styled('div')(() => ({\r\n  padding: '16px',\r\n  marginBottom: '16px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  height: topBarHeight,\r\n  boxShadow: themeShadows[6],\r\n  '& h5': {\r\n    marginLeft: '8px',\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    fontWeight: '500',\r\n  },\r\n}));\r\n\r\nconst NotificationCard = styled(Box)(({ theme }) => ({\r\n  position: 'relative',\r\n  '&:hover': {\r\n    '& .messageTime': {\r\n      display: 'none',\r\n    },\r\n    '& .deleteButton': {\r\n      opacity: '1',\r\n    },\r\n  },\r\n  '& .messageTime': {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  '& .icon': { fontSize: '1.25rem' },\r\n}));\r\n\r\nconst DeleteButton = styled(IconButton)(({ theme }) => ({\r\n  opacity: '0',\r\n  position: 'absolute',\r\n  right: 5,\r\n  marginTop: 9,\r\n  marginRight: '24px',\r\n  background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst CardLeftContent = styled('div')(({ theme }) => ({\r\n  padding: '12px 8px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  background: 'rgba(0, 0, 0, 0.01)',\r\n  '& small': {\r\n    fontWeight: '500',\r\n    marginLeft: '16px',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Heading = styled('span')(({ theme }) => ({\r\n  fontWeight: '500',\r\n  marginLeft: '16px',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst NotificationBar = ({ container }) => {\r\n  const { settings } = useSettings();\r\n  const theme = useTheme();\r\n  const secondary = theme.palette.text.secondary;\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n  const { deleteNotification, clearNotifications, notifications } = useNotification();\r\n\r\n  const handleDrawerToggle = () => {\r\n    setPanelOpen(!panelOpen);\r\n  };\r\n\r\n  const { palette } = useTheme();\r\n  const textColor = palette.text.primary;\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <IconButton onClick={handleDrawerToggle} color=\"inherit\">\r\n        <Badge  color=\"error\" badgeContent={notifications?.length}>\r\n          <Notification />\r\n        </Badge>\r\n      </IconButton> */}\r\n\r\n      <IconButton onClick={handleDrawerToggle} color=\"inherit\">\r\n        <Badge color=\"success\" badgeContent={notifications?.length}>\r\n          <Icon sx={{ color: '#fff' }}>notifications</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n        <Drawer\r\n          width={'100px'}\r\n          container={container}\r\n          variant=\"temporary\"\r\n          anchor={'right'}\r\n          open={panelOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n        >\r\n          <Box sx={{ width: sideNavWidth }}>\r\n            <Notification>\r\n              <Icon color=\"primary\">notifications</Icon>\r\n              <h5>Notifications</h5>\r\n            </Notification>\r\n\r\n            {notifications?.map((notification) => (\r\n              <NotificationCard key={notification.id}>\r\n                <DeleteButton\r\n                  size=\"small\"\r\n                  className=\"deleteButton\"\r\n                  onClick={() => deleteNotification(notification.id)}\r\n                >\r\n                  <Icon className=\"icon\">clear</Icon>\r\n                </DeleteButton>\r\n                <Link\r\n                  to={`/${notification.path}`}\r\n                  onClick={handleDrawerToggle}\r\n                  style={{ textDecoration: 'none' }}\r\n                >\r\n                  <Card sx={{ mx: 2, mb: 3 }} elevation={3}>\r\n                    <CardLeftContent>\r\n                      <Box display=\"flex\">\r\n                        <Icon className=\"icon\" color={notification.icon.color}>\r\n                          {notification.icon.name}\r\n                        </Icon>\r\n                        <Heading>{notification.heading}</Heading>\r\n                      </Box>\r\n                      <Small className=\"messageTime\">\r\n                        {getTimeDifference(new Date(notification.timestamp))}\r\n                        ago\r\n                      </Small>\r\n                    </CardLeftContent>\r\n                    <Box sx={{ px: 2, pt: 1, pb: 2 }}>\r\n                      <Paragraph sx={{ m: 0 }}>{notification.title}</Paragraph>\r\n                      <Small sx={{ color: secondary }}>{notification.subtitle}</Small>\r\n                    </Box>\r\n                  </Card>\r\n                </Link>\r\n              </NotificationCard>\r\n            ))}\r\n            {!!notifications?.length && (\r\n              <Box sx={{ color: secondary }}>\r\n                <Button onClick={clearNotifications}>Clear Notifications</Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Drawer>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotificationBar;\r\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Singleimage.jsx",["1549"],"import { FolderOpenOutlined } from '@ant-design/icons';\nimport { Button, Space, Upload } from 'antd';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  file: {\n    width: '100%',\n    padding: '14px',\n    border: '1px solid #ffffff',\n  },\n}));\n\nconst Singleimage = () => {\n  const classes = useStyles();\n  return (\n    <>\n      {/* <Space\n    direction=\"vertical\"\n    style={{\n      width: '100%',\n    }}\n    size=\"large\"\n  > */}\n      <Upload action=\"\" listType=\"picture\" maxCount={1}>\n        <Button icon={<FolderOpenOutlined />} className={classes.file}>\n          {' '}\n          Single image\n        </Button>\n      </Upload>\n      {/* </Space>\n       */}\n    </>\n  );\n};\n\nexport default Singleimage;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleFormNew.jsx",["1550","1551"],"import { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, styled } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst SimpleFormNew = (props) => {\n  const classes = useStyles();\n  const [data1, setdata] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n  }, [props]);\n\n  return (\n    <>\n      {data1.multiline ? (\n        <>\n          <TextField\n            fullWidth\n            multiline\n            rows={data1.rows}\n            type={data1.type}\n            name={data1.name}\n            label={data1.label}\n            variant=\"outlined\"\n            onBlur={data1.onBlur}\n            value={data1.value}\n            className={classes.main2}\n            onChange={data1.onChange}\n            helperText={data1.helperText}\n            error={data1.error}\n          />\n        </>\n      ) : (\n        <>\n          <TextField\n            fullWidth\n            type={data1.type}\n            name={data1.name}\n            label={data1.label}\n            variant=\"outlined\"\n            onBlur={data1.onBlur}\n            value={data1.value}\n            className={classes.main2}\n            onChange={data1.onChange}\n            helperText={data1.helperText}\n            error={data1.error}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SimpleFormNew;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteComboNew.jsx",["1552","1553","1554","1555","1556","1557","1558","1559"],"import React, { useState, useEffect } from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport { makeStyles } from '@material-ui/styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nconst useStyles = makeStyles((theme) => ({}));\n\n// function AutocompleteCombo(props)\n\nconst AutocompleteComboNew = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = useState([]);\n\n  const [data2, setdata] = useState([]);\n  const [names, setnames] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n    setnames(props.props.names);\n  }, [props]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value\n    );\n  };\n\n  return (\n    <>\n      <FormControl fullWidth className={classes.main3}>\n        {/* <InputLabel id=\"demo-simple-select-helper-label\">{data2.name}</InputLabel> */}\n        {/* <Select\n          //  name={data2.name}\n          label={data2.label}\n          value={data2.value}\n          onChange={handleChange}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select> */}\n        {/* <InputLabel id=\"demo-simple-select-helper-label\">{data2.label}</InputLabel> */}\n        <TextField\n          id={data2.id}\n          label={data2.label}\n          value={data2.value}\n          onBlur={data2.onBlur}\n          onChange={data2.onChange}\n          fullWidth\n          select\n          helperText={data2.helperText}\n          error={data2.error}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </FormControl>\n    </>\n  );\n};\nexport default AutocompleteComboNew;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/utils/utils.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/themeColors.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/NotificationContext.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxCustomizer/MatxCustomizer.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useNotification.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/EcommerceActions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxCustomizer/BadgeSelected.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/mock.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/auth.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/ecommerce.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSuspense.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/MatxTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/EchartTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxProgressBar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSearchBox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLogo.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ChatHead.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ConfirmationDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ChatAvatar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Chatbox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Breadcrumb.jsx",["1560"],"import { Breadcrumbs, Hidden, Icon, styled, useTheme } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\n\nconst BreadcrumbRoot = styled('div')(() => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  fontFamily: 'Montserrat,sans-serif !important',\n}));\n\nconst BreadcrumbName = styled('h4')(() => ({\n  margin: 0,\n  fontSize: '16px',\n  paddingBottom: '1px',\n  verticalAlign: 'middle',\n  textTransform: 'capitalize',\n  fontFamily: 'Montserrat,sans-serif !important',\n}));\n\nconst SubName = styled('span')(({ theme }) => ({\n  textTransform: 'capitalize',\n  fontFamily: 'Montserrat,sans-serif !important',\n  color: theme.palette.text.secondary,\n}));\n\nconst Separator = styled('h4')(({ theme }) => ({\n  margin: 0,\n  marginLeft: 8,\n  paddingBottom: '3px',\n  fontFamily: 'Montserrat,sans-serif !important',\n  color: '#4BB543 !important',\n}));\n\nconst StyledIcon = styled(Icon)(() => ({\n  marginLeft: 8,\n  marginBottom: '4px',\n  verticalAlign: 'middle',\n  color: '#4BB543 !important',\n}));\n\nconst Breadcrumb = ({ routeSegments }) => {\n  const theme = useTheme();\n  const hint = theme.palette.text.hint;\n\n  return (\n    <BreadcrumbRoot>\n      {routeSegments ? (\n        <Hidden xsDown>\n          <BreadcrumbName>{routeSegments[routeSegments.length - 1]['name']}</BreadcrumbName>\n          <Separator>|</Separator>\n        </Hidden>\n      ) : null}\n\n      <Breadcrumbs\n        separator={<Icon sx={{ color: 'success' }}>navigate_next</Icon>}\n        sx={{ display: 'flex', alignItems: 'center', position: 'relative' }}\n      >\n        <NavLink to=\"/\">\n          <StyledIcon color=\"success\">home</StyledIcon>\n        </NavLink>\n\n        {routeSegments\n          ? routeSegments.map((route, index) => {\n              return index !== routeSegments.length - 1 ? (\n                <NavLink key={index} to={route.path}>\n                  <SubName>{route.name}</SubName>\n                </NavLink>\n              ) : (\n                <SubName key={index}>{route.name}</SubName>\n              );\n            })\n          : null}\n      </Breadcrumbs>\n    </BreadcrumbRoot>\n  );\n};\n\nexport default Breadcrumb;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenavContent.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenavContainer.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenav.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/icons/GoogleIcon.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/icons/FacebookIcon.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/RootReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Session9Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/MaterialRoutes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/DashboardRoutes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/settings.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Session8Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/Session7Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/Session5Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/Session4Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/session3Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Session2Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/SessionRoutes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/Session6Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Session1Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/NotFound.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/ChartsRoute.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/auth/AuthGuard.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/initThemes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Settings.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/auth/authRoles.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AppAutoComplete.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/AppDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/Analytics.jsx",["1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Grid, styled, useTheme } from '@mui/material';\nimport { Box } from '@mui/system';\nimport Typography from '@material-ui/core/Typography';\nimport Campaigns from './shared/Campaigns';\nimport DoughnutChart from './shared/Doughnut';\nimport RowCards from './shared/RowCards';\nimport StatCards from './shared/StatCards';\nimport StatCards2 from './shared/StatCards2';\nimport TopSellingTable from './shared/TopSellingTable';\nimport UpgradeCard from './shared/UpgradeCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProductionQuantityLimitsIcon from '@mui/icons-material/ProductionQuantityLimits';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport GroupIcon from '@mui/icons-material/Group';\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';\nimport TransferWithinAStationIcon from '@mui/icons-material/TransferWithinAStation';\nimport ShoppingBasketIcon from '@mui/icons-material/ShoppingBasket';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst Title = styled('span')(() => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  marginRight: '.5rem',\n  textTransform: 'capitalize',\n}));\n\nconst SubTitle = styled('span')(({ theme }) => ({\n  fontSize: '0.875rem',\n  color: theme.palette.text.secondary,\n}));\n\nconst H4 = styled('h4')(({ theme }) => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  marginBottom: '16px',\n  textTransform: 'capitalize',\n  color: theme.palette.text.secondary,\n}));\nconst useStyles = makeStyles((theme) => ({\n  box0: {\n    width: '100%',\n    backgroundColor: '#fff',\n    boxShadow: 'rgb(13 13 13 / 5%) 0px 10px 8px',\n    padding: '30px 30px',\n    marginBottom: '15px',\n    // boxShadow:\n    //   'rgba(240, 46, 170, 0.4) -5px 5px, rgba(240, 46, 170, 0.3) -10px 10px, rgba(240, 46, 170, 0.2)-15px 15px, rgba(240, 46, 170, 0.1) -20px 20px, rgba(240, 46, 170, 0.05) -25px 25px',\n  },\n  profile4: {\n    background: '#fff',\n    color: '#000',\n    margin: '18px 0px',\n    boxShadow: 'rgb(13 13 13 / 5%) 0px 10px 8px',\n  },\n  tab1: {\n    // border: '1px solid #d7cece',\n    // padding: '4px 0px',\n  },\n  tab: {\n    // background: '#fff',\n    background: '#e0e0e07a',\n    border: '1px solid #b5b5b559',\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={2}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst Analytics = () => {\n  const { palette } = useTheme();\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  console.log('value', value);\n\n  const handleChangeButton = (e) => {\n    setValue(e);\n  };\n  return (\n    <>\n      <Container>\n        <div className={classes.box0}>\n          <Grid container spacing={2}>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: '#2eadd3' }}\n                icon={<ProductionQuantityLimitsIcon />}\n                title=\"Products\"\n                url=\"/Product/ListProducts\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(66, 139, 202)' }}\n                icon={<FavoriteIcon />}\n                title=\"Sale\"\n                url=\"/Sales/SalesList\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(255, 84, 84)' }}\n                icon={<FavoriteBorderIcon />}\n                title=\"Quotations\"\n                url=\"/Quotations/Listquotation\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(173, 39, 39)' }}\n                icon={<ShoppingBasketIcon />}\n                title=\"Purchases\"\n                url=\"/Purchases/AddExpense\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(120, 205, 81)' }}\n                icon={<TransferWithinAStationIcon />}\n                title=\"Transfers\"\n                url=\"/Transfers/ListTransfers\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(250, 187, 61)' }}\n                icon={<GroupIcon />}\n                title=\"Customers\"\n                url=\"/People/ListUsers\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(48, 63, 159)' }}\n                icon={<GroupIcon />}\n                title=\"Suppliers\"\n                url=\"/People/ListSuppliers\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(123, 31, 162)' }}\n                icon={<NotificationsActiveIcon />}\n                title=\"Notifications\"\n                url=\"/Notifications/Notifications\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(34, 42, 69)' }}\n                icon={<GroupIcon />}\n                title=\"Users\"\n                url=\"/People/ListUsers'\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(0, 0, 0)' }}\n                icon={<SettingsIcon />}\n                title=\"Settings\"\n                url=\"/Settings/SystemSettings\"\n              />\n            </Grid>\n          </Grid>\n        </div>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={12} sm={12} lg={12}>\n            <div className={classes.profile4}>\n              {/* <PersonPinIcon /> */}\n              <Tabs\n                className={classes.tab5}\n                value={value}\n                onChange={handleChange}\n                // indicatorColor=\"primary\"\n              >\n                <Tab className={classes.tab} label=\"Sales\" {...a11yProps(0)} />\n                <Tab className={classes.tab} label=\"Quotations\" {...a11yProps(1)} />\n                <Tab className={classes.tab} label=\"Purchases\" {...a11yProps(2)} />\n                <Tab className={classes.tab} label=\"Transfers\" {...a11yProps(3)} />\n                <Tab className={classes.tab} label=\"Customers\" {...a11yProps(4)} />\n                <Tab className={classes.tab} label=\"Suppliers\" {...a11yProps(5)} />\n              </Tabs>\n              <TabPanel className={classes.tab1} value={value} index={0}>\n                <TopSellingTable />\n              </TabPanel>\n              <TabPanel className={classes.tab1} value={value} index={1}>\n                <TopSellingTable />\n              </TabPanel>\n              <TabPanel className={classes.tab1} value={value} index={2}>\n                <TopSellingTable />\n              </TabPanel>\n              <TabPanel className={classes.tab1} value={value} index={3}>\n                <TopSellingTable />\n              </TabPanel>\n              <TabPanel className={classes.tab1} value={value} index={4}>\n                <TopSellingTable />\n              </TabPanel>\n              <TabPanel className={classes.tab1} value={value} index={5}>\n                <TopSellingTable />\n              </TabPanel>\n            </div>\n          </Grid>\n        </Grid>\n        {/* \n        <Grid container spacing={3}>\n          <Grid item lg={8} md={8} sm={12} xs={12}>\n            <TopSellingTable />\n            <StatCards2 />\n\n            <H4>Ongoing Projects</H4>\n            <RowCards />\n          </Grid>\n\n          <Grid item lg={4} md={4} sm={12} xs={12}>\n            <Card sx={{ px: 3, py: 2, mb: 3 }}>\n              <Title>Traffic Sources</Title>\n              <SubTitle>Last 30 days</SubTitle>\n\n              <DoughnutChart\n                height=\"300px\"\n                color={[palette.primary.dark, palette.primary.main, palette.primary.light]}\n              />\n            </Card>\n\n            <UpgradeCard />\n            <Campaigns />\n          </Grid>\n        </Grid> */}\n      </Container>\n    </>\n  );\n};\n\nexport default Analytics;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Appuploadimage.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/AppForm.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/AppTable.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Backups.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/AppExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/AppSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/AppSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/AppSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/AppRadio.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/AppMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/ck/Appeditor.jsx",["1572","1573","1574","1575","1576"],"import { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n    ckt: {\n     height:\"200px\",\n    },\n  }));\n\nexport default function Appeditor() {\n    const classes = useStyles();\n  return (\n    <>\n\n                 <CKEditor\n                  \n                    editor={ ClassicEditor }\n                    data=\"\"\n                    onReady={ editor => {\n                        console.log( 'Editor is ready to use!', editor );\n                    } }\n                    onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n                        console.log( { event, editor, data } );\n                    } }\n                    onBlur={ ( event, editor ) => {\n                        console.log( 'Blur.', editor );\n                    } }\n                    onFocus={ ( event, editor ) => {\n                        console.log( 'Focus.', editor );\n                        \n                    } }\n                />\n    </>\n  );\n};\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/icons/AppIcon.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/AppCheckbox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/AppButton.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Productdetail.jsx",["1577","1578"],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@mui/material/Grid';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport mobile1 from '../../../../src/public/assets/images/mobile1.png';\nimport SimpleTable from '../material-kit/tables/SimpleTable';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport PrintIcon from '@mui/icons-material/Print';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  profilepic: {\n    width: '100%',\n  },\n  product: {\n    color: '#000',\n    padding: '45px 20px',\n  },\n  test07: {\n    textAlign: 'left',\n    paddingBottom: '21px',\n  },\n  test6: {\n    fontSize: '13px',\n  },\n  product1: {\n    margin: '20px 0px',\n    borderTop: '1px solid #e5dfdf',\n    borderBottom: '1px solid #e5dfdf',\n    padding: '16px 0px 10px',\n  },\n  testtt: {\n    fontSize: '15px',\n    fontWeight: '600',\n  },\n  test5: {\n    border: '1px solid#a79797',\n    padding: '9px 5px 0px',\n    borderRadius: '50%',\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nfunction Productdetail() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Product Details' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Box sx={{ border: 1, borderColor: 'divider' }}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"basic tabs example\"\n            sx={{ borderBottom: '1px solid#e1dada' }}\n          >\n            <Tab label=\"Product Details\" {...a11yProps(0)} />\n            <Tab label=\"Chart\" {...a11yProps(1)} />\n            <Tab label=\"Sales\" {...a11yProps(2)} />\n            <Tab label=\"Quotations\" {...a11yProps(3)} />\n            <Tab label=\"Purchases\" {...a11yProps(4)} />\n            <Tab label=\"Transfers\" {...a11yProps(5)} />\n            <Tab label=\"Quantity Adjustments\" {...a11yProps(6)} />\n          </Tabs>\n          <TabPanel value={value} index={0}>\n            <Box className={classes.product}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <img className={classes.profilepic} src={mobile1} alt=\"image\" />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <Typography>Warehouse Quantity</Typography>\n                  <Typography>Warehouse Name</Typography>\n                  <Typography>Quantity (Racks)</Typography>\n                  <div className={classes.product1}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6} sm={3} md={3}>\n                        <NavLink to=\"/Product/PrintBarcode\" className={classes.test5}>\n                          <PrintIcon style={{ color: 'rgb(100 94 94)', fontSize: '18px' }} />\n                        </NavLink>\n                        <Typography>Print</Typography>\n                      </Grid>\n                      <Grid item xs={6} sm={3} md={3}>\n                        <NavLink to=\"#\" className={classes.test5}>\n                          <FileDownloadIcon style={{ color: 'rgb(100 94 94)', fontSize: '18px' }} />\n                        </NavLink>\n                        <Typography>Pdf</Typography>\n                      </Grid>\n                      <Grid item xs={6} sm={3} md={3}>\n                        <NavLink to=\"/Product/Editproduct\" className={classes.test5}>\n                          <EditIcon style={{ color: 'rgb(100 94 94)', fontSize: '18px' }} />\n                        </NavLink>\n                        <Typography>Edit</Typography>\n                      </Grid>\n                      <Grid item xs={6} sm={3} md={3}>\n                        <NavLink to=\"/\" className={classes.test5}>\n                          <DeleteIcon style={{ color: 'rgb(100 94 94)', fontSize: '18px' }} />\n                        </NavLink>\n                        <Typography>Delete</Typography>\n                      </Grid>\n                    </Grid>\n                  </div>\n                  <Grid container spacing={2}>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Title</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Standard</Typography>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Name</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Test 03</Typography>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Code</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>0312</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Brand</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Apple</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Category</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Apple Products</Typography>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Sub Category</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>iPhone</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Unit</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Pcs (Piece)</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Cost</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>admin@stock.com150.00</Typography>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Price</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>admin@stock.com150.00</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Tax Rate</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>SGST</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Tax Method</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Inclusive</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <SimpleTable />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <SimpleTable />\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <SimpleTable />\n          </TabPanel>\n          <TabPanel value={value} index={4}>\n            <SimpleTable />\n          </TabPanel>\n          <TabPanel value={value} index={5}>\n            <SimpleTable />\n          </TabPanel>\n          <TabPanel value={value} index={6}>\n            <SimpleTable />\n          </TabPanel>\n        </Box>\n      </SimpleCard>\n    </Container>\n  );\n}\nexport default Productdetail;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Editproduct.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Stockdetails.jsx",["1579","1580","1581"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { Button } from '@material-ui/core';\nimport Typography from '@mui/material/Typography';\nimport Appeditor from '../material-kit/ck/Appeditor';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Label from '../material-kit/tables/Label';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  text3: {\n    fontSize: '14px',\n    textAlign: 'left',\n    paddingBottom: '5px',\n  },\n  text4: {\n    border: '1px solid #dbcdcd',\n    width: '100%',\n    padding: '10px',\n    fontWeight: '600',\n  },\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  box2: {\n    border: '1px solid #dbcdcd',\n    padding: '14px',\n    marginBottom: '15px',\n    width: '100%',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: '#ab043a',\n    margin: '0px 10px',\n  },\n}));\nconst Stockdetails = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState('ForBoth');\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  const handleChange1 = (event) => {};\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Notification' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Typography className={classes.text3}>\n              Please fill in the information below. The field labels marked with * are required\n              input fields.\n            </Typography>\n          </Grid>\n\n          <Typography className={classes.text4}> Stock Count</Typography>\n          <Box className={classes.box2}>\n            <Grid container spacing={1}>\n              <Grid item xs={6} md={6}>\n                <Typography>Warehouse</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>Impetrosys ( WH1 )</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>Date</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>18/11/2020 12:34</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>Reference</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography></Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>Type</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>Full</Typography>\n              </Grid>\n            </Grid>\n          </Box>\n\n          <Grid item xs={12}>\n            <Box className={classes.box2}>\n              <Typography>\n                The first line in downloaded csv file should remain as it is. Please do not change\n                the order of columns. The correct column order is (Product Code, Product Name,\n                Variant, Expected, Counted) & you must follow this. Please make sure the csv file is\n                UTF-8 encoded and not saved with byte order mark (BOM). You just need to update the\n                COUNTED column in the downloaded csv file.\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Fileattachment\n              props={{\n                label: 'Upload File',\n              }}\n            />\n          </Grid>\n          <Label sx={{ mt: 1 }}>Note</Label>\n          <Grid item xs={12}>\n            <Appeditor />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button type=\"submit\" className={classes.btn2}>\n              Submit\n            </Button>\n            <Button type=\"submit\" className={classes.btn3}>\n              Reset\n            </Button>\n          </Grid>\n        </Grid>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Stockdetails;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Profile.jsx",["1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleRadio from '../material-kit/radio/SimpleRadio';\nimport SimpleRadioNew from '../material-kit/radio/SimpleRadioNew';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport CreateIcon from '@mui/icons-material/Create';\nimport KeyIcon from '@mui/icons-material/Key';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport SimpleForms from '../material-kit/forms/SimpleForms';\nimport Typography from '@material-ui/core/Typography';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport Label from '../material-kit/tables/Label';\nimport face from '../../../../src/public/assets/images/face.jpg';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { FolderOpenOutlined } from '@ant-design/icons';\nimport { Button as Buttonimage, Space, Upload } from 'antd';\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  file: {\n    width: '100%',\n    padding: '14px',\n    border: '1px solid #ffffff',\n  },\n  profile0: {\n    boxShadow: 'rgb(0 0 0 / 10%) 0px 10px 50px',\n    backgroundColor: 'rgba(255,255,255,0.7);',\n    backdropFilter: 'blur(20px)',\n    borderStyle: 'solid',\n    borderColor: '#f5f5f5',\n    borderBottomwidth: 'thin',\n    marginBottom: '1px',\n    padding: '0px 14px',\n  },\n  profile04: {\n    padding: '0px 0px !important',\n  },\n  profile01: {\n    boxShadow: 'rgb(0 0 0 / 10%) 0px 10px 50px',\n    backgroundColor: 'rgba(255,255,255,0.7)',\n    textAlign: 'center',\n    color: '#000',\n    borderRadius: '0px',\n    padding: '20px 0px',\n  },\n  profilepic: {\n    borderRadius: '50%',\n    width: '150px',\n    boxShadow: 'rgb(0 0 0 / 10%) 0px 10px 50px',\n    border: '2px solid #d9c9c9',\n    padding: '12px',\n  },\n  ty: {\n    fontSize: '17px',\n    fontWeight: '700',\n    padding: '0px 12px',\n    // textAlign: 'start',\n  },\n  ty1: {\n    fontSize: '15px',\n    padding: '10px 12px',\n    width: '100%',\n  },\n  ty0: {\n    // backgroundImage: 'linear-gradient(to right, #8e2de2, #4a00e0)',\n    backgroundImage: 'linear-gradient(to right, rgb(10 37 64), #094e0d)',\n    boxShadow: 'rgb(17 12 46 / 15%) 0px 48px 100px 0px',\n    color: '#fff',\n    borderRadius: '50%',\n    padding: '10px 10px 3px',\n    textAlign: 'center',\n  },\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\n\n\nconst initialValuestab2 = {\n  Oldpassword: '',\n  Newpassword: '',\n  Confirmpassword: '',\n  // Gender: 'male'\n  // AttachDocument: '',\n  // Note: ''\n};\n\nconst initialValuestab3 = {};\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Fname: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n  Lname: Yup.string()\n    .min(6, 'Category must be 6 character length')\n    .required('Category is required!'),\n  Company: Yup.string()\n    .min(6, 'Amount must be 6 character length')\n    .required('Amount is required!'),\n  Mobile: Yup.string()\n    .min(6, 'Amount must be 6 character length')\n    .required('Amount is required!'),\n});\n\nconst validationSchematab2 = Yup.object().shape({\n  Oldpassword: Yup.string()\n    .required('Old Password is required')\n    .min(6, 'Password must be at least 6 characters'),\n  Newpassword: Yup.string()\n    .required('Password is required')\n    .min(6, 'New Password must be at least 6 characters'),\n  Confirmpassword: Yup.string()\n    .required('Confirm New Password is required')\n    .oneOf([Yup.ref('Newpassword')], 'Passwords must match'),\n});\n\nconst validationSchematab3 = Yup.object().shape({});\nconst Profile = () => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState();\n  const [gender, setgender] = useState('male');\n  const [image, setimage] = useState('');\n  const props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text',\n    },\n\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n        setimage(info.file, info.fileList[0].originFileObj);\n      }\n\n      if (info.file.status === 'done') {\n        setimage(info.file, info.fileList[0].originFileObj);\n        console.log(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        console.log(`${info.file.name} file upload failed.`);\n      }\n    },\n  };\n  const initialValues = {\n    Fname: 'OWNER',\n    Lname: 'Company',\n    Company: 'Impretosys',\n    Mobile: '9713254069',\n    // Gender: 'male'\n    // AttachDocument: '',\n    // Note: ''\n  };\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handleChange1 = (event) => {\n    setgender(event.target.value);\n  };\n  const handleimage = (event, image) => {\n    console.log(image);\n  };\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values, gender);\n    // setLoading(true);\n\n    // try {\n    //   register(values.email, values.username, values.password);\n    //   navigate('/');\n    //   setLoading(false);\n    // } catch (e) {\n    //   console.log(e);\n    //   setLoading(false);\n    // }\n  };\n\n  const handleFormSubmittab2 = (values) => {\n    console.log(values);\n    // setLoading(true);\n\n    // try {\n    //   register(values.email, values.username, values.password);\n    //   navigate('/');\n    //   setLoading(false);\n    // } catch (e) {\n    //   console.log(e);\n    //   setLoading(false);\n    // }\n  };\n\n  const handleFormSubmittab3 = (values) => {\n    console.log(image);\n    // setLoading(true);\n\n    // try {\n    //   register(values.email, values.username, values.password);\n    //   navigate('/');\n    //   setLoading(false);\n    // } catch (e) {\n    //   console.log(e);\n    //   setLoading(false);\n    // }\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Users Profile' }]}\n        />\n      </Box>\n      <div>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Box className={classes.profile01}>\n              <Typography className={classes.ty}>User Profile</Typography>\n              <AccordionSummary style={{ display: ' grid' }} className={classes.profile04}>\n                <Typography className={classes.ty0}>\n                  <img className={classes.profilepic} src={face} alt=\"image\" />\n                </Typography>\n              </AccordionSummary>\n              {/* <img className={classes.profilepic} src={face} alt=\"image\" /> */}\n              <Typography>Login Email</Typography>\n              <Typography>admin@stock.com</Typography>\n            </Box>\n          </Grid>\n        </Grid>\n        <Accordion\n          expanded={expanded === 'panel1'}\n          onChange={handleChange('panel1')}\n          className={classes.profile0}\n        >\n          <AccordionSummary\n            expandIcon={<ArrowForwardIosSharpIcon style={{ fontSize: '15px' }} />}\n            aria-controls=\"panel1bh-content\"\n            id=\"panel1bh-header\"\n            className={classes.profile04}\n          >\n            <Typography className={classes.ty0}>\n              <CreateIcon />\n            </Typography>\n            <Typography className={classes.ty1}>Edit</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Formik\n              onSubmit={handleFormSubmit}\n              initialValues={initialValues}\n              validationSchema={validationSchema}\n            >\n              {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <SimpleFormNew\n                        props={{\n                          type: 'text',\n                          name: 'Fname',\n                          label: 'First Name',\n                          onBlur: handleBlur,\n                          value: values.Fname,\n                          onChange: handleChange,\n                          helperText: touched.Fname && errors.Fname,\n                          error: Boolean(errors.Fname && touched.Fname),\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      {/* <SimpleForms\n                      props={{\n                        type: 'text',\n                        name: 'First Name',\n                        label: 'First Name',\n                        variant: 'outlined',\n                        defaultValue: 'Owner',\n                        value: 'Owner',\n                      }}\n                    /> */}\n                      {/* <SimpleForms\n                      props={{\n                        type: 'text',\n                        name: 'Last Name',\n                        label: 'Last Name',\n                        variant: 'outlined',\n                        defaultValue: 'Owner',\n                        value: 'Owner',\n                      }}\n                    /> */}\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <SimpleFormNew\n                        props={{\n                          type: 'text',\n                          name: 'Lname',\n                          label: 'Last Name',\n                          onBlur: handleBlur,\n                          value: values.Lname,\n                          onChange: handleChange,\n                          helperText: touched.Lname && errors.Lname,\n                          error: Boolean(errors.Lname && touched.Lname),\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <SimpleFormNew\n                        props={{\n                          type: 'text',\n                          name: 'Company',\n                          label: 'Company',\n                          onBlur: handleBlur,\n                          value: values.Company,\n                          onChange: handleChange,\n                          helperText: touched.Company && errors.Company,\n                          error: Boolean(errors.Company && touched.Company),\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <SimpleFormNew\n                        props={{\n                          type: 'text',\n                          name: 'Mobile',\n                          label: 'Phone Number',\n                          onBlur: handleBlur,\n                          value: values.Mobile,\n                          onChange: handleChange,\n                          helperText: touched.Mobile && errors.Mobile,\n                          error: Boolean(errors.Mobile && touched.Mobile),\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <SimpleRadioNew\n                        props={{\n                          Lable: 'Gender',\n                          Value: gender,\n                          Name: 'Gender',\n                          Arealable: 'Gender',\n                          Change: handleChange1,\n                          Radiobutton: [\n                            { name: 'Male', value: 'male' },\n                            { name: 'Female', value: 'female' },\n                            { name: 'Other', value: 'other' },\n                          ],\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        type=\"submit\"\n                        loading={loading}\n                        className={classes.btn2}\n                      >\n                        Update Details\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </form>\n              )}\n            </Formik>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion\n          expanded={expanded === 'panel2'}\n          onChange={handleChange('panel2')}\n          className={classes.profile0}\n        >\n          <AccordionSummary\n            expandIcon={<ArrowForwardIosSharpIcon style={{ fontSize: '15px' }} />}\n            aria-controls=\"panel2bh-content\"\n            id=\"panel2bh-header\"\n            className={classes.profile04}\n          >\n            <Typography className={classes.ty0}>\n              <KeyIcon />\n            </Typography>\n            <Typography className={classes.ty1}>Change Password</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Formik\n              onSubmit={handleFormSubmittab2}\n              initialValues={initialValuestab2}\n              validationSchema={validationSchematab2}\n            >\n              {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={12} lg={12}>\n                      {/* <SimpleForms\n                        props={{\n                          type: 'text',\n                          name: 'Old Password',\n                          label: 'Old Password',\n                          variant: 'outlined',\n                          defaultValue: '',\n                          value: '',\n                        }}\n                      /> */}\n                      <SimpleFormNew\n                        props={{\n                          type: 'password',\n                          name: 'Oldpassword',\n                          label: 'Old Password',\n                          onBlur: handleBlur,\n                          value: values.Oldpassword,\n                          onChange: handleChange,\n                          helperText: touched.Oldpassword && errors.Oldpassword,\n                          error: Boolean(errors.Oldpassword && touched.Oldpassword),\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                      {/* <SimpleForms\n                        props={{\n                          type: 'text',\n                          name: 'New Password',\n                          label: 'New Password ',\n                          variant: 'outlined',\n                          defaultValue: '',\n                          value: '',\n                        }}\n                      /> */}\n                      <SimpleFormNew\n                        props={{\n                          type: 'password',\n                          name: 'Newpassword',\n                          label: 'New Password',\n                          onBlur: handleBlur,\n                          value: values.Newpassword,\n                          onChange: handleChange,\n                          helperText: touched.Newpassword && errors.Newpassword,\n                          error: Boolean(errors.Newpassword && touched.Newpassword),\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      {/* <SimpleForms\n                        props={{\n                          type: 'text',\n                          name: 'Confirm Password ',\n                          label: 'Confirm Password ',\n                          variant: 'outlined',\n                          defaultValue: '',\n                          value: '',\n                        }}\n                      /> */}\n                      <SimpleFormNew\n                        props={{\n                          type: 'password',\n                          name: 'Confirmpassword',\n                          label: 'Confirm Password',\n                          onBlur: handleBlur,\n                          value: values.Confirmpassword,\n                          onChange: handleChange,\n                          helperText: touched.Confirmpassword && errors.Confirmpassword,\n                          error: Boolean(errors.Confirmpassword && touched.Confirmpassword),\n                        }}\n                      />\n                      {/* <Button type=\"submit\" className={classes.btn22}>\n                Change Cassword\n              </Button> */}\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        type=\"submit\"\n                        loading={loading}\n                        className={classes.btn2}\n                      >\n                        Change Password\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </form>\n              )}\n            </Formik>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion\n          expanded={expanded === 'panel3'}\n          onChange={handleChange('panel3')}\n          className={classes.profile0}\n        >\n          <AccordionSummary\n            expandIcon={<ArrowForwardIosSharpIcon style={{ fontSize: '15px' }} />}\n            aria-controls=\"panel3bh-content\"\n            id=\"panel3bh-header\"\n            className={classes.profile04}\n          >\n            <Typography className={classes.ty0}>\n              <PersonPinIcon />\n            </Typography>\n            <Typography className={classes.ty1}>Avater</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Formik\n              onSubmit={handleFormSubmittab3}\n              initialValues={initialValuestab3}\n              validationSchema={validationSchematab3}\n            >\n              {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                  <Label style={{ marginBottom: '10px' }}>Change Avatar</Label>\n\n                  <Upload action=\"\" listType=\"picture\" maxCount={1} {...props}>\n                    <Buttonimage icon={<FolderOpenOutlined />} className={classes.file}>\n                      {' '}\n                      Single image\n                    </Buttonimage>\n                  </Upload>\n                  {/* <Button type=\"submit\" style={{ marginTop: '20px' }} className={classes.btn2}>\n                    Update Avater\n              </Button> */}\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    style={{ marginTop: '20px' }}\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Update Avater\n                  </LoadingButton>\n                </form>\n              )}\n            </Formik>\n          </AccordionDetails>\n        </Accordion>\n      </div>\n    </Container>\n  );\n};\n\nexport default Profile;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Conutstock.jsx",["1599","1600","1601","1602","1603","1604","1605","1606"],"import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport Countstack from '../material-kit/radio/Countstack';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  Reference: '',\n  Warehouse: '',\n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n});\n\nconst Conutstock = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Conut stock' }]}\n        />\n      </Box>\n\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference',\n                      // onChange:{handleChange},\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Label style={{ margin: '5px 0px 10px 0px' }}>type</Label>\n              <Countstack />\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Add Biller\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Conutstock;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/StockCounts.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/AddAdjustment.jsx",["1607","1608","1609","1610","1611","1612"],"import React, { useState } from 'react';\nimport Grid from '@mui/material/Grid';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Date from '../material-kit/forms/Date';\nimport { makeStyles } from '@material-ui/styles';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n// inital login credentials\nconst initialValues = {\n  Reference: '',\n  Warehouse: '',\n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n});\n\nconst AddAdjustment = () => {\n  const handleChange = (event) => {\n    console.log(event);\n  };\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Adjustment' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Label style={{ marginTop: '10px' }}>Products *</Label>\n                  <Searchtable />\n                  <Label style={{ margin: '15px 0px' }}>Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Add Biller\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddAdjustment;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/QuantityAdjustments.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/ImportProducts.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/PrintBarcode.jsx",["1613","1614","1615","1616","1617"],"import React from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Typography from '@mui/material/Typography';\nimport LabelledCheckbox from '../material-kit/checkbox/LabelledCheckbox';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@mui/material/Grid';\nimport { Button } from '@mui/material';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  Style: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Style: Yup.string()\n    .min(6, 'Style must be 6 character length')\n    .required('Style is required!'),\n});\nconst PrintBarcode = () => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    // setLoading(true);\n\n    // try {\n    //   register(values.email, values.username, values.password);\n    //   navigate('/');\n    //   setLoading(false);\n    // } catch (e) {\n    //   console.log(e);\n    //   setLoading(false);\n    // }\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Print Barcode' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <Typography variant=\"subtitle1\">Add Product</Typography>\n                  <Searchtable />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      id: 'Category',\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Style',\n                      label: 'Style',\n                      value: values.Style,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Style'),\n                      helperText: touched.Style && errors.Style,\n                      error: Boolean(errors.Style && touched.Style),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <LabelledCheckbox />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Update\n                  </LoadingButton>\n                  <Button variant=\"contained\" className={classes.btn3}>\n                    Reset\n                  </Button>\n                </Grid>\n                {/* <Typography variant=\"subtitle1\" sx={{ mt: 1, mb: 1 }}>\n          <Button variant=\"contained\" className={classes.btn2}>\n            Update\n          </Button>\n          <Button variant=\"contained\" className={classes.btn3}>\n            Reset\n          </Button>\n        </Typography> */}\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default PrintBarcode;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/ListProducts.jsx",["1618"],"import { useState, useEffect } from 'react';\nimport axios from 'axios.js';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleTable from '../material-kit/tables/SimpleTable';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst ListProducts = () => {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setPosts(data.data.ListstockproductResponce));\n  }, []);\n\n  // console.log(posts, 'kkkk');\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'List Products' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <SimpleTable\n          props={{\n            productlist: posts,\n          }}\n        />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default ListProducts;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/AddReturn.jsx",["1619","1620","1621","1622"],"import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  OrderDiscount: '',\n  Shipping: '',\n  Customer: '',\n  Reference: '',\n  Biller: '',\n  Supplier: '',\n  Warehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  OrderDiscount: Yup.string()\n    .min(6, 'OrderDiscount must be 6 character length')\n    .required('Order Discount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\n\nconst AddReturn = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Return' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'OrderDiscount',\n                      label: 'Order Discount',\n                      onBlur: handleBlur,\n                      value: values.OrderDiscount,\n                      onChange: handleChange,\n                      helperText: touched.OrderDiscount && errors.OrderDiscount,\n                      error: Boolean(errors.OrderDiscount && touched.OrderDiscount),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Biller',\n                      label: 'Biller',\n                      value: values.Biller,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Biller'),\n                      helperText: touched.Biller && errors.Biller,\n                      error: Boolean(errors.Biller && touched.Biller),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Customer',\n                      label: 'Customer',\n                      value: values.Customer,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Customer'),\n                      helperText: touched.Customer && errors.Customer,\n                      error: Boolean(errors.Customer && touched.Customer),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label> Order Items *</Label>\n                  <Searchtable />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <Label style={{ margin: '0px 0px 10px' }}>Return Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Label style={{ margin: '0px 0px 10px' }}>Staff Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n                {/* <DDbutton /> */}\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddReturn;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/AddProduct.jsx",["1623","1624","1625","1626","1627","1628","1629","1630","1631","1632"],"import React, { useState, useEffect } from 'react';\nimport { Box } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport AutocompleteComboWithIdValue from '../material-kit/auto-complete/AutocompleteComboWithIdValue';\nimport Showhideformcheckbox from '../material-kit/checkbox/Showhideformcheckbox';\nimport SearchwithAadtable from '../material-kit/checkbox/SearchwithAadtable';\nimport SimpleCheckbox from '../material-kit/checkbox/SimpleCheckbox';\nimport FormGroupCheckbox from '../material-kit/checkbox/FormGroupCheckbox';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport Multipleimage from '../material-kit/uploadimage/Multipleimage';\nimport Addfeild from '../material-kit/forms/Addfeild';\nimport { Grid, styled } from '@mui/material';\nimport Label from '../material-kit/tables/Label';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport axios from 'axios.js'\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\nimport useBrand from 'app/hooks/useBrand';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  text1: {\n    // bottom: \"10px\",\n    margin: '0px 0px 8px 0px',\n  },\n  btn2: {\n    // marginTop: '14px',\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\n\n// inital login credentials\nconst initialValues = {\n  ProductName: '',\n  SecondaryName: '',\n  BarcodeSymbology: '',\n  ProductCost: '',\n  ProductUnit: '',\n  Category: '',\n  DefaultSaleUnit: '',\n  ProductTax: '',\n  ProductCode: '',\n  ProductType: '',\n  Slug: '',\n  Weight: '',\n  ProductPrice: '',\n  HSNCode: '',\n  SubCategory: '',\n  DefaultPurchaseUnit: '',\n  TaxMethod: '',\n  AlertQuantity: '',\n  Brand: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  ProductName: Yup.string()\n    .min(6, 'ProductName must be 6 character length')\n    .required('Product Name is required!'),\n\n  SecondaryName: Yup.string()\n    .min(6, 'SecondaryName must be 6 character length')\n    .required('Secondary Name is required!'),\n\n  BarcodeSymbology: Yup.string()\n    .min(6, 'BarcodeSymbology must be 6 character length')\n    .required('Barcode is required!'),\n\n  ProductCost: Yup.string()\n    .min(6, 'ProductCost must be 6 character length')\n    .required('Product Cost is required!'),\n\n  ProductUnit: Yup.string()\n    .min(6, 'ProductUnit must be 6 character length')\n    .required('Product Unit is required!'),\n\n  Category: Yup.string()\n    .min(6, 'Category must be 6 character length')\n    .required('Category is required!'),\n\n  DefaultSaleUnit: Yup.string()\n    .min(6, 'DefaultSaleUnit must be 6 character length')\n    .required('Default Sale Unit  is required!'),\n\n  ProductTax: Yup.string()\n    .min(6, 'ProductTax must be 6 character length')\n    .required('Product Tax  is required!'),\n\n  ProductCode: Yup.string()\n    .min(6, 'ProductCode must be 6 character length')\n    .required('Product Code is required!'),\n\n  ProductType: Yup.string()\n    .min(6, 'ProductType must be 6 character length')\n    .required('Product Type is required!'),\n\n  Slug: Yup.string()\n    .min(6, 'Slug must be 6 character length')\n    .required('Slug is required!'),\n\n  Weight: Yup.string()\n    .min(6, 'Weight must be 6 character length')\n    .required('Weight is required!'),\n\n  ProductPrice: Yup.string()\n    .min(6, 'ProductPrice must be 6 character length')\n    .required('Product Price is required!'),\n\n  HSNCode: Yup.string()\n    .min(6, 'HSNCode must be 6 character length')\n    .required('HSN Code  is required!'),\n\n  SubCategory: Yup.string()\n    .min(6, 'SubCategory must be 6 character length')\n    .required('Sub Category  is required!'),\n\n  DefaultPurchaseUnit: Yup.string()\n    .min(6, 'DefaultPurchaseUnit must be 6 character length')\n    .required('Default Purchase Unit  is required!'),\n\n  TaxMethod: Yup.string()\n    .min(6, 'TaxMethod must be 6 character length')\n    .required('Tax Method  is required!'),\n\n  AlertQuantity: Yup.string()\n    .min(6, 'AlertQuantity must be 6 character length')\n    .required('Alert Quantity is required!'),\n\n  Brand: Yup.string()\n    .min(6, 'Brand must be 6 character length')\n    .required('Brand is required!'),\n});\nconst AddProduct = () => {\n  const { getBrands, brands } = useBrand();\n\n\n  const classes = useStyles();\n  const handleChange = (event) => {\n    console.log(event);\n  };\n  const handleChange1 = (event) => { };\n  const handleChange2 = (event) => { };\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  useEffect(() => {\n    getBrands()\n    // const response = axios.post('http://localhost:3000/api/admin/listbrand')\n    // console.log(response)\n    // axios.post('http://localhost:3000/api/admin/listbrand')\n    //   .then((response) => {\n    //     const outlook = response\n    //     console.log(outlook.data.data.ListstockbrandsResponce)\n    //     // if((outlook.data.status===400) || (outlook.data.status===401) || (outlook.data.status===403)){\n    //     //     navigate('/login', { replace: true });\n    //     //     localStorage.setItem(\"token\", \"\");\n    //     //     localStorage.setItem(\"userid\", '0');\n    //     //     localStorage.setItem(\"email\", '');\n    //     //     toast.warning(outlook.data.message)\n    //     // }\n    //     // else{\n    //     // setPremiumContent(outlook.data.data.rows);\n    //     // }\n    //   })\n  }, [])\n  console.log(brands)\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Product' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'ProductName',\n                      label: 'Product Name',\n                      onBlur: handleBlur,\n                      value: values.ProductName,\n                      onChange: handleChange,\n                      helperText: touched.ProductName && errors.ProductName,\n                      error: Boolean(errors.ProductName && touched.ProductName),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'SecondaryName',\n                      label: 'Secondary Name',\n                      onBlur: handleBlur,\n                      value: values.SecondaryName,\n                      onChange: handleChange,\n                      helperText: touched.SecondaryName && errors.SecondaryName,\n                      error: Boolean(errors.SecondaryName && touched.SecondaryName),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboWithIdValue\n                    props={{\n                      names: [\n                        { id: 'Code25', value: 'Code25' },\n                        { id: 'Code39', value: 'Code39' },\n                        { id: 'Code128', value: 'Code128' },\n                        { id: 'EAN8', value: 'EAN8' },\n                        { id: 'EAN13', value: 'EAN13' },\n                        { id: 'UPC-A', value: 'UPC-A' },\n                        { id: 'UPC-E', value: 'UPC-E' }\n                      ],\n                      name: 'BarcodeSymbology',\n                      label: 'Barcode Symbology',\n                      value: values.BarcodeSymbology,\n                      onBlur: handleBlur,\n                      onChange: handleChange('BarcodeSymbology'),\n                      helperText: touched.BarcodeSymbology && errors.BarcodeSymbology,\n                      error: Boolean(errors.BarcodeSymbology && touched.BarcodeSymbology),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'ProductCost',\n                      label: 'Product Cost',\n                      onBlur: handleBlur,\n                      value: values.ProductCost,\n                      onChange: handleChange,\n                      helperText: touched.ProductCost && errors.ProductCost,\n                      error: Boolean(errors.ProductCost && touched.ProductCost),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'ProductUnit',\n                      label: 'Product Unit',\n                      value: values.ProductUnit,\n                      onBlur: handleBlur,\n                      onChange: handleChange('ProductUnit'),\n                      helperText: touched.ProductUnit && errors.ProductUnit,\n                      error: Boolean(errors.ProductUnit && touched.ProductUnit),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Category',\n                      label: 'Category',\n                      value: values.Category,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Category'),\n                      helperText: touched.Category && errors.Category,\n                      error: Boolean(errors.Category && touched.Category),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'DefaultSaleUnit',\n                      label: 'Default Sale Unit',\n                      value: values.DefaultSaleUnit,\n                      onBlur: handleBlur,\n                      onChange: handleChange('DefaultSaleUnit'),\n                      helperText: touched.DefaultSaleUnit && errors.DefaultSaleUnit,\n                      error: Boolean(errors.DefaultSaleUnit && touched.DefaultSaleUnit),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'ProductTax',\n                      label: 'Product Tax',\n                      value: values.ProductTax,\n                      onBlur: handleBlur,\n                      onChange: handleChange('ProductTax'),\n                      helperText: touched.ProductTax && errors.ProductTax,\n                      error: Boolean(errors.ProductTax && touched.ProductTax),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    type=\"text\"\n                    name=\"Product Code\"\n                    label=\"Product Code\"\n                    variant=\"outlined\"\n                    onBlur={handleBlur}\n                    value={values.ProductCode}\n                    className={classes.main2}\n                    onChange={handleChange}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment>\n                          <ShuffleIcon />\n                        </InputAdornment>\n                      ),\n                    }}\n                    helperText={touched.ProductCode && errors.ProductCode}\n                    error={Boolean(errors.ProductCode && touched.ProductCode)}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Standard',\n                        'Digital',\n                        'Combo',\n                        'Service'\n                      ],\n                      name: 'ProductType',\n                      label: 'Product Type',\n                      value: values.ProductType,\n                      onBlur: handleBlur,\n                      onChange: handleChange('ProductType'),\n                      helperText: touched.ProductType && errors.ProductType,\n                      error: Boolean(errors.ProductType && touched.ProductType),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Slug',\n                      label: 'Slug',\n                      onBlur: handleBlur,\n                      value: values.Slug,\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Weight',\n                      label: 'Weight',\n                      onBlur: handleBlur,\n                      value: values.Weight,\n                      onChange: handleChange,\n                      helperText: touched.Weight && errors.Weight,\n                      error: Boolean(errors.Weight && touched.Weight),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'ProductPrice',\n                      label: 'Product Price',\n                      onBlur: handleBlur,\n                      value: values.ProductPrice,\n                      onChange: handleChange,\n                      helperText: touched.ProductPrice && errors.ProductPrice,\n                      error: Boolean(errors.ProductPrice && touched.ProductPrice),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'HSNCode',\n                      label: 'HSN Code',\n                      onBlur: handleBlur,\n                      value: values.HSNCode,\n                      onChange: handleChange,\n                      helperText: touched.HSNCode && errors.HSNCode,\n                      error: Boolean(errors.HSNCode && touched.HSNCode),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'SubCategory',\n                      label: 'Sub Category',\n                      value: values.SubCategory,\n                      onBlur: handleBlur,\n                      onChange: handleChange('SubCategory'),\n                      helperText: touched.SubCategory && errors.SubCategory,\n                      error: Boolean(errors.SubCategory && touched.SubCategory),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'DefaultPurchaseUnit',\n                      label: 'Default Purchase Unit',\n                      value: values.DefaultPurchaseUnit,\n                      onBlur: handleBlur,\n                      onChange: handleChange('DefaultPurchaseUnit'),\n                      helperText: touched.DefaultPurchaseUnit && errors.DefaultPurchaseUnit,\n                      error: Boolean(errors.DefaultPurchaseUnit && touched.DefaultPurchaseUnit),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'TaxMethod',\n                      label: 'Tax Method',\n                      value: values.TaxMethod,\n                      onBlur: handleBlur,\n                      onChange: handleChange('TaxMethod'),\n                      helperText: touched.TaxMethod && errors.TaxMethod,\n                      error: Boolean(errors.TaxMethod && touched.TaxMethod),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleCheckbox />\n                </Grid>\n                <Grid item lg={12} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Brand',\n                      label: 'Brand',\n                      value: values.Brand,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Brand'),\n                      helperText: touched.Brand && errors.Brand,\n                      error: Boolean(errors.Brand && touched.Brand),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <Singleimage />\n                </Grid>\n\n                <Grid item lg={6} xs={12}>\n                  <Multipleimage />\n                </Grid>\n                <Grid item lg={12} xs={12}>\n                  <FormGroupCheckbox />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  {' '}\n                  <SearchwithAadtable />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <Showhideformcheckbox />\n                </Grid>\n\n                <Grid item lg={12} xs={12}>\n                  <Addfeild />\n                </Grid>\n                {/* <Grid item lg={12} xs={12}>\n            <FormGroupCheckbox />\n          </Grid> */}\n                <Grid item lg={6} xs={12}>\n                  <Label className={classes.text1}>Product Details</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <Label className={classes.text1}>Product details for invoice</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item lg={12}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Add Product\n                  </LoadingButton>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddProduct;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/ListReturns.jsx",["1633"],"import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleTable from '../material-kit/tables/SimpleTable';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst ListReturns = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'List Returns' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <SimpleTable />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default ListReturns;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/AppEchart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/JwtRegister.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/ForgotPassword.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/JwtLogin.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/GiftCards.jsx",["1634"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst GiftCards = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \" List Gift Cards\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default GiftCards;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Deliveries.jsx",["1635"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst Deliveries = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Deliveries\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default Deliveries;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/PosSales.jsx",["1636"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst PosSales = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Pos Sales\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default PosSales;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Addsalecsv.jsx",["1637","1638","1639","1640"],"import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Paper from '@mui/material/Paper';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport Pdfdownloadbutton from '../material-kit/buttons/Pdfdownloadbutton';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n// inital login credentials\nconst initialValues = {\n  OrderDiscount: '',\n  Shipping: '',\n  Biller: '',\n  Reference: '',\n  Customer: '',\n  Warehouse: '',\n  SaleStatus: '',\n  Status: '',\n  PaymentTerm: '',\n  PaymentStatus: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  OrderDiscount: Yup.string()\n    .min(6, 'OrderDiscount must be 6 character length')\n    .required('Order Discount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n  Reference: Yup.number()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  SaleStatus: Yup.string()\n    .min(6, 'SaleStatus must be 6 character length')\n    .required('SaleStatus is required!'),\n\n  PaymentTerm: Yup.string()\n    .min(6, 'PaymentTerm must be 6 character length')\n    .required('Payment Term is required!'),\n\n  PaymentStatus: Yup.string()\n    .min(6, 'PaymentStatus must be 6 character length')\n    .required('Payment Statusis required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst Addsalecsv = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add sale csv' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'OrderDiscount',\n                      label: 'Order Discount',\n                      onBlur: handleBlur,\n                      value: values.OrderDiscount,\n                      onChange: handleChange,\n                      helperText: touched.OrderDiscount && errors.OrderDiscount,\n                      error: Boolean(errors.OrderDiscount && touched.OrderDiscount),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      onBlur: handleBlur,\n                      value: values.Warehouse,\n                      onChange: handleChange,\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'SaleStatus ',\n                      label: 'Sale Status ',\n                      onBlur: handleBlur,\n                      value: values.SaleStatus,\n                      onChange: handleChange,\n                      helperText: touched.SaleStatus && errors.SaleStatus,\n                      error: Boolean(errors.SaleStatus && touched.SaleStatus),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Biller',\n                      label: 'Biller',\n                      onBlur: handleBlur,\n                      value: values.Biller,\n                      onChange: handleChange,\n                      helperText: touched.Biller && errors.Biller,\n                      error: Boolean(errors.Biller && touched.Biller),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'PaymentTerm',\n                      label: 'Payment Term',\n                      onBlur: handleBlur,\n                      value: values.PaymentTerm,\n                      onChange: handleChange,\n                      helperText: touched.PaymentTerm && errors.PaymentTerm,\n                      error: Boolean(errors.PaymentTerm && touched.PaymentTerm),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'PaymentStatus',\n                      label: 'Payment Status',\n                      onBlur: handleBlur,\n                      value: values.PaymentStatus,\n                      onChange: handleChange,\n                      helperText: touched.PaymentStatus && errors.PaymentStatus,\n                      error: Boolean(errors.PaymentStatus && touched.PaymentStatus),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Customer',\n                      label: 'Customer',\n                      onBlur: handleBlur,\n                      value: values.Customer,\n                      onChange: handleChange,\n                      helperText: touched.Customer && errors.Customer,\n                      error: Boolean(errors.Customer && touched.Customer),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Fileattachment\n                    props={{\n                      label: 'CSV File',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Label style={{ marginTop: '10px' }}>Sale Note</Label>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Paper\n                    style={{\n                      boxShadow: 'none',\n                      border: '1px solid rgb(229 217 217)',\n                      padding: '14px',\n                    }}\n                  >\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" style={{ fontSize: '12px' }}>\n                          The first line in downloaded csv file should remain as it is. Please do\n                          not change the order of columns. The correct column order is (Name, Code,\n                          Barcode Symbology, Brand, Category Code, Unit Code, Sale Unit Code,\n                          Purchase Unit Code, Cost, Price, Alert Quantity, Tax, Tax Method, Image,\n                          Sub category Code, Product Variants separated by vertical bar | , Product\n                          Custom Field 1, Product Custom Field 2, Product Custom Field 3, Product\n                          Custom Field 4, Product Custom Field 5, Product Custom Field 6, HSN Code,\n                          Secondary Name, Supplier Name, Supplier Part No., Supplier Price ) & you\n                          must follow this. Please make sure the csv file is UTF-8 encoded and not\n                          saved with byte order mark (BOM). The images should be uploaded in\n                          assets/uploads/ folder and thumbnails with same name as csv to\n                          assets/uploads/thumbs/ System will check if the code belong to any product\n                          then will update that product otherwise will add new product.\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Pdfdownloadbutton />\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                  <Label> Order Items *</Label>\n                  <Searchtable />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Label>Sale Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Label>Staff Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Addsalecsv;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Addsales.jsx",["1641","1642","1643","1644","1645","1646"],"import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport DDbutton from '../material-kit/buttons/DDbutton';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport Appeditor from '../material-kit/ck/Appeditor';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  OrderDiscount: '',\n  Shipping: '',\n  Biller: '',\n  Reference: '',\n  Customer: '',\n  Warehouse: '',\n  SaleStatus: '',\n  Status: '',\n  PaymentTerm: '',\n  PaymentStatus: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  OrderDiscount: Yup.string()\n    .min(6, 'OrderDiscount must be 6 character length')\n    .required('Order Discount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  SaleStatus: Yup.string()\n    .min(6, 'SaleStatus must be 6 character length')\n    .required('SaleStatus is required!'),\n\n  PaymentTerm: Yup.string()\n    .min(6, 'PaymentTerm must be 6 character length')\n    .required('Payment Term is required!'),\n\n  PaymentStatus: Yup.string()\n    .min(6, 'PaymentStatus must be 6 character length')\n    .required('Payment Statusis required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst Addsales = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Sales' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'OrderDiscount',\n                      label: 'Order Discount',\n                      onBlur: handleBlur,\n                      value: values.OrderDiscount,\n                      onChange: handleChange,\n                      helperText: touched.OrderDiscount && errors.OrderDiscount,\n                      error: Boolean(errors.OrderDiscount && touched.OrderDiscount),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'SaleStatus ',\n                      label: 'Sale Status ',\n                      value: values.SaleStatus,\n                      onBlur: handleBlur,\n                      onChange: handleChange('SaleStatus'),\n                      helperText: touched.SaleStatus && errors.SaleStatus,\n                      error: Boolean(errors.SaleStatus && touched.SaleStatus),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Biller',\n                      label: 'Biller',\n                      value: values.Biller,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Biller'),\n                      helperText: touched.Biller && errors.Biller,\n                      error: Boolean(errors.Biller && touched.Biller),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'PaymentTerm',\n                      label: 'Payment Term',\n                      onBlur: handleBlur,\n                      value: values.PaymentTerm,\n                      onChange: handleChange,\n                      helperText: touched.PaymentTerm && errors.PaymentTerm,\n                      error: Boolean(errors.PaymentTerm && touched.PaymentTerm),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'PaymentStatus',\n                      label: 'Payment Status',\n                      value: values.PaymentStatus,\n                      onBlur: handleBlur,\n                      onChange: handleChange('PaymentStatus'),\n                      helperText: touched.PaymentStatus && errors.PaymentStatus,\n                      error: Boolean(errors.PaymentStatus && touched.PaymentStatus),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Customer',\n                      label: 'Customer',\n                      value: values.Customer,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Customer'),\n                      helperText: touched.Customer && errors.Customer,\n                      error: Boolean(errors.Customer && touched.Customer),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              {/* <Label style={{margin:\"10px 0px\"}}>Sale Note</Label> */}\n              <Grid item xs={12}>\n                <Label style={{ margin: '5px 0px 0px 0px' }}> Order Items *</Label>\n                <Searchtable />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Label style={{ margin: '10px 0px' }}>Sale Note</Label>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={note}\n                  onReady={(editor) => {\n                    console.log('Editor is ready to use!', editor);\n                  }}\n                  onChange={(event, editor) => {\n                    const data = editor.getData();\n                    setNote(data);\n                    console.log({ event, editor, data });\n                  }}\n                  onBlur={(event, editor) => {\n                    handleBlur();\n                    console.log('Blur.', editor);\n                  }}\n                  onFocus={(event, editor) => {\n                    console.log('Focus.', editor);\n                  }}\n                />\n                <div className=\"content-invalid-feedback\">\n                  {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                </div>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Label style={{ margin: '10px 0px' }}>Staff Note</Label>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={note}\n                  onReady={(editor) => {\n                    console.log('Editor is ready to use!', editor);\n                  }}\n                  onChange={(event, editor) => {\n                    const data = editor.getData();\n                    setNote(data);\n                    console.log({ event, editor, data });\n                  }}\n                  onBlur={(event, editor) => {\n                    handleBlur();\n                    console.log('Blur.', editor);\n                  }}\n                  onFocus={(event, editor) => {\n                    console.log('Focus.', editor);\n                  }}\n                />\n                <div className=\"content-invalid-feedback\">\n                  {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                </div>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Addsales;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/SalesList.jsx",["1647"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst SalesList = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"List Sales\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default SalesList;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/Addquotation.jsx",["1648","1649","1650","1651"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Button } from '@mui/material';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  OrderDiscount: '',\n  Shipping: '',\n  Biller: '',\n  Reference: '',\n  Customer: '',\n  Supplier: '',\n  Warehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  OrderDiscount: Yup.string()\n    .min(6, 'OrderDiscount must be 6 character length')\n    .required('OrderDiscount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst Addquotation = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Quotation' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'OrderDiscount',\n                      label: 'Order Discount',\n                      onBlur: handleBlur,\n                      value: values.OrderDiscount,\n                      onChange: handleChange,\n                      helperText: touched.OrderDiscount && errors.OrderDiscount,\n                      error: Boolean(errors.OrderDiscount && touched.OrderDiscount),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Biller',\n                      label: 'Biller',\n                      value: values.Biller,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Biller'),\n                      helperText: touched.Biller && errors.Biller,\n                      error: Boolean(errors.Biller && touched.Biller),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Supplier',\n                      label: 'Supplier',\n                      value: values.Supplier,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Supplier'),\n                      helperText: touched.Supplier && errors.Supplier,\n                      error: Boolean(errors.Supplier && touched.Supplier),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Customer',\n                      label: 'Customer',\n                      value: values.Customer,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Customer'),\n                      helperText: touched.Customer && errors.Customer,\n                      error: Boolean(errors.Customer && touched.Customer),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: ' Status ',\n                      label: 'Status ',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label style={{ margin: '0px 0px 0px 0px' }}> Order Items *</Label>\n                  <Searchtable />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label style={{ margin: '0px 0px 5px' }}>Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  {/* <DDbutton /> */}\n\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Submit\n                  </LoadingButton>\n                  <Button variant=\"contained\" className={classes.btn3}>\n                    Reset\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Addquotation;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/themeOptions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/ListPurchases.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/Listquotation.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/ListExpenses.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddPurchase.jsx",["1652","1653","1654","1655","1656","1657"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Checkbox } from '@mui/material';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SearchtableNew from '../material-kit/checkbox/SearchtableNew';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n// inital login credentials\nconst initialValues = {\n  Discount: '',\n  Shipping: '',\n  Payment: '',\n  Reference: '',\n  OrderTax: '',\n  Supplier: '',\n  Warehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Discount: Yup.string()\n    .min(6, 'Discount must be 6 character length')\n    .required('Discount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Payment: Yup.string()\n    .min(6, 'Payment must be 6 character length')\n    .required('Payment is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  OrderTax: Yup.string()\n    .min(6, 'OrderTax must be 6 character length')\n    .required('OrderTax is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\n\nconst handleChange = (event) => {\n  console.log(event);\n};\nconst AddPurchase = (props) => {\n  const [show, toggleShow] = useState(true);\n  const [hide, togglehide] = useState(false);\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Purchase' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Supplier',\n                      label: 'Supplier',\n                      value: values.Supplier,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Supplier'),\n                      helperText: touched.Supplier && errors.Supplier,\n                      error: Boolean(errors.Supplier && touched.Supplier),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: ' Status ',\n                      label: 'Status ',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label style={{ margin: '0px 0px 0px 0px' }}> Order Items *</Label>\n                  <SearchtableNew />\n\n                  <div style={{ margin: '0px 0px 0px 0px' }}>\n                    <Checkbox onClick={() => toggleShow(!show)} value=\"checkedA\" defaultChecked />\n                    <Label>More Options</Label>\n                    <div>\n                      {show && (\n                        <div>\n                          <Grid container spacing={2}>\n                            <Grid item lg={6} md={6} sm={12} xs={12}>\n                              <AutocompleteComboNew\n                                props={{\n                                  names: [\n                                    'Oliver Hansen',\n                                    'Van Henry',\n                                    'April Tucker',\n                                    'Ralph Hubbard',\n                                    'Omar Alexander',\n                                    'Carlos Abbott',\n                                    'Miriam Wagner',\n                                    'Bradley Wilkerson',\n                                    'Virginia Andrews',\n                                    'Kelly Snyder',\n                                  ],\n                                  name: 'OrderTax',\n                                  label: 'OrderTax',\n                                  value: values.OrderTax,\n                                  onBlur: handleBlur,\n                                  onChange: handleChange('OrderTax'),\n                                  helperText: touched.OrderTax && errors.OrderTax,\n                                  error: Boolean(errors.OrderTax && touched.OrderTax),\n                                }}\n                              />\n                            </Grid>\n                            <Grid item lg={6} md={6} sm={12} xs={12}>\n                              <SimpleFormNew\n                                props={{\n                                  type: 'text',\n                                  name: 'Payment',\n                                  label: 'Payment',\n                                  onBlur: handleBlur,\n                                  value: values.Payment,\n                                  onChange: handleChange,\n                                  helperText: touched.Payment && errors.Payment,\n                                  error: Boolean(errors.Payment && touched.Payment),\n                                }}\n                              />\n                            </Grid>\n                            <Grid item lg={6} md={6} sm={12} xs={12}>\n                              <SimpleFormNew\n                                props={{\n                                  type: 'text',\n                                  name: 'Shipping',\n                                  label: 'Shipping',\n                                  onBlur: handleBlur,\n                                  value: values.Shipping,\n                                  onChange: handleChange,\n                                  helperText: touched.Shipping && errors.Shipping,\n                                  error: Boolean(errors.Shipping && touched.Shipping),\n                                }}\n                              />\n                            </Grid>\n                            <Grid item lg={6} md={6} sm={12} xs={12}>\n                              <SimpleFormNew\n                                props={{\n                                  type: 'text',\n                                  name: 'Discount',\n                                  label: 'Discount',\n                                  onBlur: handleBlur,\n                                  value: values.Discount,\n                                  onChange: handleChange,\n                                  helperText: touched.Discount && errors.Discount,\n                                  error: Boolean(errors.Discount && touched.Discount),\n                                }}\n                              />\n                            </Grid>\n                          </Grid>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <Label>Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Add Purchase\n                  </LoadingButton>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPurchase;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddPurchaseCSV.jsx",["1658","1659","1660","1661"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport Paper from '@mui/material/Paper';\nimport { Checkbox } from '@mui/material';\nimport Pdfdownloadbutton from '../material-kit/buttons/Pdfdownloadbutton';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n// inital login credentials\nconst initialValues = {\n  Discount: '',\n  Shipping: '',\n  Payment: '',\n  Reference: '',\n  OrderTax: '',\n  Supplier: '',\n  Warehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Discount: Yup.string()\n    .min(6, 'Discount must be 6 character length')\n    .required('Discount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Payment: Yup.string()\n    .min(6, 'Payment must be 6 character length')\n    .required('Payment is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  OrderTax: Yup.string()\n    .min(6, 'OrderTax must be 6 character length')\n    .required('OrderTax is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst AddPurchaseCSV = (props) => {\n  const classes = useStyles();\n  const [show, toggleShow] = useState(true);\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Purchase CSV' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Supplier',\n                      label: 'Supplier',\n                      value: values.Supplier,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Supplier'),\n                      helperText: touched.Supplier && errors.Supplier,\n                      error: Boolean(errors.Supplier && touched.Supplier),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: ' Status ',\n                      label: 'Status ',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'CSV File',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Paper\n                style={{\n                  marginTop: '10px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '14px',\n                }}\n              >\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h6\" style={{ fontSize: '12px' }}>\n                      The first line in downloaded csv file should remain as it is. Please do not\n                      change the order of columns. The correct column order is (Name, Code, Barcode\n                      Symbology, Brand, Category Code, Unit Code, Sale Unit Code, Purchase Unit\n                      Code, Cost, Price, Alert Quantity, Tax, Tax Method, Image, Sub category Code,\n                      Product Variants separated by vertical bar | , Product Custom Field 1, Product\n                      Custom Field 2, Product Custom Field 3, Product Custom Field 4, Product Custom\n                      Field 5, Product Custom Field 6, HSN Code, Secondary Name, Supplier Name,\n                      Supplier Part No., Supplier Price ) & you must follow this. Please make sure\n                      the csv file is UTF-8 encoded and not saved with byte order mark (BOM). The\n                      images should be uploaded in assets/uploads/ folder and thumbnails with same\n                      name as csv to assets/uploads/thumbs/ System will check if the code belong to\n                      any product then will update that product otherwise will add new product.\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Pdfdownloadbutton />\n                  </Grid>\n                </Grid>\n              </Paper>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <div style={{ margin: '0px 0px 0px 0px' }}>\n                    <Checkbox onClick={() => toggleShow(!show)} value=\"checkedA\" defaultChecked />\n                    <Label>More Options</Label>\n                    <div>\n                      {show && (\n                        <div>\n                          <Grid container spacing={3}>\n                            <Grid item xs={12} md={4}>\n                              <AutocompleteComboNew\n                                props={{\n                                  names: [\n                                    'Oliver Hansen',\n                                    'Van Henry',\n                                    'April Tucker',\n                                    'Ralph Hubbard',\n                                    'Omar Alexander',\n                                    'Carlos Abbott',\n                                    'Miriam Wagner',\n                                    'Bradley Wilkerson',\n                                    'Virginia Andrews',\n                                    'Kelly Snyder',\n                                  ],\n                                  name: 'OrderTax',\n                                  label: 'OrderTax',\n                                  value: values.OrderTax,\n                                  onBlur: handleBlur,\n                                  onChange: handleChange('OrderTax'),\n                                  helperText: touched.OrderTax && errors.OrderTax,\n                                  error: Boolean(errors.OrderTax && touched.OrderTax),\n                                }}\n                              />\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                              <SimpleFormNew\n                                props={{\n                                  type: 'text',\n                                  name: 'Shipping',\n                                  label: 'Shipping',\n                                  onBlur: handleBlur,\n                                  value: values.Shipping,\n                                  onChange: handleChange,\n                                  helperText: touched.Shipping && errors.Shipping,\n                                  error: Boolean(errors.Shipping && touched.Shipping),\n                                }}\n                              />\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                              <SimpleFormNew\n                                props={{\n                                  type: 'text',\n                                  name: 'Discount',\n                                  label: 'Discount',\n                                  onBlur: handleBlur,\n                                  value: values.Discount,\n                                  onChange: handleChange,\n                                  helperText: touched.Discount && errors.Discount,\n                                  error: Boolean(errors.Discount && touched.Discount),\n                                }}\n                              />\n                            </Grid>\n                          </Grid>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <Label style={{ margin: '10px 0px' }}>Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                  {/* <Appeditor /> */}\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n                {/* <Sumitbtn /> */}\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPurchaseCSV;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddExpense.jsx",["1662","1663","1664","1665"],"import { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  Reference: '',\n  Category: '',\n  Amount: '',\n  Warehouse: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n  Category: Yup.string()\n    .min(6, 'Category must be 6 character length')\n    .required('Category is required!'),\n  Amount: Yup.string()\n    .min(6, 'Amount must be 6 character length')\n    .required('Amount is required!'),\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n});\n\nconst AddExpense = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    // setLoading(true);\n\n    // try {\n    //   register(values.email, values.username, values.password);\n    //   navigate('/');\n    //   setLoading(false);\n    // } catch (e) {\n    //   console.log(e);\n    //   setLoading(false);\n    // }\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Expense' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                {/* <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid> */}\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      id: 'Category',\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Category',\n                      label: 'Category',\n                      value: values.Category,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Category'),\n                      helperText: touched.Category && errors.Category,\n                      error: Boolean(errors.Category && touched.Category),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Amount',\n                      label: 'Amount',\n                      onBlur: handleBlur,\n                      value: values.Amount,\n                      onChange: handleChange,\n                      helperText: touched.Amount && errors.Amount,\n                      error: Boolean(errors.Amount && touched.Amount),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      id: 'Warehouse',\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label>Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Add Expense\n                  </LoadingButton>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddExpense;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleForm.jsx",["1666","1667"],"import { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, styled } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst SimpleForm = (props) => {\n  const classes = useStyles();\n  const [data1, setdata] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n  }, [props]);\n\n  return (\n    <>\n      <TextField\n        fullWidth\n        type={data1.type}\n        name={data1.name}\n        label={data1.label}\n        onChange={data1.onChange}\n        className={classes.main2}\n      />\n    </>\n  );\n};\n\nexport default SimpleForm;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Multipleimage.jsx",["1668"],"import { FolderOpenOutlined } from '@ant-design/icons';\nimport { Button, Space, Upload } from 'antd';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  file: {\n    width: '100%',\n    padding: '14px',\n    border: '1px solid #ffffff',\n  },\n}));\n\nconst Multipleimage = () => {\n  const classes = useStyles();\n  return (\n    <>\n      {/* <Space\n    direction=\"vertical\"\n    style={{\n      width: '100%',\n    }}\n    size=\"large\"\n  > */}\n      <Upload action=\"\" listType=\"picture\" maxCount={3} multiple>\n        <Button icon={<FolderOpenOutlined />} className={classes.file}>\n          {' '}\n          Multiple image\n        </Button>\n      </Upload>\n      {/* </Space>\n       */}\n    </>\n  );\n};\n\nexport default Multipleimage;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/Addfeild.jsx",["1669","1670","1671"],"import React, { useMemo, useState } from 'react';\nimport Link from '@mui/material/Link';\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  ListSubheader,\n  InputAdornment,\n} from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/styles';\nimport AddIcon from '@mui/icons-material/Add';\n// import AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Grid } from '@mui/material';\nconst useStyles = makeStyles((theme) => ({\n  btn10: {\n    background: 'rgb(10 37 64)',\n    color: '#fff',\n    borderRadius: '3',\n    padding: '4px 10px',\n    textDecoration: 'none',\n    fontSize: '19px',\n  },\n  aditing: {\n    border: '1px solid #d7cdcd',\n    padding: '20px',\n  },\n}));\n\nconst displayedOptions = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nconst allOptions = [];\nconst containsText = (text, searchText) =>\n  text.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n\nconst Addfeild = () => {\n  // selectbox with searchbar\n  const [selectedOption, setSelectedOption] = useState(allOptions[0]);\n  const [searchText, setSearchText] = useState('');\n\n  const displayedOptions = useMemo(\n    () => allOptions.filter((option) => containsText(option, searchText)),\n    [searchText]\n  );\n\n  // end selectbox with searchbar\n  const classes = useStyles();\n\n  const [inputFields, setInputFields] = useState([{ firstName: '', lastName: '' }]);\n\n  const handleChangeInput = (index, event) => {\n    const values = [...inputFields];\n    values[index][event.target.name] = event.target.value;\n    setInputFields(values);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { firstName: '', lastName: '' }]);\n  };\n\n  return (\n    <>\n      <div className={classes.aditing}>\n        <Link href=\"#\" onClick={() => handleAddFields()} className={classes.btn10}>\n          +\n        </Link>\n        {inputFields.map((inputField, index) => (\n          <div key={index}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} lg={12} mt={2}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"search-select-label\">Options</InputLabel>\n                  <Select\n                    fullWidth\n                    defaultValue=\"new\"\n                    MenuProps={{ autoFocus: false }}\n                    labelId=\"search-select-label\"\n                    id=\"search-select\"\n                    value={selectedOption}\n                    label=\"Options\"\n                    onChange={(e) => setSelectedOption(e.target.value)}\n                    onClose={() => setSearchText('')}\n                    renderValue={() => selectedOption}\n                  >\n                    <ListSubheader>\n                      <TextField\n                        placeholder=\"Type to search...\"\n                        fullWidth\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <SearchIcon />\n                            </InputAdornment>\n                          ),\n                        }}\n                        onChange={(e) => setSearchText(e.target.value)}\n                        onKeyDown={(e) => {\n                          if (e.key !== 'Escape') {\n                            e.stopPropagation();\n                          }\n                        }}\n                      />\n                    </ListSubheader>\n                    {displayedOptions.map((option, i) => (\n                      <MenuItem key={i} value={option}>\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              <Grid item lg={6} mb={1}>\n                <TextField\n                  fullWidth\n                  name=\"Supplier Part No.\"\n                  label=\"Supplier Part No\"\n                  variant=\"outlined\"\n                  value={inputField.firstName}\n                  onChange={(event) => handleChangeInput(index, event)}\n                />\n              </Grid>\n              <Grid item lg={6}>\n                <TextField\n                  fullWidth\n                  name=\"Supplier Price\"\n                  label=\"Supplier Price\"\n                  variant=\"outlined\"\n                  value={inputField.lastName}\n                  onChange={(event) => handleChangeInput(index, event)}\n                />\n              </Grid>\n            </Grid>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Addfeild;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/Date.jsx",["1672","1673","1674","1675","1676","1677","1678","1679"],"import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Icon,\n  Radio,\n  RadioGroup,\n  styled,\n} from \"@mui/material\";\n\n\n\nconst Date = () => {\n\n  return (\n    <>\n     \n     <TextField\n        id=\"date\"\n        label=\"Date\"\n        type=\"date\"\n        defaultValue=\"2017-05-24\"\n       fullWidth\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n        \n    </>\n  );\n};\n\nexport default Date;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/UpgradeCard.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/TopSellingTable.jsx",["1680","1681","1682","1683","1684","1685"],"import {\n  Avatar,\n  Box,\n  Card,\n  Icon,\n  IconButton,\n  MenuItem,\n  Select,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  useTheme,\n} from '@mui/material';\nimport { Grid } from '@mui/material';\nimport { Paragraph } from 'app/components/Typography';\n\nconst CardHeader = styled(Box)(() => ({\n  display: 'flex',\n  paddingLeft: '24px',\n  paddingRight: '24px',\n  marginBottom: '12px',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n}));\n\nconst Title = styled('span')(() => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  textTransform: 'capitalize',\n}));\n\nconst ProductTable = styled(Table)(() => ({\n  whiteSpace: 'pre',\n  '& small': {\n    width: '100%',\n    height: 15,\n    borderRadius: 500,\n    boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\n  },\n  '& td': { borderBottom: 'none' },\n  '& td:first-of-type': { paddingLeft: '5px !important' },\n}));\n\nconst Small = styled('small')(({ bgcolor }) => ({\n  width: '100%',\n  color: '#fff',\n  padding: '2px 8px',\n  borderRadius: '4px',\n  overflow: 'hidden',\n  background: bgcolor,\n  boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\n}));\n\nconst TopSellingTable = () => {\n  const { palette } = useTheme();\n  const bgError = palette.error.main;\n  const bgPrimary = palette.primary.main;\n  const bgSecondary = palette.secondary.main;\n\n  return (\n    <>\n      {/* <Card elevation={3} sx={{ pt: '20px', mb: 3 }}> */}\n      {/* <CardHeader>\n        <Title>top selling products</Title>\n        <Select size=\"small\" defaultValue=\"this_month\">\n          <MenuItem value=\"this_month\">This Month</MenuItem>\n          <MenuItem value=\"last_month\">Last Month</MenuItem>\n        </Select>\n      </CardHeader> */}\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Box overflow=\"auto\">\n            <ProductTable>\n              <TableHead>\n                <TableRow>\n                  <TableCell colSpan={2} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Date\n                  </TableCell>\n                  <TableCell colSpan={3} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Reference No\n                  </TableCell>\n                  <TableCell colSpan={3} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Customer\n                  </TableCell>\n                  <TableCell colSpan={2} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Total\n                  </TableCell>\n                  <TableCell colSpan={3} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Payment Status\n                  </TableCell>\n                  <TableCell colSpan={2} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    paid\n                  </TableCell>\n                  <TableCell colSpan={3} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Status\n                  </TableCell>\n                  <TableCell colSpan={2} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Action\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {productList.map((product, index) => (\n                  <TableRow key={index} hover>\n                    <TableCell colSpan={2}>\n                      <Paragraph>{product.date}</Paragraph>\n                    </TableCell>\n                    <TableCell colSpan={3}>\n                      <Paragraph>{product.referencenumber}</Paragraph>\n                    </TableCell>\n                    <TableCell colSpan={3}>\n                      <Paragraph>{product.customer}</Paragraph>\n                    </TableCell>\n                    <TableCell colSpan={2}>\n                      <Paragraph>{product.total}</Paragraph>\n                    </TableCell>\n                    <TableCell colSpan={3}>\n                      <Paragraph>{product.paymentstutas}</Paragraph>\n                    </TableCell>\n                    <TableCell align=\"left\" colSpan={2} sx={{ px: 0, textTransform: 'capitalize' }}>\n                      $\n                      {product.price > 999\n                        ? (product.price / 1000).toFixed(1) + 'k'\n                        : product.price}\n                    </TableCell>\n                    <TableCell colSpan={3}>\n                      {product.stutas ? (\n                        product.stutas < 20 ? (\n                          <Small bgcolor={bgSecondary}>{product.stutas} available</Small>\n                        ) : (\n                          <Small bgcolor={bgPrimary}>in stock</Small>\n                        )\n                      ) : (\n                        <Small bgcolor={bgError}>out of stock</Small>\n                      )}\n                    </TableCell>\n\n                    {/* <TableCell colSpan={2}>\n                  <Paragraph>{product.referencenumber}</Paragraph>\n                </TableCell> */}\n                    <TableCell colSpan={2}>\n                      <IconButton>\n                        <Icon color=\"primary\">edit</Icon>\n                      </IconButton>\n                    </TableCell>\n\n                    {/**/}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </ProductTable>\n          </Box>\n        </Grid>\n      </Grid>\n      {/* </Card> */}\n    </>\n  );\n};\n\nconst productList = [\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n];\n\nexport default TopSellingTable;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Fileattachment.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/SimpleRadioNew.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleForms.jsx",["1686","1687"],"import { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, styled } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  main2: {\n    marginBottom: '0px',\n  },\n}));\n\nconst SimpleForms = (props) => {\n  const classes = useStyles();\n  const [data3, setdata] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n  }, [props]);\n\n  return (\n    <>\n      <TextField\n        fullWidth\n        type={data3.type}\n        name={data3.name}\n        label={data3.label}\n        className={classes.main2}\n        onChange={data3.onChange}\n        defaultValue={data3.defaultValue}\n        variant={data3.outlined}\n        value={data3.value}\n      />\n      {/* <TextField\n    fullWidth\n      type={data1.type}\n      name={data1.name}\n      label={data1.label}\n      onChange={data1.onChange}\n     className={classes.main2}\n    /> */}\n    </>\n  );\n};\n\nexport default SimpleForms;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/SimpleRadio.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/Pdfdownloadbutton.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/FormGroupCheckbox.jsx",["1688","1689","1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700","1701","1702"],"import React, { useState } from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Grid } from '@mui/material';\nimport SimpleFormNew from '../forms/SimpleFormNew';\n// import SimpleFormNewNew from '../material-kit/forms/SimpleFormNewNew';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { makeStyles } from '@material-ui/styles';\nimport { useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    // marginTop: '14px',\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: 'rgb(10 37 64)',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  Product1: '',\n  Product2: '',\n  Product3: '',\n  Product4: '',\n  Product5: '',\n  Product6: '',\n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Product1: Yup.string()\n    .min(6, 'Product1 must be 6 character length')\n    .required('required!'),\n\n  Product2: Yup.string()\n    .min(6, 'Product2 must be 6 character length')\n    .required('required!'),\n\n  Product3: Yup.string()\n    .min(6, 'Product3 must be 6 character length')\n    .required('required!'),\n\n  Product4: Yup.string()\n    .min(6, 'Product4 must be 6 character length')\n    .required('required!'),\n\n  Product5: Yup.string()\n    .min(6, 'Product5 must be 6 character length')\n    .required('required!'),\n\n  Product6: Yup.string()\n    .min(6, 'Product6 must be 6 character length')\n    .required('required!'),\n});\n\nfunction FormGroupCheckbox() {\n  const [checked, setChecked] = React.useState(true);\n  const [show, toggleShow] = useState(false);\n  const classes = useStyles();\n  const handleChange = (event) => {\n    console.log(event);\n  };\n  const handleChange1 = (event) => { };\n  const handleChange2 = (event) => { };\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <>\n      <FormGroup>\n        <FormControlLabel\n          control={<Checkbox defaultChecked />}\n          label=\"Featured (Shop homepage listing)\"\n        />\n        <FormControlLabel control={<Checkbox />} label=\"Hide in POS Module\" />\n        <FormControlLabel control={<Checkbox />} label=\"Hide in Shop Module\" />\n\n        <div style={{ margin: '0px 0px 0px 0px' }}>\n          <FormControlLabel\n            control={<Checkbox />}\n            onClick={() => toggleShow(!show)}\n            label=\"Custom Fields\"\n          />\n          {/* <FormControlLabel\n             \n              value=\"checkedA\"\n              control={<Radio />}\n              label=\"Custom Fields\"\n            /> */}\n\n          <div>\n            {show && (\n              <div>\n                <Formik\n                  onSubmit={handleFormSubmit}\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                >\n                  {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                    <form onSubmit={handleSubmit}>\n                      <Grid container spacing={3}>\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product1',\n                              label: 'Product Custom Field 1',\n                              onBlur: handleBlur,\n                              value: values.Product1,\n                              onChange: handleChange,\n                              helperText: touched.Product1 && errors.Product1,\n                              error: Boolean(errors.Product1 && touched.Product1),\n                            }}\n                          />\n                        </Grid>\n\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product2',\n                              label: 'Product Custom Field 2',\n                              onBlur: handleBlur,\n                              value: values.Product2,\n                              onChange: handleChange,\n                              helperText: touched.Product2 && errors.Product2,\n                              error: Boolean(errors.Product2 && touched.Product2),\n                            }}\n                          />\n                        </Grid>\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product3',\n                              label: 'Product Custom Field 3',\n                              onBlur: handleBlur,\n                              value: values.Product3,\n                              onChange: handleChange,\n                              helperText: touched.Product3 && errors.Product3,\n                              error: Boolean(errors.Product3 && touched.Product3),\n                            }}\n                          />\n                        </Grid>\n\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product4',\n                              label: 'Product Custom Field 4',\n                              onBlur: handleBlur,\n                              value: values.Product4,\n                              onChange: handleChange,\n                              helperText: touched.Product4 && errors.Product4,\n                              error: Boolean(errors.Product4 && touched.Product4),\n                            }}\n                          />\n                        </Grid>\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product5',\n                              label: 'Product Custom Field 5',\n                              onBlur: handleBlur,\n                              value: values.Product5,\n                              onChange: handleChange,\n                              helperText: touched.Product5 && errors.Product5,\n                              error: Boolean(errors.Product5 && touched.Product5),\n                            }}\n                          />\n                        </Grid>\n\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product6',\n                              label: 'Product Custom Field 6',\n                              onBlur: handleBlur,\n                              value: values.Product6,\n                              onChange: handleChange,\n                              helperText: touched.Product6 && errors.Product6,\n                              error: Boolean(errors.Product6 && touched.Product6),\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </form>\n                  )}\n                </Formik>\n              </div>\n            )}\n          </div>\n        </div>\n      </FormGroup>\n    </>\n  );\n}\nexport default FormGroupCheckbox;\n\n\n\n\n\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SimpleCheckbox.jsx",["1703","1704"],"import React from 'react';\nimport { Box, Checkbox } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@mui/material/Grid';\nfunction SimpleCheckbox() {\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <InputAdornment>\n                  <Checkbox\n                    style={{\n                      borderRadius: '0px',\n                      borderLeft: '1px solid #ddc5c5',\n                      padding: '14px',\n                      marginRight: '-13px',\n                    }}\n                  />\n                </InputAdornment>\n              ),\n            }}\n            label=\"Alert Quantity\"\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nexport default SimpleCheckbox;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/LineChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/Doughnut.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/components.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/DDbutton.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/ComparisonChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/Searchtable.jsx",["1705","1706","1707","1708","1709"],"import React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { makeStyles } from '@material-ui/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport { Grid } from '@mui/material';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    // background: \"linear-gradient(130deg,#152dc7,#820eb3)\",\n    background: '#092a4a',\n    border: '1px solid #978f8f',\n    // justifyContent: \"left\",\n    padding: '10px 5px',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  main: {\n    padding: '7px 0px',\n    textAlign: 'center',\n    borderLeft: '1px solid #e1d6d6',\n    borderTop: '1px solid #000',\n  },\n}));\n\nconst options = [\n  {\n    name: '46771898 - Metal Rings',\n    Variant: '1',\n    Type: '',\n    Quantity: '1',\n    SerialNumber: '',\n    value: 1,\n  },\n  { name: 'two', Variant: '2', Type: '', Quantity: '1', SerialNumber: '', value: 2 },\n  { name: 'three', Variant: '3', Type: '', Quantity: '1', SerialNumber: '', value: 3 },\n  { name: 'four', Variant: '4', Type: '', Quantity: '1', SerialNumber: '', value: 4 },\n];\n\nfunction Searchtable() {\n  const classes = useStyles();\n  const [showtable, setshowtable] = useState(false);\n\n  const [values, setValues] = useState([]);\n  const [dynamictable, setdynamictable] = useState([]);\n\n  const onChange = (_, value) => {\n    console.log(value);\n    // setValues(value);\n\n    // console.log(values[index])\n    setdynamictable((previous) => [\n      ...previous,\n      {\n        name: value.name,\n        Variant: value.Variant,\n        Type: value.Type,\n        Quantity: value.Quantity,\n        SerialNumber: value.SerialNumber,\n        value: value.value,\n      },\n    ]);\n    if (dynamictable.length) {\n      setshowtable(true);\n    } else {\n      setshowtable(false);\n    }\n  };\n\n  const adddata = () => {\n    for (let index = 0; index < values.length; index++) {\n      // console.log(values[index])\n      setdynamictable((previous) => [\n        ...previous,\n        {\n          name: values[index].name,\n          warehouse: values[index].warehouse,\n          priceaddtion: values[index].priceaddtion,\n          value: values[index].value,\n        },\n      ]);\n    }\n    if (values.length) {\n      setshowtable(true);\n    } else {\n      setshowtable(false);\n    }\n  };\n  console.log(dynamictable);\n\n  const handleclick = (e) => {\n    console.log(e.target.value);\n    var index = dynamictable.findIndex((x) => (x.name = e.target.value));\n    if (index != -1) {\n      dynamictable.splice(index, 1);\n      setdynamictable([...dynamictable]);\n    } else {\n      console.log('Item not found ');\n    }\n    console.log(dynamictable);\n  };\n\n  const allhandleclick = () => {\n    setdynamictable([]);\n    setshowtable(true);\n  };\n  //  const handleChange = (event) => {\n  //   setAge(event.target.value );\n  // };\n  const [value, setValue] = React.useState('fruit');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  return (\n    <Box>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Autocomplete\n            single\n            freeSolo\n            options={options}\n            getOptionLabel={(option) => option.name}\n            onChange={onChange}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                // onClick={adddata}\n                variant=\"outlined\"\n                label=\"Please add products to order list\"\n                margin=\"normal\"\n                fullWidth\n              />\n            )}\n          />\n          <Paper style={{ marginTop: '10px', boxShadow: 'none' }}>\n            {/* <TableContainer> */}\n            <Table>\n              <TableHead className={classes.header}>\n                <TableRow>\n                  <TableCell style={{ color: '#fff' }}>Product Name (Product Code)</TableCell>\n                  <TableCell style={{ color: '#fff' }}>Variant</TableCell>\n                  <TableCell style={{ color: '#fff' }}>Type</TableCell>\n                  <TableCell style={{ color: '#fff' }}>Quantity</TableCell>\n                  <TableCell style={{ color: '#fff' }}>Serial Number</TableCell>\n                  <TableCell style={{ color: '#fff' }}>\n                    <button onClick={allhandleclick}>x</button>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody style={{ border: '1px solid #d3b5b5' }}>\n                {dynamictable.map((myList, index) => (\n                  <TableRow key={index}>\n                    <TableCell className={classes.main}>{myList.name}</TableCell>\n                    <TableCell className={classes.main}>{myList.Variant}</TableCell>\n                    <TableCell className={classes.main}>\n                      {myList.Type}\n                      <Select style={{ width: '150px' }} value={value} onChange={handleChange}>\n                        <MenuItem value={10}>Addition</MenuItem>\n                        <MenuItem value={20}>Subtraction</MenuItem>\n                      </Select>\n                    </TableCell>\n                    <TableCell className={classes.main}>{myList.Quantity}</TableCell>\n                    <TableCell className={classes.main}>\n                      {myList.SerialNumber}\n                      <TextField id=\"outlined-basic\" variant=\"outlined\" />\n                    </TableCell>\n                    <TableCell className={classes.main}>\n                      <button value={myList.name} onClick={handleclick}>\n                        x\n                      </button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n            {/* </TableContainer> */}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\nexport default Searchtable;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useBrand.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/AreaChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/Showhideformcheckbox.jsx",["1710"],"import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Checkbox, Grid } from '@mui/material';\nimport Label from '../tables/Label';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nfunction Showhideformcheckbox() {\n  const [show, toggleShow] = useState(false);\n  return (\n    <>\n      <div style={{ margin: '0px 0px 0px 0px' }}>\n        <FormControlLabel\n          control={<Checkbox />}\n          onClick={() => toggleShow(!show)}\n          label=\"Promotion\"\n        />\n\n\n        <div>\n          {show && (\n            <div>\n              <Grid container spacing={3}>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <TextField fullWidth type=\"text\" name=\"Promotion Price\" label=\"Promotion Price\" />\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <TextField\n                    id=\"date\"\n                    label=\"Start date\"\n                    type=\"date\"\n                    fullWidth\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"date\"\n                    label=\"End date\"\n                    type=\"date\"\n                    fullWidth\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Showhideformcheckbox;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SearchwithAadtable.jsx",["1711","1712"],"import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/styles';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { Checkbox, Grid } from '@mui/material';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Label from '../tables/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    border: '1px solid #978f8f',\n    backgroundColor: 'rgb(10 37 64)',\n    padding: '10px 5px',\n    fontWeight: 'bold',\n  },\n  main: {\n    borderTop: '1px solid #000',\n    textAlign: 'center',\n    borderLeft: '1px solid #d3b5b5',\n  },\n}));\nconst options = [\n  { name: 'one', warehouse: '1', priceaddtion: '1000', value: 1 },\n  { name: 'two', warehouse: '2', priceaddtion: '1000', value: 2 },\n  { name: 'three', warehouse: '3', priceaddtion: '1000', value: 3 },\n  { name: 'four', warehouse: '4', priceaddtion: '1000', value: 4 },\n];\n\nexport default function SearchwithAadtable() {\n  const classes = useStyles();\n  const [show, toggleShow] = useState(false);\n  const [showtable, setshowtable] = useState(false);\n\n  const [values, setValues] = useState([]);\n  const [dynamictable, setdynamictable] = useState([]);\n\n  const onChange = (_, value) => {\n    console.log(value);\n    setValues(value);\n  };\n\n  const adddata = () => {\n    for (let index = 0; index < values.length; index++) {\n      // console.log(values[index])\n      setdynamictable((previous) => [\n        ...previous,\n        {\n          name: values[index].name,\n          warehouse: values[index].warehouse,\n          priceaddtion: values[index].priceaddtion,\n          value: values[index].value,\n        },\n      ]);\n    }\n    if (values.length) {\n      setshowtable(true);\n    } else {\n      setshowtable(false);\n    }\n  };\n  console.log(dynamictable);\n\n  const handleclick = (e) => {\n    console.log(e.target.value);\n    var index = dynamictable.findIndex((x) => (x.name = e.target.value));\n    if (index != -1) {\n      dynamictable.splice(index, 1);\n      setdynamictable([...dynamictable]);\n    } else {\n      console.log('Item not found ');\n    }\n    console.log(dynamictable);\n  };\n  const allhandleclick = () => {\n    setdynamictable([]);\n    setshowtable(false);\n  };\n  return (\n    <>\n      <div className={classes.maincheck}>\n        <FormControlLabel\n          control={<Checkbox />}\n          onClick={() => toggleShow(!show)}\n          label=\"This product has multiple variants \"\n        />\n\n        <div>\n          {show && (\n            <div>\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <Autocomplete\n                    style={{ marginTop: '10px' }}\n                    multiple\n                    freeSolo\n                    disablePortal\n                    id=\"combo-box-demo\"\n                    options={options}\n                    getOptionLabel={(option) => option.name}\n                    onChange={onChange}\n                    renderInput={(params) => {\n                      return (\n                        <TextField\n                          {...params}\n                          InputProps={{\n                            ...params.InputProps,\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton onClick={adddata}>\n                                  <AddIcon />\n                                </IconButton>\n                              </InputAdornment>\n                            ),\n                          }}\n                          label=\"Enter variants\"\n                        />\n                      );\n                    }}\n                  />\n                  <Paper style={{ marginTop: '10px', boxShadow: 'none' }}>\n                    <TableContainer>\n                      <Table>\n                        <TableHead className={classes.header}>\n                          <TableRow\n                            style={\n                              showtable === true\n                                ? {\n                                  display: '',\n                                }\n                                : {\n                                  display: 'none',\n                                }\n                            }\n                          >\n                            <TableCell style={{ color: '#fff', textAlign: 'center' }}>\n                              Name\n                            </TableCell>\n                            <TableCell style={{ color: '#fff', textAlign: 'center' }}>\n                              Warehouse\n                            </TableCell>\n                            <TableCell style={{ color: '#fff', textAlign: 'center' }}>\n                              Price Addition\n                            </TableCell>\n                            <TableCell style={{ color: '#fff', textAlign: 'center' }}>\n                              <button onClick={allhandleclick}>x</button>\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody style={{ border: '1px solid #d3b5b5' }}>\n                          {dynamictable.map((myList, index) => (\n                            <TableRow key={index}>\n                              <TableCell className={classes.main}>{myList.name}</TableCell>\n                              <TableCell className={classes.main}>{myList.warehouse}</TableCell>\n                              <TableCell className={classes.main}>{myList.priceaddtion}</TableCell>\n                              <TableCell className={classes.main}>\n                                <button value={myList.name} onClick={handleclick}>\n                                  x\n                                </button>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteComboWithIdValue.jsx",["1713","1714","1715","1716","1717","1718","1719","1720"],"import React, { useState, useEffect } from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport { makeStyles } from '@material-ui/styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nconst useStyles = makeStyles((theme) => ({}));\n\n// function AutocompleteCombo(props)\n\nconst AutocompleteComboWithIdValue = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = useState([]);\n\n  const [data2, setdata] = useState([]);\n  const [keyvalue, setkeyvalue] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n    setkeyvalue(props.props.names);\n  }, [props]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value\n    );\n  };\n\n  return (\n    <>\n      <FormControl fullWidth className={classes.main3}>\n        {/* <InputLabel id=\"demo-simple-select-helper-label\">{data2.name}</InputLabel> */}\n        {/* <Select\n          //  name={data2.name}\n          label={data2.label}\n          value={data2.value}\n          onChange={handleChange}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select> */}\n        {/* <InputLabel id=\"demo-simple-select-helper-label\">{data2.label}</InputLabel> */}\n        <TextField\n          id={data2.id}\n          label={data2.label}\n          value={data2.value}\n          onBlur={data2.onBlur}\n          onChange={data2.onChange}\n          fullWidth\n          select\n          helperText={data2.helperText}\n          error={data2.error}\n        >\n          {keyvalue.map((name) => (\n            <MenuItem key={name.id} value={name.id}>\n              {name.value}\n            </MenuItem>\n          ))}\n        </TextField>\n      </FormControl>\n    </>\n  );\n};\nexport default AutocompleteComboWithIdValue;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/LabelledCheckbox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/Dbutton.jsx",["1721","1722","1723","1724","1725"],"import { Box, Button, Fab, Icon, IconButton, styled } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n    btn2: {\n      padding:\"8px 25px\",\n      border: \"none\",\n      fontSize: \"15px\",\n      color: \"#fff\",\n      background: \"#303f9f\",\n    },\n  }));\n\nexport default function Dbutton() {\n    const classes = useStyles();\n  return (\n    <>\n     <Grid container spacing={2}>\n        <Grid item xs={12} sx={{ mt:2}}>\n        <Button variant=\"contained\"color=\"inherit\"\n        className={classes.btn2}\n        >\n          Import\n        </Button>\n        </Grid>\n      </Grid>\n      \n    </>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/Countstack.jsx",["1726"],"import { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Radio from '@mui/material/Radio';\nimport { green } from '@mui/material/colors';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { Grid, styled } from '@mui/material';\n\nconst GreenRadio = styled(Radio)(() => ({\n  color: green[400],\n  '&$checked': { color: green[600] },\n}));\n\nconst options = [\n  { name: 'one', value: 1 },\n  { name: 'two', value: 2 },\n  { name: 'three', value: 3 },\n  { name: 'four', value: 4 },\n];\nconst Countstack = () => {\n  const [value2, setValue2] = useState('no');\n  return (\n    <>\n      <Paper variant=\"outlined\" style={{ padding: '10px 10px' }}>\n        <Radio\n          type=\"radio\"\n          name=\"radio1\"\n          value=\"no\"\n          checked={value2 === 'no'}\n          onChange={(e) => setValue2(e.currentTarget.value)}\n        />\n        <label className=\"form-check-label\">Full</label>\n        <Radio\n          type=\"radio\"\n          value=\"si\"\n          name=\"radio1\"\n          checked={value2 === 'si'}\n          onChange={(e) => setValue2(e.currentTarget.value)}\n        />\n        <label className=\"form-check-label\">Partial</label>\n      </Paper>\n      <div style={{ marginTop: '10px' }}>\n        {value2 === 'si' && (\n          <Paper variant=\"outlined\" style={{ padding: '10px 10px' }}>\n            <Grid container spacing={2}>\n              <Grid item sm={6} xs={12}>\n                <Autocomplete\n                  multiple\n                  freeSolo\n                  options={options}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" label=\"Brands\" fullWidth />\n                  )}\n                />\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <Autocomplete\n                  multiple\n                  freeSolo\n                  options={options}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" label=\"Categories\" fullWidth />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Countstack;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteCombo.jsx",["1727","1728","1729","1730"],"import React, { useState, useEffect } from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport { makeStyles } from '@material-ui/styles';\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nconst useStyles = makeStyles((theme) => ({}));\n\n// function AutocompleteCombo(props)\n\nconst AutocompleteCombo = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = useState([]);\n\n  const [data2, setdata] = useState([]);\n  const [names, setnames] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n    setnames(props.props.names);\n  }, [props]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value\n    );\n  };\n\n  return (\n    <>\n      <FormControl fullWidth className={classes.main3}>\n        <InputLabel id=\"demo-simple-select-helper-label\">{data2.name}</InputLabel>\n        <Select\n          //  name={data2.name}\n          label={data2.label}\n          value={data2.value}\n          onChange={handleChange}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n};\nexport default AutocompleteCombo;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/SimpleMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/SelectedMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/MaxHeightMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SearchtableNew.jsx",["1731","1732","1733","1734"],"import React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { makeStyles } from '@material-ui/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport { Grid } from '@mui/material';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    // background: \"linear-gradient(130deg,#152dc7,#820eb3)\",\n    background: '#092a4a',\n    border: '1px solid #978f8f',\n    // justifyContent: \"left\",\n    padding: '10px 5px',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  main: {\n    padding: '7px 0px',\n    textAlign: 'center',\n    borderLeft: '1px solid #e1d6d6',\n    borderTop: '1px solid #000',\n  },\n}));\n\nconst options = [\n  {\n    name: '46771898 - Metal Rings',\n    Variant: '1',\n    Type: '',\n    Quantity: '1',\n    SerialNumber: '',\n    value: 1,\n  },\n  { name: 'two', Variant: '2', Type: '', Quantity: '1', SerialNumber: '', value: 2 },\n  { name: 'three', Variant: '3', Type: '', Quantity: '1', SerialNumber: '', value: 3 },\n  { name: 'four', Variant: '4', Type: '', Quantity: '1', SerialNumber: '', value: 4 },\n];\n\nexport default function SearchtableNew() {\n  const classes = useStyles();\n  const [showtable, setshowtable] = useState(false);\n\n  const [values, setValues] = useState([]);\n  const [dynamictable, setdynamictable] = useState([]);\n\n  const onChange = (_, value) => {\n    console.log(value);\n    // setValues(value);\n\n    // console.log(values[index])\n    setdynamictable((previous) => [\n      ...previous,\n      {\n        name: value.name,\n        Variant: value.Variant,\n        Type: value.Type,\n        Quantity: value.Quantity,\n        SerialNumber: value.SerialNumber,\n        value: value.value,\n      },\n    ]);\n    if (dynamictable.length) {\n      setshowtable(true);\n    } else {\n      setshowtable(false);\n    }\n  };\n\n  const adddata = () => {\n    for (let index = 0; index < values.length; index++) {\n      // console.log(values[index])\n      setdynamictable((previous) => [\n        ...previous,\n        {\n          name: values[index].name,\n          warehouse: values[index].warehouse,\n          priceaddtion: values[index].priceaddtion,\n          value: values[index].value,\n        },\n      ]);\n    }\n    if (values.length) {\n      setshowtable(true);\n    } else {\n      setshowtable(false);\n    }\n  };\n  console.log(dynamictable);\n\n  const handleclick = (e) => {\n    console.log(e.target.value);\n    var index = dynamictable.findIndex((x) => (x.name = e.target.value));\n    if (index != -1) {\n      dynamictable.splice(index, 1);\n      setdynamictable([...dynamictable]);\n    } else {\n      console.log('Item not found ');\n    }\n    console.log(dynamictable);\n  };\n\n  const allhandleclick = () => {\n    setdynamictable([]);\n    setshowtable(true);\n  };\n  //  const handleChange = (event) => {\n  //   setAge(event.target.value );\n  // };\n  const [value, setValue] = React.useState('fruit');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  return (\n    <Box>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Autocomplete\n            single\n            freeSolo\n            options={options}\n            getOptionLabel={(option) => option.name}\n            onChange={onChange}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                // onClick={adddata}\n                variant=\"outlined\"\n                label=\"Please add products to order list\"\n                margin=\"normal\"\n                fullWidth\n              />\n            )}\n          />\n          <Paper style={{ marginTop: '10px', boxShadow: 'none' }}>\n            <TableContainer>\n              <Table>\n                <TableHead className={classes.header}>\n                  <TableRow>\n                    <TableCell style={{ color: '#fff' }}>Product Name (Product Code)</TableCell>\n                    <TableCell style={{ color: '#fff' }}>Variant</TableCell>\n                    <TableCell style={{ color: '#fff' }}>Type</TableCell>\n                    <TableCell style={{ color: '#fff' }}>Quantity</TableCell>\n                    <TableCell style={{ color: '#fff' }}>Serial Number</TableCell>\n                    <TableCell style={{ color: '#fff' }}>\n                      <button onClick={allhandleclick}>x</button>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody style={{ border: '1px solid #d3b5b5' }}>\n                  {dynamictable.map((myList, index) => (\n                    <TableRow key={index}>\n                      <TableCell className={classes.main}>{myList.name}</TableCell>\n                      <TableCell className={classes.main}>{myList.Variant}</TableCell>\n                      <TableCell className={classes.main}>\n                        {myList.Type}\n                        <Select style={{ width: '150px' }} value={value} onChange={handleChange}>\n                          <MenuItem value={10}>Addition</MenuItem>\n                          <MenuItem value={20}>Subtraction</MenuItem>\n                        </Select>\n                      </TableCell>\n                      <TableCell className={classes.main}>{myList.Quantity}</TableCell>\n                      <TableCell className={classes.main}>\n                        {myList.SerialNumber}\n                        <TextField id=\"outlined-basic\" variant=\"outlined\" />\n                      </TableCell>\n                      <TableCell className={classes.main}>\n                        <button value={myList.name} onClick={handleclick}>\n                          x\n                        </button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/StandaloneRadio.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/SijmpleSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/PlacingRadioLabel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/PlacingSwitchLabel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/LabelledSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/FormGroupSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/CustomizedSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/VerticalSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/CustomizedMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/InputSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/ContinuousSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/RangeSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/TransitionSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/DiscreteSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/SimpleSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/StackedSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/DirectionSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/PositionedSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/LongLengthSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/CustomizedSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/SimpleExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/DetailedExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/ControlledAccordion.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/RowCards.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/CustomizedExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/StatCards2.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/Doughnut.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/Campaigns.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/SimpleDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/SimpleAlerts.jsx",["1735","1736"],"import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState } from 'react';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Image View\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">View Image </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <img\n              src=\"https://i.pinimg.com/736x/8b/16/7a/8b167af653c2399dd93b952a48740620.jpg\"\n              style={{ width: '100%' }}\n            />\n          </DialogContentText>\n        </DialogContent>\n        {/* \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions> */}\n      </Dialog>\n    </Box>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/ResponsiveDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/OptimalSizeDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/FullScreenDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/FormDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/DialogTransition.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/ConfirmationDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/BadgeAutocomplete.jsx",["1737"],"import { Autocomplete, Chip, TextField } from '@mui/material';\nimport { Box, useTheme } from '@mui/system';\n\nconst BadgeAutocomplete = () => {\n  const theme = useTheme();\n\n  return (\n    <Box\n      sx={{\n        width: 500,\n        '& > * + *': {\n          marginTop: theme.spacing(3),\n        },\n      }}\n    >\n      <Autocomplete\n        multiple\n        id=\"tags-outlined\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        filterSelectedOptions\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            label=\"filterSelectedOptions\"\n            placeholder=\"Favorites\"\n            fullWidth\n          />\n        )}\n      />\n   \n    </Box>\n  );\n};\n\nexport default BadgeAutocomplete;\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'Léon: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL·E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Amélie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/AddTransferCSV.jsx",["1738","1739","1740","1741"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport Pdfdownloadbutton from '../material-kit/buttons/Pdfdownloadbutton';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  fromwarehouse: '',\n  Shipping: '',\n  Biller: '',\n  Reference: '',\n  Customer: '',\n  Supplier: '',\n  toWarehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  fromwarehouse: Yup.string()\n    .min(6, 'fromwarehouse must be 6 character length')\n    .required('fromwarehouse is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  toWarehouse: Yup.string()\n    .min(6, 'toWarehouse must be 6 character length')\n    .required('toWarehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst AddTransferCSV = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Transfer' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: ' toWarehouse',\n                      label: ' To warehouse',\n                      value: values.toWarehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('toWarehouse'),\n                      helperText: touched.toWarehouse && errors.toWarehouse,\n                      error: Boolean(errors.toWarehouse && touched.toWarehouse),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Status ',\n                      label: ' Status ',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'fromwarehouse',\n                      label: 'from warehouse',\n                      value: values.fromwarehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('fromwarehouse'),\n                      helperText: touched.fromwarehouse && errors.fromwarehouse,\n                      error: Boolean(errors.fromwarehouse && touched.fromwarehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Cvs file',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Paper\n                    style={{\n                      marginTop: '20px',\n                      boxShadow: 'none',\n                      border: '1px solid rgb(229 217 217)',\n                      padding: '14px',\n                    }}\n                  >\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" style={{ fontSize: '12px' }}>\n                          The first line in downloaded csv file should remain as it is. Please do\n                          not change the order of columns. The correct column order is (Name, Code,\n                          Barcode Symbology, Brand, Category Code, Unit Code, Sale Unit Code,\n                          Purchase Unit Code, Cost, Price, Alert Quantity, Tax, Tax Method, Image,\n                          Sub category Code, Product Variants separated by vertical bar | , Product\n                          Custom Field 1, Product Custom Field 2, Product Custom Field 3, Product\n                          Custom Field 4, Product Custom Field 5, Product Custom Field 6, HSN Code,\n                          Secondary Name, Supplier Name, Supplier Part No., Supplier Price ) & you\n                          must follow this. Please make sure the csv file is UTF-8 encoded and not\n                          saved with byte order mark (BOM). The images should be uploaded in\n                          assets/uploads/ folder and thumbnails with same name as csv to\n                          assets/uploads/thumbs/ System will check if the code belong to any product\n                          then will update that product otherwise will add new product.\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Pdfdownloadbutton />\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                  <Label> Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n\n                {/* <DDbutton /> */}\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddTransferCSV;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/AddTransfer.jsx",["1742","1743","1744","1745"],"import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  fromwarehouse: '',\n  Shipping: '',\n  Biller: '',\n  Reference: '',\n  Customer: '',\n  Supplier: '',\n  toWarehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  fromwarehouse: Yup.string()\n    .min(6, 'fromwarehouse must be 6 character length')\n    .required('fromwarehouse is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  toWarehouse: Yup.string()\n    .min(6, 'toWarehouse must be 6 character length')\n    .required('toWarehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst AddTransfer = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Transfer' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: ' toWarehouse',\n                      label: ' To warehouse',\n                      value: values.toWarehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('toWarehouse'),\n                      helperText: touched.toWarehouse && errors.toWarehouse,\n                      error: Boolean(errors.toWarehouse && touched.toWarehouse),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Status ',\n                      label: ' Status ',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'fromwarehouse',\n                      label: 'from warehouse',\n                      value: values.fromwarehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('fromwarehouse'),\n                      helperText: touched.fromwarehouse && errors.fromwarehouse,\n                      error: Boolean(errors.fromwarehouse && touched.fromwarehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label> Order Items *</Label>\n                  <Searchtable />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label> Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n                {/* <DDbutton /> */}\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddTransfer;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/ListTransfers.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListSuppliers.jsx",["1746"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst ListSuppliers = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"List Suppliers\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default ListSuppliers;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddSupplier.jsx",["1747","1748","1749","1750","1751","1752","1753","1754"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  Country: '',\n  PostalCode: '',\n  Company: '',\n  Email: '',\n  Phone: '',\n  Address: '',\n  City: '',\n  State: '',\n  GST: '',\n  VAT: '',\n  Supplier1: '',\n  Supplier2: '',\n  Supplier3: '',\n  Supplier4: '',\n  Supplier5: '',\n  Supplier6: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n  PostalCode: Yup.string()\n    .min(6, 'PostalCode must be 6 character length')\n    .required('PostalCode is required!'),\n\n  Address: Yup.string()\n    .min(6, 'Address must be 6 character length')\n    .required('Address is required!'),\n\n  GST: Yup.number()\n    .min(6, 'GST must be 6 character length')\n    .required('GST is required!'),\n\n  VAT: Yup.number()\n    .min(6, 'VAT must be 6 character length')\n    .required('VAT is required!'),\n\n  Email: Yup.string()\n    .email()\n    .required('Email is required!'),\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('Phone is required!'),\n  Company: Yup.string()\n    .min(6, 'Company must be 6 character length')\n    .required('Company is required!'),\n\n  Supplier1: Yup.string()\n    .min(6, 'Supplier1 must be 6 character length')\n    .required('Supplier1 is required!'),\n  Supplier2: Yup.string()\n    .min(6, 'Supplier2 must be 6 character length')\n    .required('Supplier2 is required!'),\n\n  Supplier3: Yup.string()\n    .min(6, 'Supplier3 must be 6 character length')\n    .required('Supplier3 is required!'),\n\n  Supplier4: Yup.string()\n    .min(6, 'Supplier4 must be 6 character length')\n    .required('Supplier4 is required!'),\n\n  Supplier5: Yup.string()\n    .min(6, 'Supplier5 must be 6 character length')\n    .required('Supplier5 is required!'),\n\n  Supplier6: Yup.string()\n    .min(6, 'Supplier6 must be 6 character length')\n    .required('Supplier6 is required!'),\n\n  State: Yup.string().required('State is required!'),\n\n  City: Yup.string().required('City is required!'),\n\n  Country: Yup.string().required('Country is required!'),\n});\n\nconst AddSupplier = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Biller' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Company',\n                      label: 'Company',\n                      onBlur: handleBlur,\n                      value: values.Company,\n                      onChange: handleChange,\n                      helperText: touched.Company && errors.Company,\n                      error: Boolean(errors.Company && touched.Company),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Email',\n                      label: 'Email Address ',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'VAT',\n                      label: 'VAT Number',\n                      onBlur: handleBlur,\n                      value: values.VAT,\n                      onChange: handleChange,\n                      helperText: touched.VAT && errors.VAT,\n                      error: Boolean(errors.VAT && touched.VAT),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Address',\n                      label: 'Address',\n                      onBlur: handleBlur,\n                      value: values.Address,\n                      onChange: handleChange,\n                      helperText: touched.Address && errors.Address,\n                      error: Boolean(errors.Address && touched.Address),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'PostalCode',\n                      label: 'Postal Code',\n                      onBlur: handleBlur,\n                      value: values.PostalCode,\n                      onChange: handleChange,\n                      helperText: touched.PostalCode && errors.PostalCode,\n                      error: Boolean(errors.PostalCode && touched.PostalCode),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'GST',\n                      label: 'GST Number',\n                      onBlur: handleBlur,\n                      value: values.GST,\n                      onChange: handleChange,\n                      helperText: touched.GST && errors.GST,\n                      error: Boolean(errors.GST && touched.GST),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'City',\n                      label: 'City',\n                      value: values.City,\n                      onBlur: handleBlur,\n                      onChange: handleChange('City'),\n                      helperText: touched.City && errors.City,\n                      error: Boolean(errors.City && touched.City),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Country',\n                      label: 'Country',\n                      onBlur: handleBlur,\n                      value: values.Country,\n                      onChange: handleChange,\n                      helperText: touched.Country && errors.Country,\n                      error: Boolean(errors.Country && touched.Country),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'State',\n                      label: 'State',\n                      value: values.State,\n                      onBlur: handleBlur,\n                      onChange: handleChange('State'),\n                      helperText: touched.State && errors.State,\n                      error: Boolean(errors.State && touched.State),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier1',\n                      label: 'Supplier Custom Field 1',\n                      onBlur: handleBlur,\n                      value: values.Supplier1,\n                      onChange: handleChange,\n                      helperText: touched.Supplier1 && errors.Supplier1,\n                      error: Boolean(errors.Supplier1 && touched.Supplier1),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier2',\n                      label: 'Supplier Custom Field 2',\n                      onBlur: handleBlur,\n                      value: values.Supplier2,\n                      onChange: handleChange,\n                      helperText: touched.Supplier2 && errors.Supplier2,\n                      error: Boolean(errors.Supplier2 && touched.Supplier2),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier3',\n                      label: 'Supplier Custom Field 3',\n                      onBlur: handleBlur,\n                      value: values.Supplier3,\n                      onChange: handleChange,\n                      helperText: touched.Supplier3 && errors.Supplier3,\n                      error: Boolean(errors.Supplier3 && touched.Supplier3),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier4',\n                      label: 'Supplier Custom Field 4',\n                      onBlur: handleBlur,\n                      value: values.Supplier4,\n                      onChange: handleChange,\n                      helperText: touched.Supplier4 && errors.Supplier4,\n                      error: Boolean(errors.Supplier4 && touched.Supplier4),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier5',\n                      label: 'Supplier Custom Field 5',\n                      onBlur: handleBlur,\n                      value: values.Supplier5,\n                      onChange: handleChange,\n                      helperText: touched.Supplier5 && errors.Supplier5,\n                      error: Boolean(errors.Supplier5 && touched.Supplier5),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier6',\n                      label: 'Supplier Custom Field 6',\n                      onBlur: handleBlur,\n                      value: values.Biller6,\n                      onChange: handleChange,\n                      helperText: touched.Supplier6 && errors.Supplier6,\n                      error: Boolean(errors.Supplier6 && touched.Supplier6),\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Biller\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddSupplier;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListCustomers.jsx",["1755"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst ListCustomers = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"List Customers\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default ListCustomers;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddBiller.jsx",["1756","1757","1758","1759","1760","1761","1762","1763"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  Country: '',\n  PostalCode: '',\n  Company: '',\n  Email: '',\n  Phone: '',\n  Address: '',\n  City: '',\n  State: '',\n  Invoice: '',\n  GST: '',\n  VAT: '',\n  Logo: '',\n  Biller1: '',\n  Biller2: '',\n  Biller3: '',\n  Biller4: '',\n  Biller5: '',\n  Biller6: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n  PostalCode: Yup.string()\n    .min(6, 'PostalCode must be 6 character length')\n    .required('PostalCode is required!'),\n\n  Logo: Yup.string()\n    .min(6, 'Logo must be 6 character length')\n    .required('Logo is required!'),\n\n  Invoice: Yup.string()\n    .min(6, 'Invoice must be 6 character length')\n    .required('Invoice is required!'),\n\n  Address: Yup.string()\n    .min(6, 'Address must be 6 character length')\n    .required('Address is required!'),\n\n  GST: Yup.number()\n    .min(6, 'GST must be 6 character length')\n    .required('GST is required!'),\n\n  VAT: Yup.number()\n    .min(6, 'VAT must be 6 character length')\n    .required('VAT is required!'),\n\n  Email: Yup.string()\n    .email()\n    .required('Email is required!'),\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('Phone is required!'),\n  Company: Yup.string()\n    .min(6, 'Company must be 6 character length')\n    .required('Company is required!'),\n\n  Biller1: Yup.string()\n    .min(6, 'Biller1 must be 6 character length')\n    .required('Biller1 is required!'),\n  Biller2: Yup.string()\n    .min(6, 'Biller2 must be 6 character length')\n    .required('Biller2 is required!'),\n\n  Biller3: Yup.string()\n    .min(6, 'Biller3 must be 6 character length')\n    .required('Biller3 is required!'),\n\n  Biller4: Yup.string()\n    .min(6, 'Biller4 must be 6 character length')\n    .required('Biller4 is required!'),\n\n  Biller5: Yup.string()\n    .min(6, 'Biller5 must be 6 character length')\n    .required('Biller5 is required!'),\n\n  Biller6: Yup.string()\n    .min(6, 'Biller6 must be 6 character length')\n    .required('Biller6 is required!'),\n\n  State: Yup.string().required('State is required!'),\n\n  City: Yup.string().required('City is required!'),\n\n  Country: Yup.string().required('Country is required!'),\n});\n\nconst AddBiller = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Biller' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Email',\n                      label: 'Email Address ',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Company',\n                      label: 'Company',\n                      onBlur: handleBlur,\n                      value: values.Company,\n                      onChange: handleChange,\n                      helperText: touched.Company && errors.Company,\n                      error: Boolean(errors.Company && touched.Company),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'VAT',\n                      label: 'VAT Number',\n                      onBlur: handleBlur,\n                      value: values.VAT,\n                      onChange: handleChange,\n                      helperText: touched.VAT && errors.VAT,\n                      error: Boolean(errors.VAT && touched.VAT),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'GST',\n                      label: 'GST Number',\n                      onBlur: handleBlur,\n                      value: values.GST,\n                      onChange: handleChange,\n                      helperText: touched.GST && errors.GST,\n                      error: Boolean(errors.GST && touched.GST),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Address',\n                      label: 'Address',\n                      onBlur: handleBlur,\n                      value: values.Address,\n                      onChange: handleChange,\n                      helperText: touched.Address && errors.Address,\n                      error: Boolean(errors.Address && touched.Address),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'PostalCode',\n                      label: 'Postal Code',\n                      onBlur: handleBlur,\n                      value: values.PostalCode,\n                      onChange: handleChange,\n                      helperText: touched.PostalCode && errors.PostalCode,\n                      error: Boolean(errors.PostalCode && touched.PostalCode),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'City',\n                      label: 'City',\n                      value: values.City,\n                      onBlur: handleBlur,\n                      onChange: handleChange('City'),\n                      helperText: touched.City && errors.City,\n                      error: Boolean(errors.City && touched.City),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Country',\n                      label: 'Country',\n                      onBlur: handleBlur,\n                      value: values.Country,\n                      onChange: handleChange,\n                      helperText: touched.Country && errors.Country,\n                      error: Boolean(errors.Country && touched.Country),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'State',\n                      label: 'State',\n                      value: values.State,\n                      onBlur: handleBlur,\n                      onChange: handleChange('State'),\n                      helperText: touched.State && errors.State,\n                      error: Boolean(errors.State && touched.State),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller1',\n                      label: 'Biller Custom Field 1',\n                      onBlur: handleBlur,\n                      value: values.Biller1,\n                      onChange: handleChange,\n                      helperText: touched.Biller1 && errors.Biller1,\n                      error: Boolean(errors.Biller1 && touched.Biller1),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller2',\n                      label: 'Biller Custom Field 2',\n                      onBlur: handleBlur,\n                      value: values.Biller2,\n                      onChange: handleChange,\n                      helperText: touched.Biller2 && errors.Biller2,\n                      error: Boolean(errors.Biller2 && touched.Biller2),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller3',\n                      label: 'Biller Custom Field 3',\n                      onBlur: handleBlur,\n                      value: values.Biller3,\n                      onChange: handleChange,\n                      helperText: touched.Biller3 && errors.Biller3,\n                      error: Boolean(errors.Biller3 && touched.Biller3),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller4',\n                      label: 'Biller Custom Field 4',\n                      onBlur: handleBlur,\n                      value: values.Biller4,\n                      onChange: handleChange,\n                      helperText: touched.Biller4 && errors.Biller4,\n                      error: Boolean(errors.Biller4 && touched.Biller4),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller5',\n                      label: 'Biller Custom Field 5',\n                      onBlur: handleBlur,\n                      value: values.Biller5,\n                      onChange: handleChange,\n                      helperText: touched.Biller5 && errors.Biller5,\n                      error: Boolean(errors.Biller5 && touched.Biller5),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller6',\n                      label: 'Biller Custom Field 6',\n                      onBlur: handleBlur,\n                      value: values.Biller6,\n                      onChange: handleChange,\n                      helperText: touched.Biller6 && errors.Biller6,\n                      error: Boolean(errors.Biller6 && touched.Biller6),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Logo',\n                      label: 'Logo',\n                      value: values.Logo,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Logo'),\n                      helperText: touched.Logo && errors.Logo,\n                      error: Boolean(errors.Logo && touched.Logo),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      rows: 4,\n                      multiline: true,\n                      name: 'Invoice',\n                      label: 'Invoice Footer',\n                      onBlur: handleBlur,\n                      value: values.Invoice,\n                      onChange: handleChange,\n                      helperText: touched.Invoice && errors.Invoice,\n                      error: Boolean(errors.Invoice && touched.Invoice),\n                    }}\n                  />\n\n                  {/* <TextField\n              fullWidth\n              id=\"outlined-multiline-flexible\"\n              label=\"Invoice Footer\"\n              multiline\n              rows={4}\n              onChange={handleChange}\n              \n            /> */}\n                </Grid>\n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Biller\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddBiller;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddCustomer.jsx",["1764","1765","1766","1767","1768","1769","1770","1771"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  Country: '',\n  PostalCode: '',\n  Company: '',\n  Email: '',\n  Phone: '',\n  Address: '',\n  City: '',\n  State: '',\n  CustomerGroup: '',\n  GST: '',\n  VAT: '',\n  PriceGroup: '',\n  Customer1: '',\n  Customer2: '',\n  Customer3: '',\n  Customer4: '',\n  Customer5: '',\n  Customer6: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n  PostalCode: Yup.string()\n    .min(6, 'PostalCode must be 6 character length')\n    .required('PostalCode is required!'),\n\n  PriceGroup: Yup.string()\n    .min(6, 'PriceGroup must be 6 character length')\n    .required('PriceGroup is required!'),\n\n  CustomerGroup: Yup.string()\n    .min(6, 'CustomerGroup must be 6 character length')\n    .required('Customer Group is required!'),\n\n  Address: Yup.string()\n    .min(6, 'Address must be 6 character length')\n    .required('Address is required!'),\n\n  GST: Yup.number()\n    .min(6, 'GST must be 6 character length')\n    .required('GST is required!'),\n\n  VAT: Yup.number()\n    .min(6, 'VAT must be 6 character length')\n    .required('VAT is required!'),\n\n  Email: Yup.string()\n    .email()\n    .required('Email is required!'),\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('Phone is required!'),\n  Company: Yup.string()\n    .min(6, 'Company must be 6 character length')\n    .required('Company is required!'),\n\n  Customer1: Yup.string()\n    .min(6, 'Customer1 must be 6 character length')\n    .required('Customer1 is required!'),\n  Customer2: Yup.string()\n    .min(6, 'Customer2 must be 6 character length')\n    .required('Customer2 is required!'),\n\n  Customer3: Yup.string()\n    .min(6, 'Customer3 must be 6 character length')\n    .required('Customer3 is required!'),\n\n  Customer4: Yup.string()\n    .min(6, 'Customer4 must be 6 character length')\n    .required('Customer4 is required!'),\n\n  Customer5: Yup.string()\n    .min(6, 'Customer5 must be 6 character length')\n    .required('Customer5 is required!'),\n\n  Customer6: Yup.string()\n    .min(6, 'Customer6 must be 6 character length')\n    .required('Customer6 is required!'),\n\n  State: Yup.string().required('State is required!'),\n\n  City: Yup.string().required('City is required!'),\n\n  Country: Yup.string().required('Country is required!'),\n});\n\nconst AddCustomer = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Biller' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Company',\n                      label: 'Company',\n                      onBlur: handleBlur,\n                      value: values.Company,\n                      onChange: handleChange,\n                      helperText: touched.Company && errors.Company,\n                      error: Boolean(errors.Company && touched.Company),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Email',\n                      label: 'Email Address ',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Address',\n                      label: 'Address',\n                      onBlur: handleBlur,\n                      value: values.Address,\n                      onChange: handleChange,\n                      helperText: touched.Address && errors.Address,\n                      error: Boolean(errors.Address && touched.Address),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'PostalCode',\n                      label: 'Postal Code',\n                      onBlur: handleBlur,\n                      value: values.PostalCode,\n                      onChange: handleChange,\n                      helperText: touched.PostalCode && errors.PostalCode,\n                      error: Boolean(errors.PostalCode && touched.PostalCode),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'VAT',\n                      label: 'VAT Number',\n                      onBlur: handleBlur,\n                      value: values.VAT,\n                      onChange: handleChange,\n                      helperText: touched.VAT && errors.VAT,\n                      error: Boolean(errors.VAT && touched.VAT),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'GST',\n                      label: 'GST Number',\n                      onBlur: handleBlur,\n                      value: values.GST,\n                      onChange: handleChange,\n                      helperText: touched.GST && errors.GST,\n                      error: Boolean(errors.GST && touched.GST),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'PriceGroup',\n                      label: 'Price Group',\n                      value: values.PriceGroup,\n                      onBlur: handleBlur,\n                      onChange: handleChange('PriceGroup'),\n                      helperText: touched.PriceGroup && errors.PriceGroup,\n                      error: Boolean(errors.PriceGroup && touched.PriceGroup),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'City',\n                      label: 'City',\n                      value: values.City,\n                      onBlur: handleBlur,\n                      onChange: handleChange('City'),\n                      helperText: touched.City && errors.City,\n                      error: Boolean(errors.City && touched.City),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Country',\n                      label: 'Country',\n                      onBlur: handleBlur,\n                      value: values.Country,\n                      onChange: handleChange,\n                      helperText: touched.Country && errors.Country,\n                      error: Boolean(errors.Country && touched.Country),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'State',\n                      label: 'State',\n                      value: values.State,\n                      onBlur: handleBlur,\n                      onChange: handleChange('State'),\n                      helperText: touched.State && errors.State,\n                      error: Boolean(errors.State && touched.State),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer1',\n                      label: 'Customer Custom Field 1',\n                      onBlur: handleBlur,\n                      value: values.Customer1,\n                      onChange: handleChange,\n                      helperText: touched.Customer1 && errors.Customer1,\n                      error: Boolean(errors.Customer1 && touched.Customer1),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer2',\n                      label: 'Customer Custom Field 2',\n                      onBlur: handleBlur,\n                      value: values.Customer2,\n                      onChange: handleChange,\n                      helperText: touched.Customer2 && errors.Customer2,\n                      error: Boolean(errors.Customer2 && touched.Customer2),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer3',\n                      label: 'Customer Custom Field 3',\n                      onBlur: handleBlur,\n                      value: values.Customer3,\n                      onChange: handleChange,\n                      helperText: touched.Customer3 && errors.Customer3,\n                      error: Boolean(errors.Customer3 && touched.Customer3),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer4',\n                      label: 'Customer Custom Field 4',\n                      onBlur: handleBlur,\n                      value: values.Customer4,\n                      onChange: handleChange,\n                      helperText: touched.Customer4 && errors.Customer4,\n                      error: Boolean(errors.Customer4 && touched.Customer4),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer5',\n                      label: 'Customer Custom Field 5',\n                      onBlur: handleBlur,\n                      value: values.Customer5,\n                      onChange: handleChange,\n                      helperText: touched.Customer5 && errors.Customer5,\n                      error: Boolean(errors.Customer5 && touched.Customer5),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer6',\n                      label: 'Customer Custom Field 6',\n                      onBlur: handleBlur,\n                      value: values.Biller6,\n                      onChange: handleChange,\n                      helperText: touched.Customer6 && errors.Customer6,\n                      error: Boolean(errors.Customer6 && touched.Customer6),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'CustomerGroup',\n                      label: 'Customer Group',\n                      value: values.CustomerGroup,\n                      onBlur: handleBlur,\n                      onChange: handleChange('CustomerGroup'),\n                      helperText: touched.CustomerGroup && errors.CustomerGroup,\n                      error: Boolean(errors.CustomerGroup && touched.CustomerGroup),\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Biller\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddCustomer;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListUsers.jsx",["1772"],"import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleTable from '../material-kit/tables/SimpleTable';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst ListUsers = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'List Users' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <SimpleTable />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default ListUsers;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddUser.jsx",["1773","1774","1775","1776","1777","1778"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Checkbox } from '@mui/material';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  FirstName: '',\n  Username: '',\n  LastName: '',\n  Company: '',\n  Status: '',\n  Group: '',\n  Gender: '',\n  Phone: '',\n  Email: '',\n  Password: '',\n  ConfirmPassword: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  FirstName: Yup.string()\n    .min(6, 'FirstName must be 6 character length')\n    .required('First Name is required!'),\n  Username: Yup.string()\n    .min(6, 'Username must be 6 character length')\n    .required('User name is required!'),\n  Email: Yup.string()\n    .email()\n    .required('Email is required!'),\n  LastName: Yup.string()\n    .min(6, 'LastName must be 6 character length')\n    .required('Last Name is required!'),\n  Company: Yup.string()\n    .min(6, 'Company must be 6 character length')\n    .required('Company is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n\n  Group: Yup.string()\n    .min(6, 'Group must be 6 character length')\n    .required('Group is required!'),\n\n  Gender: Yup.string()\n    .min(6, 'Gender must be 6 character length')\n    .required('Gender is required!'),\n\n  Password: Yup.string()\n    .required('No password provided.')\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(/(?=.*[0-9])/, 'Password must contain a number.'),\n\n  ConfirmPassword: Yup.string()\n    .required('Confirm Password not  provided.')\n    .oneOf([Yup.ref('Password')], 'Passwords must match'),\n\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('number is required!'),\n});\n\nconst AddUser = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add User' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'FirstName',\n                      label: 'First Name',\n                      onBlur: handleBlur,\n                      value: values.FirstName,\n                      onChange: handleChange,\n                      helperText: touched.FirstName && errors.FirstName,\n                      error: Boolean(errors.FirstName && touched.FirstName),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'LastName',\n                      label: 'Last Name',\n                      onBlur: handleBlur,\n                      value: values.LastName,\n                      onChange: handleChange,\n                      helperText: touched.LastName && errors.LastName,\n                      error: Boolean(errors.LastName && touched.LastName),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Username',\n                      label: 'Username',\n                      onBlur: handleBlur,\n                      value: values.Username,\n                      onChange: handleChange,\n                      helperText: touched.Username && errors.Username,\n                      error: Boolean(errors.Username && touched.Username),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Company',\n                      label: 'Company',\n                      onBlur: handleBlur,\n                      value: values.Company,\n                      onChange: handleChange,\n                      helperText: touched.Company && errors.Company,\n                      error: Boolean(errors.Company && touched.Company),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Email',\n                      label: 'Email',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Gender',\n                      label: 'Gender',\n                      value: values.Gender,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Gender'),\n                      helperText: touched.Gender && errors.Gender,\n                      error: Boolean(errors.Gender && touched.Gender),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Group',\n                      label: 'Group',\n                      value: values.Group,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Group'),\n                      helperText: touched.Group && errors.Group,\n                      error: Boolean(errors.Group && touched.Group),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'Password',\n                      name: 'Password',\n                      label: 'Password',\n                      onBlur: handleBlur,\n                      value: values.Password,\n                      onChange: handleChange,\n                      helperText: touched.Password && errors.Password,\n                      error: Boolean(errors.Password && touched.Password),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'Password',\n                      name: 'ConfirmPassword',\n                      label: 'Confirm Password',\n                      onBlur: handleBlur,\n                      value: values.ConfirmPassword,\n                      onChange: handleChange,\n                      helperText: touched.ConfirmPassword && errors.ConfirmPassword,\n                      error: Boolean(errors.ConfirmPassword && touched.ConfirmPassword),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Status',\n                      label: 'Status',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Checkbox value=\"checkedA\" defaultChecked />\n                  <Label> Notify User by Email</Label>\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Add user\n                </LoadingButton>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddUser;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListBillers.jsx",["1779"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst ListBillers = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"List Billers\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default ListBillers;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Notifications.jsx",["1780"],"import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleTable from '../material-kit/tables/SimpleTable';\nimport Typography from '@mui/material/Typography';\nimport { NavLink } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  boxt1: {\n    border: '1px solid #000',\n  },\n  text3: {\n    fontSize: '13px',\n    textAlign: 'center',\n  },\n}));\n\nconst Notifications = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Notifications' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Grid container spacing={3}>\n          <Grid item xs={10}>\n            <Typography className={classes.text3}>\n              Please use the table below to navigate or filter the results. You can download the\n              table as excel and pdf.\n            </Typography>\n          </Grid>\n          <Grid item xs={2}>\n            <NavLink to=\"/Notifications/Addnotification\">\n              <AddIcon />\n            </NavLink>\n          </Grid>\n        </Grid>\n        <SimpleTable />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Notifications;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Addnotification.jsx",["1781","1782","1783"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { Button } from '@material-ui/core';\nimport Typography from '@mui/material/Typography';\nimport Appeditor from '../material-kit/ck/Appeditor';\nimport SimpleForm from '../material-kit/forms/SimpleForm';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Label from '../material-kit/tables/Label';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormLabel from '@mui/material/FormLabel';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst RadioRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  '& .formControl': {\n    marginRight: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n  },\n  '& .group': { margin: theme.spacing(1, 0), flexDirection: 'row' },\n}));\nconst useStyles = makeStyles((theme) => ({\n  text3: {\n    fontSize: '13px',\n    textAlign: 'left',\n    paddingBottom: '10px',\n  },\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\nconst Addnotification = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState('ForBoth');\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  const handleChange1 = (event) => {};\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Notification' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Typography className={classes.text3}>\n              Please fill in the information below. The field labels marked with * are required\n              input fields.\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <SimpleForm\n              props={{\n                type: 'text',\n                name: 'From',\n                label: 'From',\n                onChange: { handleChange1 },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <SimpleForm\n              props={{\n                type: 'text',\n                name: 'till',\n                label: 'Till',\n                onChange: { handleChange1 },\n              }}\n            />\n          </Grid>\n          <Label sx={{ mt: 2 }}>comment</Label>\n          <Grid item xs={12}>\n            <Appeditor />\n          </Grid>\n          <Grid item xs={12}>\n            <RadioGroup\n              row\n              aria-labelledby=\"demo-row-radio-buttons-group-label\"\n              name=\"row-radio-buttons-group\"\n              value={value}\n              className=\"group\"\n              aria-label=\"Gender\"\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value=\"female\"\n                name=\"gender1\"\n                control={<Radio />}\n                label=\"For Customers only\"\n              />\n              <FormControlLabel\n                value=\"male\"\n                name=\"gender1\"\n                control={<Radio />}\n                label=\"For Staff only\"\n              />\n              <FormControlLabel\n                value=\"ForBoth\"\n                name=\"gender1\"\n                control={<Radio />}\n                label=\"For Both\"\n              />\n            </RadioGroup>\n          </Grid>\n          <Grid item xs={12}>\n            <Button type=\"submit\" className={classes.btn2}>\n              Add Notification\n            </Button>\n          </Grid>\n        </Grid>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Addnotification;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/GroupPermissions.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EmailTemplates.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Warehouses.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/TaxRates.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Brands.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Variants.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ExpenseCategories.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Units.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/PriceGroups.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Categories.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/CustomerGroups.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Currencies.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ChangeLogo.jsx",["1784"],"import { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport Label from '../material-kit/tables/Label';\nimport { Button } from '@mui/material';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from 'antd';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  textnew2: {\n    paddingTop: '10px',\n    paddingBottom: '10px',\n  },\n}));\nconst ChangeLogo = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Change Logo' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Typography className={classes.textnew2}>Site Logo</Typography>\n\n        <Singleimage />\n\n        <Typography className={classes.textnew2}>Login Logo</Typography>\n\n        <Singleimage />\n\n        <Typography className={classes.textnew2}>Login Logo</Typography>\n        <Singleimage />\n\n        <Button type=\"submit\" variant=\"contained\" className={classes.btn2}>\n          Update Setting\n        </Button>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default ChangeLogo;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPrinters.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Promos.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPrinter.jsx",["1785","1786","1787","1788","1789","1790","1791","1792"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Title: '',\n  Type: '',\n  port: '',\n  Charactersperline: '',\n  IPAddress: '',\n  Profile: '',\n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Title: Yup.string()\n    .min(6, 'Title must be 6 character length')\n    .required('Title is required!'),\n\n  Type: Yup.string()\n    .min(6, 'Type must be 6 character length')\n    .required('Type is required!'),\n\n  port: Yup.string()\n    .max(4, 'port must be 4 character length')\n    .required('port is required!')\n    .matches(/^[0-9]+$/, \"Must be only digits\"),\n\n  Charactersperline: Yup.string()\n    .min(6, 'Charactersperline must be 6 character length')\n    .required('Characters per line is required!'),\n\n  IPAddress: Yup.string()\n    .min(6, 'IPAddress must be 6 character length')\n    .matches(/(^(\\d{1,3}\\.){3}(\\d{1,3})$)/, {\n      message: 'Invalid IP address',\n      excludeEmptyString: true\n    })\n    .required('IPAddress per line is required!'),\n\n  Profile: Yup.string()\n    .min(6, 'Profile must be 6 character length')\n    .required('Profile per line is required!'),\n});\n\nconst AddPrinter = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Printer' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Title',\n                      label: 'Title',\n                      onBlur: handleBlur,\n                      value: values.Title,\n                      onChange: handleChange,\n                      helperText: touched.Title && errors.Title,\n                      error: Boolean(errors.Title && touched.Title),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Profile',\n                      label: 'Profile',\n                      value: values.Profile,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Profile'),\n                      helperText: touched.Profile && errors.Profile,\n                      error: Boolean(errors.Profile && touched.Profile),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Charactersperline',\n                      label: 'Characters per line',\n                      onBlur: handleBlur,\n                      value: values.Charactersperline,\n                      onChange: handleChange,\n                      helperText: touched.Charactersperline && errors.Charactersperline,\n                      error: Boolean(errors.Charactersperline && touched.Charactersperline),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'IPAddress',\n                      label: 'IP Address',\n                      onBlur: handleBlur,\n                      value: values.IPAddress,\n                      onChange: handleChange,\n                      helperText: touched.IPAddress && errors.IPAddress,\n                      error: Boolean(errors.IPAddress && touched.IPAddress),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'port',\n                      label: 'Port',\n                      onBlur: handleBlur,\n                      value: values.port,\n                      onChange: handleChange,\n                      helperText: touched.port && errors.port,\n                      error: Boolean(errors.port && touched.port),\n                    }}\n                  /> \n                        {/* <span>Most printers are open on port <b>9100</b></span> */}\n               \n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Printer\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPrinter;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/POSSettings.jsx",["1793","1794","1795","1796","1797","1798","1799","1800","1801"],"import React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\n// import AutocompleteComboNew from '../material-kit/forms/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  textnew1: {\n    fontSize: '15px',\n    fontWeight: '600',\n    paddingBottom: '20px',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  DisplayProducts: '',\n  DefaultBiller: '',\n  OnScreenKeyboard: '',\n  Rounding: '',\n  DisplayCustomer: '',\n  POSPinCode: '',\n  DefaultCustomer: '',\n  ProductButtonColor: '',\n  ItemOrder: '',\n  DefaultCategory: '',\n  DisplayTime: '',\n  Tooltips: '',\n  AfterSalePage: '',\n  Printing: '',\n  Custom1: 'GST Reg',\n  Custom2: 'VAT Reg',\n  CustomValue: '123456789',\n  CustomValue1: '987654321',\n  FocusAddItemInput: 'Ctrl+F3',\n  AddCustomer: 'Ctrl+Shift+A',\n  ToggleBrandsSlider: '',\n  Printitemslist: 'F9',\n  OpenSuspendedSales: 'Ctrl+F2',\n  AddManualItemtoSale: 'Ctrl+Shift+M',\n  ToggleCategoriesSlider: 'Ctrl+F11',\n  CancelSale: 'F4',\n  FinalizeSale: 'F8',\n  CloseRegister: 'Ctrl+F10',\n  CustomerInput: 'Ctrl+Shift+C',\n  ToggleSubcategoriesSlider: 'Ctrl+F12',\n  SuspendSale: 'F7',\n  TodaysSale: 'Ctrl+F1',\n  Authorizenet: '',\n  PaypalPro: '',\n  Stripe: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  DisplayProducts: Yup.string()\n    .min(6, 'DisplayProducts must be 6 character length')\n    .required('Display Products is required!'),\n  DefaultBiller: Yup.string()\n    .min(6, 'DefaultBiller must be 6 character length')\n    .required('Default Biller is required!'),\n  OnScreenKeyboard: Yup.string()\n    .min(6, 'OnScreenKeyboard must be 6 character length')\n    .required('On Screen Keyboard is required!'),\n\n  Rounding: Yup.string()\n    .min(6, 'Rounding must be 6 character length')\n    .required('Rounding is required!'),\n  DisplayCustomer: Yup.string()\n    .min(6, 'DisplayCustomer must be 6 character length')\n    .required('Display Customer is required!'),\n\n  POSPinCode: Yup.number()\n    .min(6, 'POSPinCode must be 6 character length')\n    .required('POS Pin Code is required!'),\n\n  DefaultCustomer: Yup.string()\n    .min(6, 'DefaultCustomer must be 6 character length')\n    .required('Default Customer is required!'),\n\n  ProductButtonColor: Yup.string()\n    .min(6, 'ProductButtonColor must be 6 character length')\n    .required('Product Button Color is required!'),\n\n  ItemOrder: Yup.string()\n    .min(6, 'ItemOrder must be 6 character length')\n    .required('Item Order is required!'),\n\n  DefaultCategory: Yup.string()\n    .min(6, 'DefaultCategory must be 6 character length')\n    .required('Default Category is required!'),\n\n  DisplayTime: Yup.string()\n    .min(6, 'DisplayTime must be 6 character length')\n    .required('Display Time is required!'),\n  Tooltips: Yup.string()\n    .min(6, 'Tooltips must be 6 character length')\n    .required('Tool tips is required!'),\n\n  AfterSalePage: Yup.string()\n    .min(6, 'AfterSalePage must be 6 character length')\n    .required('After SalePage is required!'),\n\n  Printing: Yup.string()\n    .min(6, 'Printing must be 6 character length')\n    .required('Printing is required!'),\n\n  Custom1: Yup.string()\n    .min(6, 'Custom1 must be 6 character length')\n    .required('Custom1 is required!'),\n\n  Custom2: Yup.string()\n    .min(6, 'Custom2 must be 6 character length')\n    .required('Custom2 is required!'),\n\n  CustomValue: Yup.string()\n    .min(6, 'CustomValue must be 6 character length')\n    .required('CustomValue is required!'),\n\n  CustomValue1: Yup.string()\n    .min(6, 'CustomValue1 must be 6 character length')\n    .required('CustomValue1 is required!'),\n\n  FocusAddItemInput: Yup.string()\n    .min(6, 'FocusAddItemInput must be 6 character length')\n    .required('FocusAddItemInput is required!'),\n  AddCustomer: Yup.string()\n    .min(6, 'AddCustomer must be 6 character length')\n    .required('AddCustomer is required!'),\n  ToggleBrandsSlider: Yup.string()\n    .min(6, 'ToggleBrandsSlider must be 6 character length')\n    .required('Toggle Brands Slider is required!'),\n\n  Printitemslist: Yup.string()\n    .min(6, 'Printitemslist must be 6 character length')\n    .required('Print items list is required!'),\n\n  OpenSuspendedSales: Yup.string()\n    .min(6, 'OpenSuspendedSales must be 6 character length')\n    .required('Open Suspended Sales is required!'),\n  AddManualItemtoSale: Yup.string()\n    .min(6, 'AddManualItemtoSale must be 6 character length')\n    .required('Add Manual Item to Sale is required!'),\n\n  ToggleCategoriesSlider: Yup.string()\n    .min(6, 'ToggleCategoriesSlider must be 6 character length')\n    .required('Toggle Categories Slider is required!'),\n\n  CancelSale: Yup.string()\n    .min(6, 'CancelSale must be 6 character length')\n    .required('Cancel Sale is required!'),\n  FinalizeSale: Yup.string()\n    .min(6, 'FinalizeSale must be 6 character length')\n    .required('FinalizeSale is required!'),\n  CloseRegister: Yup.string()\n    .min(6, 'CloseRegister must be 6 character length')\n    .required('Close Register is required!'),\n\n  CustomerInput: Yup.string()\n    .min(6, 'CustomerInput must be 6 character length')\n    .required('Customer Input is required!'),\n\n  ToggleSubcategoriesSlider: Yup.string()\n    .min(6, 'ToggleSubcategoriesSlider must be 6 character length')\n    .required('Toggle Subcategories Slider is required!'),\n\n  SuspendSale: Yup.string()\n    .min(6, 'SuspendSale must be 6 character length')\n    .required('SuspendSale is required!'),\n\n  TodaysSale: Yup.string()\n    .min(6, 'TodaysSale must be 6 character length')\n    .required('Todays Sale is required!'),\n\n  Authorizenet: Yup.string()\n    .min(6, 'Authorizenet must be 6 character length')\n    .required('Authorizenet is required!'),\n\n  PaypalPro: Yup.string()\n    .min(6, 'PaypalPro must be 6 character length')\n    .required('PaypalPro is required!'),\n\n  Stripe: Yup.string()\n    .min(6, 'Stripe must be 6 character length')\n    .required('Stripe is required!'),\n});\n\nconst POSSettings = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'POS Settings' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Paper\n                style={{\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  POS Configuration\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DisplayProducts',\n                        label: 'Display Products',\n                        value: values.DisplayProducts,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DisplayProducts'),\n                        helperText: touched.DisplayProducts && errors.DisplayProducts,\n                        error: Boolean(errors.DisplayProducts && touched.DisplayProducts),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultBiller',\n                        label: 'Default Biller',\n                        value: values.DefaultBiller,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultBiller'),\n                        helperText: touched.DefaultBiller && errors.DefaultBiller,\n                        error: Boolean(errors.DefaultBiller && touched.DefaultBiller),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'OnScreenKeyboard',\n                        label: 'On-Screen Keyboard',\n                        value: values.OnScreenKeyboard,\n                        onBlur: handleBlur,\n                        onChange: handleChange('OnScreenKeyboard'),\n                        helperText: touched.OnScreenKeyboard && errors.OnScreenKeyboard,\n                        error: Boolean(errors.OnScreenKeyboard && touched.OnScreenKeyboard),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Rounding',\n                        label: 'Rounding',\n                        value: values.Rounding,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Rounding'),\n                        helperText: touched.Rounding && errors.Rounding,\n                        error: Boolean(errors.Rounding && touched.Rounding),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DisplayCustomer',\n                        label: 'Display Customer Details ',\n                        value: values.DisplayCustomer,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DisplayCustomer'),\n                        helperText: touched.DisplayCustomer && errors.DisplayCustomer,\n                        error: Boolean(errors.DisplayCustomer && touched.DisplayCustomer),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'number',\n                        name: 'POSPinCode',\n                        label: 'POS Pin Code',\n                        value: values.POSPinCode,\n                        onBlur: handleBlur,\n                        onChange: handleChange('POSPinCode'),\n                        helperText: touched.POSPinCode && errors.POSPinCode,\n                        error: Boolean(errors.POSPinCode && touched.POSPinCode),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultCustomer',\n                        label: 'Default Customer',\n                        value: values.DefaultCustomer,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultCustomer'),\n                        helperText: touched.DefaultCustomer && errors.DefaultCustomer,\n                        error: Boolean(errors.DefaultCustomer && touched.DefaultCustomer),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductButtonColor ',\n                        label: 'Product Button Color',\n                        value: values.ProductButtonColor,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductButtonColor'),\n                        helperText: touched.ProductButtonColor && errors.ProductButtonColor,\n                        error: Boolean(errors.ProductButtonColor && touched.ProductButtonColor),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ItemOrder ',\n                        label: 'Item Order',\n                        value: values.ItemOrder,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ItemOrder'),\n                        helperText: touched.ItemOrder && errors.ItemOrder,\n                        error: Boolean(errors.ItemOrder && touched.ItemOrder),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultCategory',\n                        label: 'Default Category',\n                        value: values.DefaultCategory,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultCategory'),\n                        helperText: touched.DefaultCategory && errors.DefaultCategory,\n                        error: Boolean(errors.DefaultCategory && touched.DefaultCategory),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DisplayTime',\n                        label: 'Display Time',\n                        value: values.DisplayTime,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DisplayTime'),\n                        helperText: touched.DisplayTime && errors.DisplayTime,\n                        error: Boolean(errors.DisplayTime && touched.DisplayTime),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Tooltips',\n                        label: 'Tool tips',\n                        value: values.Tooltips,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Tooltips'),\n                        helperText: touched.Tooltips && errors.Tooltips,\n                        error: Boolean(errors.Tooltips && touched.Tooltips),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'AfterSalePage',\n                        label: 'After Sale Page',\n                        value: values.AfterSalePage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('AfterSalePage'),\n                        helperText: touched.AfterSalePage && errors.AfterSalePage,\n                        error: Boolean(errors.AfterSalePage && touched.AfterSalePage),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  POS Printing\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Printing',\n                        label: 'Printing',\n                        value: values.Printing,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Printing'),\n                        helperText: touched.Printing && errors.Printing,\n                        error: Boolean(errors.Printing && touched.Printing),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Custom fields for receipt\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: ' Custom1',\n                        label: 'Custom Field 1 Title',\n                        onBlur: handleBlur,\n                        value: values.Custom1,\n                        onChange: handleChange,\n                        helperText: touched.Custom1 && errors.Custom1,\n                        error: Boolean(errors.Custom1 && touched.Custom1),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Custom2',\n                        label: 'Custom Field 2 Title',\n                        onBlur: handleBlur,\n                        value: values.Custom2,\n                        onChange: handleChange,\n                        helperText: touched.Custom2 && errors.Custom2,\n                        error: Boolean(errors.Custom2 && touched.Custom2),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CustomValue',\n                        label: 'Custom Field 1 Value',\n                        onBlur: handleBlur,\n                        value: values.CustomValue,\n                        onChange: handleChange,\n                        helperText: touched.CustomValue && errors.CustomValue,\n                        error: Boolean(errors.CustomValue && touched.CustomValue),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CustomValue1',\n                        label: 'Custom Field 2 Value',\n                        onBlur: handleBlur,\n                        value: values.CustomValue1,\n                        onChange: handleChange,\n                        helperText: touched.CustomValue1 && errors.CustomValue1,\n                        error: Boolean(errors.CustomValue1 && touched.CustomValue1),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Shortcuts\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'FocusAddItemInput',\n                        label: 'Focus Add Item Input',\n                        onBlur: handleBlur,\n                        value: values.FocusAddItemInput,\n                        onChange: handleChange,\n                        helperText: touched.FocusAddItemInput && errors.FocusAddItemInput,\n                        error: Boolean(errors.FocusAddItemInput && touched.FocusAddItemInput),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'AddCustomer',\n                        label: 'Add Customer',\n                        onBlur: handleBlur,\n                        value: values.AddCustomer,\n                        onChange: handleChange,\n                        helperText: touched.AddCustomer && errors.AddCustomer,\n                        error: Boolean(errors.AddCustomer && touched.AddCustomer),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ToggleBrandsSlider',\n                        label: 'Toggle Brands Slider',\n                        onBlur: handleBlur,\n                        value: values.ToggleBrandsSlider,\n                        onChange: handleChange,\n                        helperText: touched.ToggleBrandsSlider && errors.ToggleBrandsSlider,\n                        error: Boolean(errors.ToggleBrandsSlider && touched.ToggleBrandsSlider),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Printitemslist',\n                        label: 'Print items list',\n                        onBlur: handleBlur,\n                        value: values.Printitemslist,\n                        onChange: handleChange,\n                        helperText: touched.Printitemslist && errors.Printitemslist,\n                        error: Boolean(errors.Printitemslist && touched.Printitemslist),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'OpenSuspendedSales',\n                        label: 'Open Suspended Sales',\n                        onBlur: handleBlur,\n                        value: values.OpenSuspendedSales,\n                        onChange: handleChange,\n                        helperText: touched.OpenSuspendedSales && errors.OpenSuspendedSales,\n                        error: Boolean(errors.OpenSuspendedSales && touched.OpenSuspendedSales),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'AddManualItemtoSale',\n                        label: 'Add Manual Item to Sale',\n                        onBlur: handleBlur,\n                        value: values.AddManualItemtoSale,\n                        onChange: handleChange,\n                        helperText: touched.AddManualItemtoSale && errors.AddManualItemtoSale,\n                        error: Boolean(errors.AddManualItemtoSale && touched.AddManualItemtoSale),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ToggleCategoriesSlider',\n                        label: 'Toggle Categories Slider',\n                        onBlur: handleBlur,\n                        value: values.ToggleCategoriesSlider,\n                        onChange: handleChange,\n                        helperText: touched.ToggleCategoriesSlider && errors.ToggleCategoriesSlider,\n                        error: Boolean(\n                          errors.ToggleCategoriesSlider && touched.ToggleCategoriesSlider\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CancelSale',\n                        label: 'Cancel Sale',\n                        onBlur: handleBlur,\n                        value: values.CancelSale,\n                        onChange: handleChange,\n                        helperText: touched.CancelSale && errors.CancelSale,\n                        error: Boolean(errors.CancelSale && touched.CancelSale),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'FinalizeSale',\n                        label: 'Finalize Sale',\n                        onBlur: handleBlur,\n                        value: values.FinalizeSale,\n                        onChange: handleChange,\n                        helperText: touched.FinalizeSale && errors.FinalizeSale,\n                        error: Boolean(errors.FinalizeSale && touched.FinalizeSale),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CloseRegister',\n                        label: 'Close Register',\n                        onBlur: handleBlur,\n                        value: values.CloseRegister,\n                        onChange: handleChange,\n                        helperText: touched.CloseRegister && errors.CloseRegister,\n                        error: Boolean(errors.CloseRegister && touched.CloseRegister),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CustomerInput',\n                        label: 'Customer Input',\n                        onBlur: handleBlur,\n                        value: values.CustomerInput,\n                        onChange: handleChange,\n                        helperText: touched.CustomerInput && errors.CustomerInput,\n                        error: Boolean(errors.CustomerInput && touched.CustomerInput),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ToggleSubcategoriesSlider',\n                        label: 'Toggle Subcategories Slider',\n                        onBlur: handleBlur,\n                        value: values.ToggleSubcategoriesSlider,\n                        onChange: handleChange,\n                        helperText:\n                          touched.ToggleSubcategoriesSlider && errors.ToggleSubcategoriesSlider,\n                        error: Boolean(\n                          errors.ToggleSubcategoriesSlider && touched.ToggleSubcategoriesSlider\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'SuspendSale',\n                        label: 'Suspend Sale',\n                        onBlur: handleBlur,\n                        value: values.SuspendSale,\n                        onChange: handleChange,\n                        helperText: touched.SuspendSale && errors.SuspendSale,\n                        error: Boolean(errors.SuspendSale && touched.SuspendSale),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'TodaysSale',\n                        label: \"Today's Sale\",\n                        onBlur: handleBlur,\n                        value: values.TodaysSale,\n                        onChange: handleChange,\n                        helperText: touched.TodaysSale && errors.TodaysSale,\n                        error: Boolean(errors.TodaysSale && touched.TodaysSale),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Payment Gateways\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Authorizenet ',\n                        label: 'Authorize.net ',\n                        value: values.Authorizenet,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Authorizenet'),\n                        helperText: touched.Authorizenet && errors.Authorizenet,\n                        error: Boolean(errors.Authorizenet && touched.Authorizenet),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'PaypalPro',\n                        label: 'Paypal Pro',\n                        value: values.PaypalPro,\n                        onBlur: handleBlur,\n                        onChange: handleChange('PaypalPro'),\n                        helperText: touched.PaypalPro && errors.PaypalPro,\n                        error: Boolean(errors.PaypalPro && touched.PaypalPro),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Stripe',\n                        label: 'Stripe',\n                        value: values.Stripe,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Stripe'),\n                        helperText: touched.Stripe && errors.Stripe,\n                        error: Boolean(errors.Stripe && touched.Stripe),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Update Setting\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default POSSettings;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/BrandContext.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/BrandReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/NotificationReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/NavigationReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/EcommerceReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/SystemSettings.jsx",["1802","1803","1804","1805","1806","1807","1808","1809"],"import React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  textnew1: {\n    fontSize: '15px',\n    fontWeight: '600',\n    paddingBottom: '20px',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  SiteName: 'Stock Manager Advance with All Modules',\n  Language: 'English',\n  AccountingMethod: '',\n  MaintenanceMode: '',\n  LoginCaptcha: '',\n  DateFormat: '',\n  DefaultWarehouse: '',\n  DefaultEmail: '',\n  DefaultCustomerGroup: '',\n  Default: '',\n  Rowsperpage: '',\n  Timezone: '',\n  DefaultBiller: '',\n  Numberofdays: 'Number of days to disable editing ',\n  DefaultCurrency: '',\n  DefaultPriceGroup: '',\n  RTLSupport: '',\n  Calender: '',\n  PDFLibrary: '',\n  APIsFeature: '',\n  ProductTax: '',\n  Barcodeseparator: '',\n  ProductExpiry: '',\n  Racks: '',\n  BarcodeRenderer: '',\n  Removeexpired: '',\n  ProductVariants: '',\n  Updatecost: '',\n  Displaywarehouse: '',\n  Watermark: '',\n  Thumbnail: '150',\n  Thumbnail1: '150',\n  Image: '180',\n  Image1: '180',\n  OverSelling: '',\n  ProductLevelDiscount: '',\n  Productscount: '',\n  InvoiceView: '',\n  ReferenceFormat: '',\n  ProductSerial: '',\n  CartItemAddition: '',\n  BusinessState: '',\n  OrderTax: '',\n  AutoDetectBarcode: '',\n  DefaultOrderPage: '',\n  SalesReferencePrefix: 'Sales',\n  PurchasePaymentPrefix: 'pop',\n  PurchaseReferencePrefix: '',\n  ExpensePrefix: '',\n  ReturnSalePrefix: 'SR',\n  DeliveryReferencePrefix: 'DO',\n  ReturnPurchasePrefix: 'PR',\n  QuantityAdjustmentPrefix: '',\n  PaymentReferencePrefix: 'IPAY',\n  QuotationReferencePrefix: 'QUOTE',\n  TransferReferencePrefix: 'TR',\n  Decimals: '',\n  DecimalsSeparator: '',\n  CurrencySymbol: 'admin@stock.com',\n  QuantityDecimals: '',\n  ThousandsSeparator: '',\n  SouthAsianCountries: '',\n  DisplayCurrencySymbol: '',\n  EmailProtocol: '',\n  CustomerAwardPoints: '',\n  StaffAwardPoints: '',\n  AwardPoints: '',\n  AwardPoints1: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  SiteName: Yup.string()\n    .min(6, 'SiteName must be 6 character length')\n    .required('Site Name is required!'),\n\n  Language: Yup.string()\n    .min(6, 'Language must be 6 character length')\n    .required('Language is required!'),\n\n  AccountingMethod: Yup.string()\n    .min(6, 'AccountingMethod must be 6 character length')\n    .required('Accounting Method is required!'),\n\n  MaintenanceMode: Yup.string()\n    .min(6, 'MaintenanceMode must be 6 character length')\n    .required('Maintenance Mode is required!'),\n  LoginCaptcha: Yup.string()\n    .min(6, 'LoginCaptcha must be 6 character length')\n    .required('Login Captcha is required!'),\n  DateFormat: Yup.string()\n    .min(6, 'DateFormat must be 6 character length')\n    .required('Date Format is required!'),\n\n  DefaultWarehouse: Yup.string()\n    .min(6, 'DefaultWarehouse must be 6 character length')\n    .required('Default Warehouse is required!'),\n\n  DefaultEmail: Yup.string()\n    .min(6, 'DefaultEmail must be 6 character length')\n    .required('Default Email is required!'),\n  DefaultCustomerGroup: Yup.string()\n    .min(6, 'DefaultCustomerGroup must be 6 character length')\n    .required('Default Customer Group is required!'),\n\n  Default: Yup.string()\n    .min(6, 'Default must be 6 character length')\n    .required('Default is required!'),\n\n  Rowsperpage: Yup.string()\n    .min(6, 'Rowsperpage must be 6 character length')\n    .required('Rows per page is required!'),\n  Timezone: Yup.string()\n    .min(6, 'Timezone must be 6 character length')\n    .required('Time zone is required!'),\n  DefaultBiller: Yup.string()\n    .min(6, 'DefaultBiller must be 6 character length')\n    .required('Default Biller is required!'),\n  Numberofdays: Yup.string()\n    .min(6, 'Numberofdays must be 6 character length')\n    .required('Number of days is required!'),\n  DefaultCurrency: Yup.string()\n    .min(6, 'DefaultCurrency must be 6 character length')\n    .required('Default Currency is required!'),\n  DefaultPriceGroup: Yup.string()\n    .min(6, 'DefaultPriceGroup must be 6 character length')\n    .required('Default Price Group is required!'),\n  RTLSupport: Yup.string()\n    .min(6, 'RTLSupport must be 6 character length')\n    .required('RTL Support is required!'),\n  Calender: Yup.string()\n    .min(6, 'Calender must be 6 character length')\n    .required('Calender is required!'),\n  PDFLibrary: Yup.string()\n    .min(6, 'PDFLibrary must be 6 character length')\n    .required('PDF Library is required!'),\n\n  APIsFeature: Yup.string()\n    .min(6, 'APIsFeature must be 6 character length')\n    .required('APIs Feature is required!'),\n\n  ProductTax: Yup.string()\n    .min(6, 'ProductTax must be 6 character length')\n    .required('Product Tax is required!'),\n  Barcodeseparator: Yup.string()\n    .min(6, 'Barcodeseparator must be 6 character length')\n    .required('Barcode separator is required!'),\n  ProductExpiry: Yup.string()\n    .min(6, 'ProductExpiry must be 6 character length')\n    .required('Product Expiry is required!'),\n\n  Racks: Yup.string()\n    .min(6, 'Racks must be 6 character length')\n    .required('Racks is required!'),\n  BarcodeRenderer: Yup.string()\n    .min(6, 'BarcodeRenderer must be 6 character length')\n    .required('Barcode Renderer is required!'),\n\n  Removeexpired: Yup.string()\n    .min(6, 'Removeexpired must be 6 character length')\n    .required('Remove expired is required!'),\n  ProductVariants: Yup.string()\n    .min(6, 'ProductVariants must be 6 character length')\n    .required('Product Variants is required!'),\n\n  Updatecost: Yup.string()\n    .min(6, 'Updatecost must be 6 character length')\n    .required('Update cost is required!'),\n  Displaywarehouse: Yup.string()\n    .min(6, 'Displaywarehouse must be 6 character length')\n    .required('Display warehouse is required!'),\n  Watermark: Yup.string()\n    .min(6, 'Watermark must be 6 character length')\n    .required('Watermark is required!'),\n\n  Thumbnail: Yup.string()\n    .min(6, 'Thumbnail must be 6 character length')\n    .required('Thumbnail is required!'),\n  Thumbnail1: Yup.string()\n    .min(6, 'Thumbnail1 must be 6 character length')\n    .required('Thumbnail1 is required!'),\n\n  Image: Yup.string()\n    .min(6, 'Image must be 6 character length')\n    .required('Image is required!'),\n\n  Image1: Yup.string()\n    .min(6, 'Image1 must be 6 character length')\n    .required('Image1 is required!'),\n\n  OverSelling: Yup.string()\n    .min(6, 'OverSelling must be 6 character length')\n    .required('Over Selling is required!'),\n\n  InvoiceView: Yup.string()\n    .min(6, 'InvoiceView must be 6 character length')\n    .required('Invoice View is required!'),\n  ReferenceFormat: Yup.string()\n    .min(6, 'ReferenceFormat must be 6 character length')\n    .required('Reference Format is required!'),\n  ProductSerial: Yup.string()\n    .min(6, 'ProductSerial must be 6 character length')\n    .required('Product Serial is required!'),\n  CartItemAddition: Yup.string()\n    .min(6, 'CartItemAddition must be 6 character length')\n    .required('CartItem Addition is required!'),\n  BusinessState: Yup.string()\n    .min(6, 'BusinessState must be 6 character length')\n    .required('Business State is required!'),\n\n  ProductLevelDiscount: Yup.string()\n    .min(6, 'ProductLevelDiscount must be 6 character length')\n    .required('Product Level Discount is required!'),\n\n  OrderTax: Yup.string()\n    .min(6, 'OrderTax must be 6 character length')\n    .required('Order Tax is required!'),\n  AutoDetectBarcode: Yup.string()\n    .min(6, 'AutoDetectBarcode must be 6 character length')\n    .required('AutoDetect Barcode is required!'),\n  DefaultOrderPage: Yup.string()\n    .min(6, 'DefaultOrderPage must be 6 character length')\n    .required('Default Order Page is required!'),\n\n  SalesReferencePrefix: Yup.string()\n    .min(6, 'SalesReferencePrefix must be 6 character length')\n    .required('Sales Reference Prefix is required!'),\n\n  PurchasePaymentPrefix: Yup.string()\n    .min(6, 'PurchasePaymentPrefix must be 6 character length')\n    .required('Purchase Payment Prefix is required!'),\n  PurchaseReferencePrefix: Yup.string()\n    .min(6, 'PurchaseReferencePrefix must be 6 character length')\n    .required('Purchase Reference Prefix is required!'),\n\n  ExpensePrefix: Yup.string()\n    .min(6, 'ExpensePrefix must be 6 character length')\n    .required('Expense Prefix is required!'),\n  ReturnSalePrefix: Yup.string()\n    .min(6, 'ReturnSalePrefix must be 6 character length')\n    .required('Return Sale Prefix is required!'),\n  DeliveryReferencePrefix: Yup.string()\n    .min(6, 'DeliveryReferencePrefix must be 6 character length')\n    .required('Delivery Reference Prefix is required!'),\n  ReturnPurchasePrefix: Yup.string()\n    .min(6, 'ReturnPurchasePrefix must be 6 character length')\n    .required('Return Purchase Prefix is required!'),\n  QuantityAdjustmentPrefix: Yup.string()\n    .min(6, 'QuantityAdjustmentPrefix must be 6 character length')\n    .required('Quantity Adjustment Prefix is required!'),\n  PaymentReferencePrefix: Yup.string()\n    .min(6, 'PaymentReferencePrefix must be 6 character length')\n    .required('Payment Reference Prefix is required!'),\n  QuotationReferencePrefix: Yup.string()\n    .min(6, 'QuotationReferencePrefix must be 6 character length')\n    .required('Quotation Reference Prefix is required!'),\n  TransferReferencePrefix: Yup.string()\n    .min(6, 'TransferReferencePrefix must be 6 character length')\n    .required('Transfer Reference Prefix is required!'),\n  Decimals: Yup.string()\n    .min(6, 'Decimals must be 6 character length')\n    .required('Decimals is required!'),\n  DecimalsSeparator: Yup.string()\n    .min(6, 'DecimalsSeparator must be 6 character length')\n    .required('Decimals Separator is required!'),\n\n  CurrencySymbol: Yup.string()\n    .min(6, 'CurrencySymbol must be 6 character length')\n    .required('Currency Symbol is required!'),\n  QuantityDecimals: Yup.string()\n    .min(6, 'QuantityDecimals must be 6 character length')\n    .required('Quantity Decimals is required!'),\n  ThousandsSeparator: Yup.string()\n    .min(6, 'ThousandsSeparator must be 6 character length')\n    .required('Thousands Separator is required!'),\n  SouthAsianCountries: Yup.string()\n    .min(6, 'SouthAsianCountries must be 6 character length')\n    .required('South Asian Countries is required!'),\n  DisplayCurrencySymbol: Yup.string()\n    .min(6, 'DisplayCurrencySymbol must be 6 character length')\n    .required('Display Currency Symbol is required!'),\n  EmailProtocol: Yup.string()\n    .min(6, 'EmailProtocol must be 6 character length')\n    .required('Email Protocol is required!'),\n\n  CustomerAwardPoints: Yup.string()\n    .min(6, 'CustomerAwardPoints must be 6 character length')\n    .required('Customer Award Points is required!'),\n  StaffAwardPoints: Yup.string()\n    .min(6, 'StaffAwardPoints must be 6 character length')\n    .required('Staff Award Points is required!'),\n  AwardPoints: Yup.string()\n    .min(6, 'AwardPoints must be 6 character length')\n    .required('Award Points is required!'),\n  AwardPoints1: Yup.string()\n    .min(6, 'AwardPoints1 must be 6 character length')\n    .required('Award Points is required!'),\n\n  Productscount: Yup.string()\n    .min(6, 'Productscount must be 6 character length')\n    .required('Products count is required!'),\n});\n\nconst SystemSettings = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'System Settings' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Paper\n                style={{\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Site Configuration\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'SiteName',\n                        label: 'Site Name',\n                        onBlur: handleBlur,\n                        value: values.SiteName,\n                        onChange: handleChange,\n                        helperText: touched.SiteName && errors.SiteName,\n                        error: Boolean(errors.SiteName && touched.SiteName),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'AccountingMethod',\n                        label: 'Accounting Method',\n                        value: values.AccountingMethod,\n                        onBlur: handleBlur,\n                        onChange: handleChange('AccountingMethod'),\n                        helperText: touched.AccountingMethod && errors.AccountingMethod,\n                        error: Boolean(errors.AccountingMethod && touched.AccountingMethod),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'MaintenanceMode',\n                        label: 'Maintenance Mode',\n                        value: values.MaintenanceMode,\n                        onBlur: handleBlur,\n                        onChange: handleChange('MaintenanceMode'),\n                        helperText: touched.MaintenanceMode && errors.MaintenanceMode,\n                        error: Boolean(errors.MaintenanceMode && touched.MaintenanceMode),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'LoginCaptcha',\n                        label: 'Login Captcha',\n                        value: values.LoginCaptcha,\n                        onBlur: handleBlur,\n                        onChange: handleChange('LoginCaptcha'),\n                        helperText: touched.LoginCaptcha && errors.LoginCaptcha,\n                        error: Boolean(errors.LoginCaptcha && touched.LoginCaptcha),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DateFormat ',\n                        label: 'Date Format',\n                        value: values.DateFormat,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DateFormat'),\n                        helperText: touched.DateFormat && errors.DateFormat,\n                        error: Boolean(errors.DateFormat && touched.DateFormat),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultWarehouse ',\n                        label: 'Default Warehouse ',\n                        value: values.DefaultWarehouse,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultWarehouse'),\n                        helperText: touched.DefaultWarehouse && errors.DefaultWarehouse,\n                        error: Boolean(errors.DefaultWarehouse && touched.DefaultWarehouse),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'DefaultEmail',\n                        label: 'Default Email',\n                        onBlur: handleBlur,\n                        value: values.DefaultEmail,\n                        onChange: handleChange,\n                        helperText: touched.DefaultEmail && errors.DefaultEmail,\n                        error: Boolean(errors.DefaultEmail && touched.DefaultEmail),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Language',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n\n                        name: 'Language',\n                        label: 'Language',\n                        defaultValue: 'English',\n                        value: values.Language,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Language'),\n                        helperText: touched.Language && errors.Language,\n                        error: Boolean(errors.Language && touched.Language),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultCustomerGroup ',\n                        label: 'Default Customer Group ',\n                        value: values.DefaultCustomerGroup,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultCustomerGroup'),\n                        helperText: touched.DefaultCustomerGroup && errors.DefaultCustomerGroup,\n                        error: Boolean(errors.DefaultCustomerGroup && touched.DefaultCustomerGroup),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Default',\n                        label: 'Default',\n                        value: values.Default,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Default'),\n                        helperText: touched.Default && errors.Default,\n                        error: Boolean(errors.Default && touched.Default),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Rowsperpage ',\n                        label: 'Rows per page ',\n                        value: values.Rowsperpage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Rowsperpage'),\n                        helperText: touched.Rowsperpage && errors.Rowsperpage,\n                        error: Boolean(errors.Rowsperpage && touched.Rowsperpage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Timezone',\n                        label: 'Time zone',\n                        value: values.Timezone,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Timezone'),\n                        helperText: touched.Timezone && errors.Timezone,\n                        error: Boolean(errors.Timezone && touched.Timezone),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultBiller',\n                        label: 'Default Biller',\n                        value: values.DefaultBiller,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultBiller'),\n                        helperText: touched.DefaultBiller && errors.DefaultBiller,\n                        error: Boolean(errors.DefaultBiller && touched.DefaultBiller),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Numberofdays',\n                        label: 'Number of days to disable editing ',\n                        onBlur: handleBlur,\n                        value: values.Numberofdays,\n                        onChange: handleChange,\n                        helperText: touched.Numberofdays && errors.Numberofdays,\n                        error: Boolean(errors.Numberofdays && touched.Numberofdays),\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultCurrency',\n                        label: 'Default Currency',\n                        value: values.DefaultCurrency,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultCurrency'),\n                        helperText: touched.DefaultCurrency && errors.DefaultCurrency,\n                        error: Boolean(errors.DefaultCurrency && touched.DefaultCurrency),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultPriceGroup',\n                        label: 'Default Price Group',\n                        value: values.DefaultPriceGroup,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultPriceGroup'),\n                        helperText: touched.DefaultPriceGroup && errors.DefaultPriceGroup,\n                        error: Boolean(errors.DefaultPriceGroup && touched.DefaultPriceGroup),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'RTLSupport ',\n                        label: 'RTL Support ',\n                        value: values.RTLSupport,\n                        onBlur: handleBlur,\n                        onChange: handleChange('RTLSupport'),\n                        helperText: touched.RTLSupport && errors.RTLSupport,\n                        error: Boolean(errors.RTLSupport && touched.RTLSupport),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Calender',\n                        label: 'Calender',\n                        value: values.Calender,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Calender'),\n                        helperText: touched.Calender && errors.Calender,\n                        error: Boolean(errors.Calender && touched.Calender),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'PDFLibrary',\n                        label: 'PDF Library',\n                        value: values.PDFLibrary,\n                        onBlur: handleBlur,\n                        onChange: handleChange('PDFLibrary'),\n                        helperText: touched.PDFLibrary && errors.PDFLibrary,\n                        error: Boolean(errors.PDFLibrary && touched.PDFLibrary),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'APIsFeature',\n                        label: 'APIs Feature',\n                        value: values.APIsFeature,\n                        onBlur: handleBlur,\n                        onChange: handleChange('APIsFeature'),\n                        helperText: touched.APIsFeature && errors.APIsFeature,\n                        error: Boolean(errors.APIsFeature && touched.APIsFeature),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Products\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductTax',\n                        label: 'Product Tax',\n                        value: values.ProductTax,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductTax'),\n                        helperText: touched.ProductTax && errors.ProductTax,\n                        error: Boolean(errors.ProductTax && touched.ProductTax),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Barcodeseparator ',\n                        label: 'Barcode separator',\n                        value: values.Barcodeseparator,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Barcodeseparator'),\n                        helperText: touched.Barcodeseparator && errors.Barcodeseparator,\n                        error: Boolean(errors.Barcodeseparator && touched.Barcodeseparator),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductExpiry',\n                        label: 'Product Expiry',\n                        value: values.ProductExpiry,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductExpiry'),\n                        helperText: touched.ProductExpiry && errors.ProductExpiry,\n                        error: Boolean(errors.ProductExpiry && touched.ProductExpiry),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Racks',\n                        label: 'Racks',\n                        value: values.Racks,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Racks'),\n                        helperText: touched.Racks && errors.Racks,\n                        error: Boolean(errors.Racks && touched.Racks),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'BarcodeRenderer ',\n                        label: 'Barcode Renderer ',\n                        value: values.Racks,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Racks'),\n                        helperText: touched.Racks && errors.Racks,\n                        error: Boolean(errors.Racks && touched.Racks),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Removeexpired',\n                        label: 'Remove expired products from stock',\n                        value: values.Removeexpired,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Removeexpired'),\n                        helperText: touched.Removeexpired && errors.Removeexpired,\n                        error: Boolean(errors.Removeexpired && touched.Removeexpired),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductVariants',\n                        label: 'Product Variants',\n                        value: values.ProductVariants,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductVariants'),\n                        helperText: touched.ProductVariants && errors.ProductVariants,\n                        error: Boolean(errors.ProductVariants && touched.ProductVariants),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Updatecost',\n                        label: 'Update cost with purchase',\n                        value: values.Updatecost,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Updatecost'),\n                        helperText: touched.Updatecost && errors.Updatecost,\n                        error: Boolean(errors.Updatecost && touched.Updatecost),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Displaywarehouse',\n                        label: 'Display warehouse products',\n                        value: values.Displaywarehouse,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Displaywarehouse'),\n                        helperText: touched.Displaywarehouse && errors.Displaywarehouse,\n                        error: Boolean(errors.Displaywarehouse && touched.Displaywarehouse),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Watermark',\n                        label: 'Watermark',\n                        value: values.Watermark,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Watermark'),\n                        helperText: touched.Watermark && errors.Watermark,\n                        error: Boolean(errors.Watermark && touched.Watermark),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Label style={{ margin: '10px 0px 0px' }}>Thumbnail Size (W:H)</Label>\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Thumbnail',\n                        label: 'Thumbnail',\n                        onBlur: handleBlur,\n                        value: values.Thumbnail,\n                        onChange: handleChange,\n                        helperText: touched.Thumbnail && errors.Thumbnail,\n                        error: Boolean(errors.Thumbnail && touched.Thumbnail),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Thumbnail1',\n                        label: 'Thumbnail1',\n                        onBlur: handleBlur,\n                        value: values.Thumbnail1,\n                        onChange: handleChange,\n                        helperText: touched.Thumbnail1 && errors.Thumbnail1,\n                        error: Boolean(errors.Thumbnail1 && touched.Thumbnail1),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                  <Label style={{ margin: '10px 0px' }}>Image Size (W:H)</Label>\n                </Grid>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Image',\n                        label: 'Image',\n                        onBlur: handleBlur,\n                        value: values.Image,\n                        onChange: handleChange,\n                        helperText: touched.Image && errors.Image,\n                        error: Boolean(errors.Image && touched.Image),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Image1',\n                        label: 'Image',\n                        onBlur: handleBlur,\n                        value: values.Image1,\n                        onChange: handleChange,\n                        helperText: touched.Image1 && errors.Image1,\n                        error: Boolean(errors.Image1 && touched.Image1),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Sales\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'OverSelling',\n                        label: 'Over Selling',\n                        value: values.OverSelling,\n                        onBlur: handleBlur,\n                        onChange: handleChange('OverSelling'),\n                        helperText: touched.OverSelling && errors.OverSelling,\n                        error: Boolean(errors.OverSelling && touched.OverSelling),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductLevelDiscount',\n                        label: 'Product Level Discount',\n                        value: values.ProductLevelDiscount,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductLevelDiscount'),\n                        helperText: touched.ProductLevelDiscount && errors.ProductLevelDiscount,\n                        error: Boolean(errors.ProductLevelDiscount && touched.ProductLevelDiscount),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Productscount',\n                        label: 'Products count ',\n                        value: values.Productscount,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Productscount'),\n                        helperText: touched.Productscount && errors.Productscount,\n                        error: Boolean(errors.Productscount && touched.Productscount),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'InvoiceView',\n                        label: 'Invoice View',\n                        value: values.InvoiceView,\n                        onBlur: handleBlur,\n                        onChange: handleChange('InvoiceView'),\n                        helperText: touched.InvoiceView && errors.InvoiceView,\n                        error: Boolean(errors.InvoiceView && touched.InvoiceView),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ReferenceFormat',\n                        label: 'Reference Format',\n                        value: values.ReferenceFormat,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ReferenceFormat'),\n                        helperText: touched.ReferenceFormat && errors.ReferenceFormat,\n                        error: Boolean(errors.ReferenceFormat && touched.ReferenceFormat),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductSerial',\n                        label: 'Product Serial',\n                        value: values.ProductSerial,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductSerial'),\n                        helperText: touched.ProductSerial && errors.ProductSerial,\n                        error: Boolean(errors.ProductSerial && touched.ProductSerial),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'CartItemAddition',\n                        label: 'Cart Item Addition Method',\n                        value: values.CartItemAddition,\n                        onBlur: handleBlur,\n                        onChange: handleChange('CartItemAddition'),\n                        helperText: touched.CartItemAddition && errors.CartItemAddition,\n                        error: Boolean(errors.CartItemAddition && touched.CartItemAddition),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'BusinessState',\n                        label: 'Business State',\n                        value: values.BusinessState,\n                        onBlur: handleBlur,\n                        onChange: handleChange('BusinessState'),\n                        helperText: touched.BusinessState && errors.BusinessState,\n                        error: Boolean(errors.BusinessState && touched.BusinessState),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'OrderTax',\n                        label: 'Order Tax',\n                        value: values.OrderTax,\n                        onBlur: handleBlur,\n                        onChange: handleChange('OrderTax'),\n                        helperText: touched.OrderTax && errors.OrderTax,\n                        error: Boolean(errors.OrderTax && touched.OrderTax),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'AutoDetectBarcode',\n                        label: 'Auto Detect Barcode',\n                        value: values.AutoDetectBarcode,\n                        onBlur: handleBlur,\n                        onChange: handleChange('AutoDetectBarcode'),\n                        helperText: touched.AutoDetectBarcode && errors.AutoDetectBarcode,\n                        error: Boolean(errors.AutoDetectBarcode && touched.AutoDetectBarcode),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultOrderPage',\n                        label: 'Default Order Page Focus',\n                        value: values.DefaultOrderPage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultOrderPage'),\n                        helperText: touched.DefaultOrderPage && errors.DefaultOrderPage,\n                        error: Boolean(errors.DefaultOrderPage && touched.DefaultOrderPage),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Prefix\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'SalesReferencePrefix',\n                        label: 'Sales Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.SalesReferencePrefix,\n                        onChange: handleChange,\n                        helperText: touched.SalesReferencePrefix && errors.SalesReferencePrefix,\n                        error: Boolean(errors.SalesReferencePrefix && touched.SalesReferencePrefix),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'PurchasePaymentPrefix',\n                        label: 'Purchase Payment Prefix',\n                        onBlur: handleBlur,\n                        value: values.PurchasePaymentPrefix,\n                        onChange: handleChange,\n                        helperText: touched.PurchasePaymentPrefix && errors.PurchasePaymentPrefix,\n                        error: Boolean(\n                          errors.PurchasePaymentPrefix && touched.PurchasePaymentPrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'PurchaseReferencePrefix',\n                        label: 'Purchase Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.PurchaseReferencePrefix,\n                        onChange: handleChange,\n                        helperText:\n                          touched.PurchaseReferencePrefix && errors.PurchaseReferencePrefix,\n                        error: Boolean(\n                          errors.PurchaseReferencePrefix && touched.PurchaseReferencePrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ExpensePrefix',\n                        label: 'Expense Prefix',\n                        onBlur: handleBlur,\n                        value: values.ExpensePrefix,\n                        onChange: handleChange,\n                        helperText: touched.ExpensePrefix && errors.ExpensePrefix,\n                        error: Boolean(errors.ExpensePrefix && touched.ExpensePrefix),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ReturnSalePrefix',\n                        label: 'Return Sale Prefix',\n                        onBlur: handleBlur,\n                        value: values.ReturnSalePrefix,\n                        onChange: handleChange,\n                        helperText: touched.ReturnSalePrefix && errors.ReturnSalePrefix,\n                        error: Boolean(errors.ReturnSalePrefix && touched.ReturnSalePrefix),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'DeliveryReferencePrefix',\n                        label: 'Delivery Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.DeliveryReferencePrefix,\n                        onChange: handleChange,\n                        helperText:\n                          touched.DeliveryReferencePrefix && errors.DeliveryReferencePrefix,\n                        error: Boolean(\n                          errors.DeliveryReferencePrefix && touched.DeliveryReferencePrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ReturnPurchasePrefix',\n                        label: 'Return Purchase Prefix',\n                        onBlur: handleBlur,\n                        value: values.ReturnPurchasePrefix,\n                        onChange: handleChange,\n                        helperText: touched.ReturnPurchasePrefix && errors.ReturnPurchasePrefix,\n                        error: Boolean(errors.ReturnPurchasePrefix && touched.ReturnPurchasePrefix),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'QuantityAdjustmentPrefix',\n                        label: 'Quantity Adjustment Prefix',\n                        onBlur: handleBlur,\n                        value: values.QuantityAdjustmentPrefix,\n                        onChange: handleChange,\n                        helperText:\n                          touched.QuantityAdjustmentPrefix && errors.QuantityAdjustmentPrefix,\n                        error: Boolean(\n                          errors.QuantityAdjustmentPrefix && touched.QuantityAdjustmentPrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'PaymentReferencePrefix',\n                        label: 'Payment Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.PaymentReferencePrefix,\n                        onChange: handleChange,\n                        helperText: touched.PaymentReferencePrefix && errors.PaymentReferencePrefix,\n                        error: Boolean(\n                          errors.PaymentReferencePrefix && touched.PaymentReferencePrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'QuotationReferencePrefix',\n                        label: 'Quotation Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.QuotationReferencePrefix,\n                        onChange: handleChange,\n                        helperText:\n                          touched.QuotationReferencePrefix && errors.QuotationReferencePrefix,\n                        error: Boolean(\n                          errors.QuotationReferencePrefix && touched.QuotationReferencePrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'TransferReferencePrefix',\n                        label: 'Transfer Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.QuotationReferencePrefix,\n                        onChange: handleChange,\n                        helperText:\n                          touched.QuotationReferencePrefix && errors.QuotationReferencePrefix,\n                        error: Boolean(\n                          errors.QuotationReferencePrefix && touched.QuotationReferencePrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Money and Number Format\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Decimals',\n                        label: 'Decimals',\n                        value: values.Decimals,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Decimals'),\n                        helperText: touched.Decimals && errors.Decimals,\n                        error: Boolean(errors.Decimals && touched.Decimals),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DecimalsSeparator ',\n                        label: 'Decimals Separator ',\n                        value: values.DecimalsSeparator,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DecimalsSeparator'),\n                        helperText: touched.DecimalsSeparator && errors.DecimalsSeparator,\n                        error: Boolean(errors.DecimalsSeparator && touched.DecimalsSeparator),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CurrencySymbol',\n                        label: 'Currency Symbol',\n                        onBlur: handleBlur,\n                        value: values.CurrencySymbol,\n                        onChange: handleChange,\n                        helperText: touched.CurrencySymbol && errors.CurrencySymbol,\n                        error: Boolean(errors.CurrencySymbol && touched.CurrencySymbol),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'QuantityDecimals',\n                        label: 'Quantity Decimals',\n                        value: values.QuantityDecimals,\n                        onBlur: handleBlur,\n                        onChange: handleChange('QuantityDecimals'),\n                        helperText: touched.QuantityDecimals && errors.QuantityDecimals,\n                        error: Boolean(errors.QuantityDecimals && touched.QuantityDecimals),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ThousandsSeparator',\n                        label: 'Thousands Separator',\n                        value: values.ThousandsSeparator,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ThousandsSeparator'),\n                        helperText: touched.ThousandsSeparator && errors.ThousandsSeparator,\n                        error: Boolean(errors.ThousandsSeparator && touched.ThousandsSeparator),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'SouthAsianCountries',\n                        label: 'South Asian Countries Currency Format',\n                        value: values.SouthAsianCountries,\n                        onBlur: handleBlur,\n                        onChange: handleChange('SouthAsianCountries'),\n                        helperText: touched.SouthAsianCountries && errors.SouthAsianCountries,\n                        error: Boolean(errors.SouthAsianCountries && touched.SouthAsianCountries),\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DisplayCurrencySymbol',\n                        label: 'Display Currency Symbol',\n                        value: values.DisplayCurrencySymbol,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DisplayCurrencySymbol'),\n                        helperText: touched.DisplayCurrencySymbol && errors.DisplayCurrencySymbol,\n                        error: Boolean(\n                          errors.DisplayCurrencySymbol && touched.DisplayCurrencySymbol\n                        ),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              {/* //// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Email\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'EmailProtocol',\n                        label: 'Email Protocol',\n                        value: values.EmailProtocol,\n                        onBlur: handleBlur,\n                        onChange: handleChange('EmailProtocol'),\n                        helperText: touched.EmailProtocol && errors.EmailProtocol,\n                        error: Boolean(errors.EmailProtocol && touched.EmailProtocol),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* //// */}\n\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Award Points\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CustomerAwardPoints',\n                        label: 'Customer Award Points',\n                        onBlur: handleBlur,\n                        value: values.CustomerAwardPoints,\n                        onChange: handleChange,\n                        helperText: touched.CustomerAwardPoints && errors.CustomerAwardPoints,\n                        error: Boolean(errors.CustomerAwardPoints && touched.CustomerAwardPoints),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'StaffAwardPoints',\n                        label: 'Staff Award Points',\n                        onBlur: handleBlur,\n                        value: values.StaffAwardPoints,\n                        onChange: handleChange,\n                        helperText: touched.StaffAwardPoints && errors.StaffAwardPoints,\n                        error: Boolean(errors.StaffAwardPoints && touched.StaffAwardPoints),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'AwardPoints',\n                        label: 'Award Points',\n                        onBlur: handleBlur,\n                        value: values.AwardPoints,\n                        onChange: handleChange,\n                        helperText: touched.AwardPoints && errors.AwardPoints,\n                        error: Boolean(errors.AwardPoints && touched.AwardPoints),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'AwardPoints1',\n                        label: 'Award Points',\n                        onBlur: handleBlur,\n                        value: values.AwardPoints1,\n                        onChange: handleChange,\n                        helperText: touched.AwardPoints1 && errors.AwardPoints1,\n                        error: Boolean(errors.AwardPoints1 && touched.AwardPoints1),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Update Setting\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default SystemSettings;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/BrandActions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/NavigationAction.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/NotificationActions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCurrencies.js",["1810","1811","1812","1813","1814","1815","1816","1817","1818","1819","1820"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n  Currency_Name: '',\n  Symbol: '',\n  Exchange_Rate: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Currency_Code: Yup.string()\n    .min(3, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n        \n   Currency_Name: Yup.string()\n    .min(3, 'Currency Name must be 3 character length')\n    .required('Currency Name per line is required!'),\n\n    Symbol: Yup.string()\n  \n    .required('Symbol per line is required!'),\n\n    Exchange_Rate: Yup.string()\n    .required('Exchange Rate per line is required!'),\n\n\n});\n\n\n\n\n\n\n\nconst AddCurrencies = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Currencies' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Currency_Code',\n                      label: 'Currency Code',\n                      onBlur: handleBlur,\n                      value: values.Currency_Code,\n                      onChange: handleChange,\n                      helperText: touched.Currency_Code && errors.Currency_Code,\n                      error: Boolean(errors.Currency_Code && touched.Currency_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Currency_Name',\n                      label: 'Currency Name',\n                      onBlur: handleBlur,\n                      value: values.start_Date,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Currency_Name && errors.start_Date,\n                      error: Boolean(errors.Currency_Name && touched.start_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Symbol',\n                      label: 'Symbol',\n                      value: values.Symbol,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Symbol && errors.Symbol,\n                      error: Boolean(errors.Symbol && touched.Symbol),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Exchange_Rate',\n                      label: 'Exchange Rate',\n                      onBlur: handleBlur,\n                      value: values.Exchange_Rate,\n                      onChange: handleChange,\n                      helperText: touched.Exchange_Rate && errors.Exchange_Rate,\n                      error: Boolean(errors.Exchange_Rate && touched.Exchange_Rate),\n                    }}\n                  />\n                </Grid>\n              \n           \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Curreancies\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddCurrencies;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCustomerGroups.js",["1821","1822","1823","1824","1825","1826","1827","1828","1829","1830","1831"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n  Currency_Name: '',\n  Symbol: '',\n  Exchange_Rate: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Currency_Code: Yup.string()\n    .min(3, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n        \n   Currency_Name: Yup.string()\n    .min(3, 'Currency Name must be 3 character length')\n    .required('Currency Name per line is required!'),\n\n\n\n});\n\n\n\n\n\n\n\nconst AddCustomerGroups = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Customer Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Group Name',\n                      label: 'Group_Name',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Group_Name && errors.Group_Name,\n                      error: Boolean(errors.Group_Name && touched.Group_Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Group_Percentage',\n                      label: 'Group Percentage (without % sign)',\n                      value: values.Group_Percentage,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Group_Percentage && errors.Group_Percentage,\n                      error: Boolean(errors.Group_Percentage && touched.Group_Percentage),\n                    }}\n                  />\n                </Grid>\n              \n              \n           \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Customer Group\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddCustomerGroups;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddExpenseCategories.jsx",["1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Category_Code: '',\n  Category_Name :'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n    Category_Code: Yup.string()\n    \n    .required('Category Code is required!'),\n    Category_Name: Yup.string()\n    // .min(6, 'Category Name must be 3 character length')\n    .required('Category Name is required!'),\n\n\n\n\n\n});\n\n\n\n\n\n\n\nconst AddExpenseCategories = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Customer Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_code',\n                      label: 'Category code',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Category_code && errors.Category_code,\n                      error: Boolean(errors.Category_code && touched.Category_code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Name',\n                      label: 'Category Name',\n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                      onChange: handleChange,\n                      helperText: touched.Category_Name && errors.Category_Name,\n                      error: Boolean(errors.Category_Name && touched.Category_Name),\n                    }}\n                  />\n                </Grid>\n                </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Expense Catergory\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddExpenseCategories;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddUnits.jsx",["1843","1844","1845","1846","1847","1848","1849","1850","1851","1852"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Unit_Code: '',\n  Unit_Name: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Unit_Code: Yup.string()\n \n    .required('Unit Code is required!'),\n\n    Unit_Name: Yup.string()\n  \n    .required('Unit Name per line is required!'),\n\n  \n});\n\nconst AddUnits = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Unit' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Unit_Code',\n                      label: 'Unit Code',\n                      onBlur: handleBlur,\n                      value: values.Unit_Code,\n                      onChange: handleChange,\n                      helperText: touched.Unit_Code && errors.Unit_Code,\n                      error: Boolean(errors.Unit_Code && touched.Unit_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Unit_Name',\n                      label: 'Unit Name',\n                      onBlur: handleBlur,\n                      value: values.Unit_Name,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Unit_Name && errors.Unit_Name,\n                      error: Boolean(errors.Unit_Name && touched.Unit_Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Base_Unit',\n                      label: 'Base Unit',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Base_Unit'),\n                      helperText: touched.Base_Unit && errors.Base_Unit,\n                      error: Boolean(errors.Base_Unit && touched.Base_Unit),\n                    }}\n                  />\n                </Grid>\n                \n               \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add unit\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddUnits;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddVariants.jsx",["1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  \n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n\n   \n        \n    \n\n  \n  \n\n    \n});\n\nconst AddVariants = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Variant' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n               \n               \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Variant\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddVariants;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddTaxRates.jsx",["1864","1865","1866","1867","1868","1869","1870","1871","1872","1873"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  Code: '',\n  Rate: '',\n  Type: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(2, 'Name must be 2 character length')\n    .max(2, 'Name must be 10 character length')\n    .required('Name is required!'),\n\n    Code: Yup.string(),\n    \n    Rate: Yup.string()\n   \n    .required('Rate per line is required!'),\n\n    Type: Yup.string()\n   \n    .required('Type per line is required!'),\n\n\n});\n\nconst AddTaxRates = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Tax Rate' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Code',\n                      label: 'Code',\n                      onBlur: handleBlur,\n                      value: values.Code,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Code && errors.Code,\n                      error: Boolean(errors.Code && touched.Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Rate',\n                      label: 'Rate',\n                      value: values.Rate,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Rate && errors.Rate,\n                      error: Boolean(errors.Rate && touched.Rate),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n             \n              \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Tax Rate\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddTaxRates;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPriceGroups.jsx",["1874","1875","1876","1877","1878","1879","1880","1881","1882","1883","1884"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Group_Name: Yup.string()\n    .min(6, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n\n\n\n});\n\n\n\n\n\n\n\nconst AddPriceGroups = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Price Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Group_Name *',\n                      label: 'Group Name',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Group_Name && errors.Group_Name,\n                      error: Boolean(errors.Group_Name && touched.Group_Name),\n                    }}\n                  />\n                </Grid>\n                </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Price Group\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPriceGroups;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddBrands.jsx",["1885","1886","1887","1888","1889","1890","1891","1892","1893","1894","1895"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize, Typography } from '@mui/material';\nimport { min } from 'lodash';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Code: '',\n  Name: '',\n  Slug: '',\n  Description:'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Code: Yup.string()\n  \n    .required('Code is required!'),\n\n  Name: Yup.string()\n  \n    .required('Name per line is required!'),\n\n    Slug: Yup.string()\n    .required('Slug per line is required!'),\n\n    Description: Yup.string()\n    .required('Name per line is required!'),\n});\n\nconst AddBrands = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Brand' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Code',\n                      label: 'Code',\n                      onBlur: handleBlur,\n                      value: values.Code,\n                      onChange: handleChange,\n                      helperText: touched.Code && errors.Code,\n                      error: Boolean(errors.Code && touched.Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Slug',\n                      label: 'Slug',\n                      value: values.Slug,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  {/* <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category Image',\n                      label: 'Category_Image',\n                      onBlur: handleBlur,\n                      value: values.Category_Image,\n                      onChange: handleChange,\n                      helperText: touched.Category_Image && errors.Category_Image,\n                      error: Boolean(errors.Category_Image && touched.Category_Image),\n                    }}\n                    \n                  />  */}\n                    <Singleimage\n                    \n                        />\n\n                     <Typography className={classes.textnew2}>Image</Typography>\n                </Grid>\n                \n    \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Brand\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddBrands;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCategories.js",["1896","1897","1898","1899","1900","1901","1902","1903","1904","1905"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport { Typography } from '@mui/material';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Category_Code: '',\n  Category_Name: '',\n  Slug: '',\n  Description: '',\n\n \n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Category_Code: Yup.string()\n \n    .required('Category Code is required!'),\n\n    Category_Name: Yup.string()\n   \n    .required('Category Name is required!'),\n\n \n    \n   \n\n    Description: Yup.string()\n    .min(6, 'Description must be 6 character length')\n    .required('Description per line is required!'),\n\n \n\n});\n\nconst AddCategories = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Categories' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Code',\n                      label: 'Category Code',\n                      onBlur: handleBlur,\n                      value: values.Category_Code,\n                      onChange: handleChange,\n                      helperText: touched.Category_Code && errors.Category_Code,\n                      error: Boolean(errors.Category_Code && touched.Category_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Name',\n                      label: 'Category Name',\n                    \n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                   \n                      onChange: handleChange,\n                      helperText: touched.Category_Name && errors.Category_Name,\n                      error: Boolean(errors.Category_Name && touched.Category_Name),\n                    }}\n                  />\n                </Grid>\n              \n              \n              \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Slug',\n                      // label: 'Slug',\n                    \n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                      // Value:\"\",\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                  /> \n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <Fileattachment\n                    props={{\n                      label: '  Category Image',\n                    }}\n                  />\n                </Grid>\n                     \n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                      'Bradley Wilkerson',\n                         'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                         'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Parent_Category',\n                      label: 'Parent Category',\n                      value: values.Parent_Category,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Parent Category'),\n                      helperText: touched.Parent_Category && errors.Parent_Category,\n                      error: Boolean(errors.Parent_Category && touched.Parent_Category),\n                    }}\n                  />\n                </Grid>\n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add category\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddCategories;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddWareHouses.jsx",["1906","1907","1908","1909","1910","1911","1912","1913"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize, Typography } from '@mui/material';\nimport { min } from 'lodash';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport Label from '../material-kit/tables/Label';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n \n  code: '',\n  Name: '',\n  Price_Group: '',\n  Phone: '',\n  Email: '',\n  Address:'',\n  Warehouse_Map:'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  code: Yup.string()\n    .min(6, 'code must be 6 character length')\n    .required('code is required!'),\n    Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n  \n    Phone: Yup.string()\n    .matches(\n      /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\n      \"Phone number is not valid\"\n    )\n    .max(10,\"Phone number is not valid\"),\n    \n\n\n    Email: Yup.string()\n          .email(),\n \n    \n});\n\nconst AddWareHouses = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add WareHouse' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n               \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'code',\n                      label: 'code',\n                      onBlur: handleBlur,\n                      value: values.code,\n                    \n                      onChange: handleChange,\n                      helperText: touched.code && errors.code,\n                      error: Boolean(errors.code && touched.code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n             \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'Email',\n                      name: 'Email',\n                      label: 'Email',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n              \n                <Grid item xs={12}>\n                  <Label> Address</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  {/* <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category Image',\n                      label: 'Category_Image',\n                      onBlur: handleBlur,\n                      value: values.Category_Image,\n                      onChange: handleChange,\n                      helperText: touched.Category_Image && errors.Category_Image,\n                      error: Boolean(errors.Category_Image && touched.Category_Image),\n                    }}\n                    \n                  />  */}\n                    <Singleimage\n                    \n                        />\n\n                     <Typography className={classes.textnew2}>Warehouse Map</Typography>\n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add WareHouse\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddWareHouses;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCategories.js",["1914","1915","1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939","1940","1941"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPromos.js",["1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970","1971"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { Tab } from '@mui/material';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n  { id: 'Product to buy', label: 'Product to buy', alignRight: false },\n  { id: 'Product to get', label: 'Product to get', alignRight: false },\n  { id: 'Start Date', label: 'Start Date', alignRight: false },\n  { id: 'End Date', label: 'End Date', alignRight: false },\n  { id: 'Action', label: 'Action', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\nlet promo =[\n  {\"id\":\"1\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n  {\"id\":\"2\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n  {\"id\":\"3\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n  {\"id\":\"4\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n  {\"id\":\"5\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n  {\"id\":\"6\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n]\n\n\nconst showtoast =()=>{\n  toast.success('Delete Successfully!', {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\n\n\n\n\n\nfunction ListPromos(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  const navigate = useNavigate();\n\n\n\nconst NavigatetoEdit= (index) => {\n  // 👇️ navigate to /EditCurrencies\n  navigate(`/Settings/Promos/EditPromos/${index}`);\n};\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n             {\n              promo.map((item,index)=>{\n                return(\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox/>\n                    </TableCell>\n                    <TableCell>\n                      {item.Name}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Product_to_buy}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Product_to_get}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Start_Date}\n\n                    </TableCell>\n                    \n                    <TableCell>\n                      {item.End_Date}\n\n                    </TableCell>\n                    <TableCell>\n                      <Edit onClick ={()=>NavigatetoEdit(item.id)} />\n                      <Delete  onClick={showtoast}/>\n                    </TableCell>\n                    \n                    \n                    \n                    </TableRow>\n                )\n              })\n             }\n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={12} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n\n      />\n      <ToastContainer/>\n\n    </Container>\n\n\n    // </Page>\n  );\n}\nexport default ListPromos;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPromos.jsx",["1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\n\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  start_Date: '',\n  End_Date: '',\n  Produc_to_buy: '',\n  Product_to_get: '',\n  Description: '',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n    start_Date: Yup.date(),\n    End_Date: Yup.date().min(\n        Yup.ref('start_Date'),\n        \"End date can't be before Start date\"\n      ),\n     Produc_to_buy: Yup.string()\n    .min(6, 'Produc_to_buy must be 6 character length')\n    .required('Produc_to_buy per line is required!'),\n\n    Product_to_get: Yup.string()\n    .min(6, 'Product_to_get must be 6 character length')\n    \n    .required('Product_to_get per line is required!'),\n\n    Description: Yup.string(),\n});\n\nconst AddPromos = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Promos' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'start_Date',\n                      label: 'start Date',\n                      onBlur: handleBlur,\n                      value: values.start_Date,\n                    \n                      onChange: handleChange,\n                      helperText: touched.start_Date && errors.start_Date,\n                      error: Boolean(errors.start_Date && touched.start_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'End_Date',\n                      label: 'End Date',\n                      value: values.End_Date,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.End_Date && errors.End_Date,\n                      error: Boolean(errors.End_Date && touched.End_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Produc_to_buy',\n                      label: 'Product to buy',\n                      onBlur: handleBlur,\n                      value: values.Produc_to_buy,\n                      onChange: handleChange,\n                      helperText: touched.Produc_to_buy && errors.Produc_to_buy,\n                      error: Boolean(errors.Produc_to_buy && touched.Produc_to_buy),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Product_to_get',\n                      label: 'Product to get',\n                      onBlur: handleBlur,\n                      value: values.Product_to_get,\n                      onChange: handleChange,\n                      helperText: touched.Product_to_get && errors.Product_to_get,\n                      error: Boolean(errors.Product_to_get && touched.Product_to_get),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                <SimpleFormNew\n               \n           \n                     props={{\n                      type: 'text',\n                      multiline:true,\n                      rows:4,\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                \n                  /> \n                        \n               \n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Promos\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPromos;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCurrenies.js",["1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport{Link} from 'react-router-dom';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\n// import { toast } from 'react-toastify';\n//\n\n// ----------------------------------------------------------------------\n\n\n\nconst TABLE_HEAD = [\n  { id: 'Currency Code', label: 'Currency Code', alignRight: false },\n  { id: 'Currency Name', label: 'Currency Name', alignRight: false },\n  { id: 'Exchange rate', label: 'Exchange rate', alignRight: false },\n\n  { id: 'Symbol', label: 'Symbol', alignRight: false },\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n//------------------------------------------json object for default data-----\n\nlet obj = [\n  {\"id\":\"1\", \"Currency_code\":\"USD\",\"Currency_Name\":\"DOLLAR\",\"Exchange_rate\":\"80\",\"Symbol\":\"$\",},\n  {\"id\":\"2\", \"Currency_code\":\"USD\",\"Currency_Name\":\"DOLLAR\",\"Exchange_rate\":\"80\",\"Symbol\":\"$\",},\n  {\"id\":\"3\", \"Currency_code\":\"USD\",\"Currency_Name\":\"DOLLAR\",\"Exchange_rate\":\"80\",\"Symbol\":\"$\",},\n  {\"id\":\"4\", \"Currency_code\":\"USD\",\"Currency_Name\":\"DOLLAR\",\"Exchange_rate\":\"80\",\"Symbol\":\"$\",},\n  {\"id\":\"5\", \"Currency_code\":\"USD\",\"Currency_Name\":\"DOLLAR\",\"Exchange_rate\":\"80\",\"Symbol\":\"$\",},\n]\n\nconst showtoast =()=>{\n  toast.success('Delete Successfully!', {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListCurrenies(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigateToEdit= (index) => {\n  // 👇️ navigate to /EditCurrencies\n  navigate(`/Settings/Currencies/EditCurrencies/${index}`);\n};\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={12} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n               \n                  {\n                    obj.map((item,index)=>{\n                      return(\n                        <TableRow>\n                          <Checkbox/>\n                        <TableCell>\n                         {item.Currency_code}\n                        </TableCell>  \n                        <TableCell>\n                         {item.Currency_Name}\n                        </TableCell>  \n                        <TableCell>\n                         {item.Exchange_rate}\n                        </TableCell>  \n                        <TableCell>\n                         {item.Symbol}\n                        </TableCell> \n                        <TableCell>\n                         <Delete onClick={showtoast}/>\n                         {/* <Link to=\"EditCurrencies/1\"><Edit/></Link> */}\n\n                         <Edit onClick={()=>navigateToEdit(item.id)}/>\n                        </TableCell> \n\n                        </TableRow>\n                      )\n                    })\n                  }\n                  \n\n\n             \n\n                \n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n            <ToastContainer />\n\n\n    </Container>\n    // </Page>\n  );\n}\nexport default ListCurrenies;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListExpenseCategories.js",["2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041","2042"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { CheckBox, Delete, Edit, Print } from '@material-ui/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Category Code', label: 'Category Code', alignRight: false },\n  { id: 'Category Name', label: 'Category Name', alignRight: false },\n \n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\nlet ExCategories =[\n  {\"id\":\"1\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n  {\"id\":\"2\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n  {\"id\":\"3\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n  {\"id\":\"4\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n  {\"id\":\"5\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n  {\"id\":\"6\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n]\n\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListExpenseCategories(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigatetoedit= (index) => {\n\n  navigate(`/Settings/ExpenseCategories/EditExpenseCategories/${index}`);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n                \n\n                {\n                  ExCategories.map((item,index)=>{\n                    return(\n                      <TableRow>\n                        <TableCell>\n                          <Checkbox/>\n                        </TableCell>\n                        <TableCell>\n                          {item.Category_code}\n                        </TableCell>\n                        <TableCell>\n                          {item.category_Name}\n                        </TableCell>\n                        <TableCell>\n                          <Edit onClick={()=>navigatetoedit(item.id)}/>\n                          <Delete onClick={()=>showtoast(item.id)}/>\n                        </TableCell>\n                      </TableRow>\n                    )\n                  })\n                }\n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListExpenseCategories;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListUnits.js",["2043","2044","2045","2046","2047","2048","2049","2050","2051","2052","2053","2054","2055","2056","2057","2058","2059","2060","2061","2062","2063","2064","2065","2066","2067","2068","2069","2070","2071"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\nimport Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Unit code', label: 'unit code', alignRight: false },\n  { id: 'unit name', label: 'unit name', alignRight: false },\n  { id: 'Base unit', label: 'Base unit', alignRight: false },\n  { id: 'Operator', label: 'Operator', alignRight: false },\n  { id: 'Operation Value', label: 'Operation Value', alignRight: false },\n  { id: 'Actions', label: 'Actions', alignRight: false },\n\n];\n\n// ----------------------------------------------------------------------\n\n\nlet unit = [\n  { \"id\": \"1\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n  { \"id\": \"2\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n  { \"id\": \"3\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n  { \"id\": \"4\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n  { \"id\": \"5\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n  { \"id\": \"6\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n]\n\n\n\nconst showtoast = (index) => {\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n  });\n}\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListUnits(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n\n  const navigate = useNavigate();\n\n\n\n  const navigatetoedit = (index) => {\n\n    navigate(`/Settings/Units/EditUnits/${index}`);\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n      <TableContainer>\n        <Table>\n          <UserListHead\n            order={order}\n            orderBy={orderBy}\n            headLabel={TABLE_HEAD}\n            rowCount={data.length}\n            numSelected={selected.length}\n            onRequestSort={handleRequestSort}\n            onSelectAllClick={handleSelectAllClick}\n          />\n          <TableBody>\n            {filteredUsers\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                const {\n                  id,\n                  name,\n                  unit,\n                  cost,\n                  price,\n                  image,\n                  code,\n                  brand,\n                  quantity,\n                  alert_quantity,\n                  category_id,\n                  isVerified,\n                } = row;\n                const isItemSelected = selected.indexOf(name) !== -1;\n\n                return (\n                  <TableRow\n                  // hover\n                  // key={id}\n                  // tabIndex={-1}\n                  // role=\"checkbox\"\n                  // selected={isItemSelected}\n                  // aria-checked={isItemSelected}\n                  >\n                    {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                    {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                    {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                    {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                    {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                    {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                    <TableCell align=\"right\">\n                      <UserMoreMenu />\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          {isUserNotFound && (\n            <TableBody>\n\n              {\n                unit.map((item, index) => {\n                  return (\n                    <TableRow>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {item.Unit_code}\n                      </TableCell>\n                      <TableCell>\n                        {item.Unit_Name}\n                      </TableCell>\n                 \n                      <TableCell>\n                        {item.Base_unit}\n                      </TableCell>\n                      <TableCell>\n                        {item.Operator}\n                      </TableCell>\n                      <TableCell>\n                        {item.Operator_Value}\n                      </TableCell>\n                      <TableCell>\n                        <Edit onClick={() => navigatetoedit(item.id)} />\n                        <Delete onClick={() => showtoast(item.id)} />\n                      </TableCell>\n                    </TableRow>\n                  )\n                })\n              }\n\n\n\n              <TableRow>\n\n\n                <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                  <SearchNotFound searchQuery={filterName} />\n\n                </TableCell>\n              </TableRow>\n\n\n\n            </TableBody>\n          )}\n        </Table>\n      </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListUnits;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPriceGroups.js",["2072","2073","2074","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { EyeFilled } from '@ant-design/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\nlet pricegroup =[\n  {\"id\":\"1\",\"Name\":\"arun\"},\n  {\"id\":\"2\",\"Name\":\"arun\"},\n  {\"id\":\"3\",\"Name\":\"arun\"},\n  {\"id\":\"4\",\"Name\":\"arun\"},\n  {\"id\":\"5\",\"Name\":\"arun\"},\n  {\"id\":\"6\",\"Name\":\"arun\"},\n  {\"id\":\"7\",\"Name\":\"arun\"},\n  {\"id\":\"8\",\"Name\":\"arun\"},\n\n]\n\n\n\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListPriceGroups(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n  const navigate = useNavigate();\n\n\n\n  const navigatetoedit= (index) => {\n    // 👇️ navigate to /EditCurrencies\n    navigate(`/Settings/PriceGroups/EditPriceGroups/${index}`);\n  };\n  \n  \n  const navigatetogrpproduct =(index)=>{\n    navigate(`/Settings/PriceGroups/GroupProductPrices/${index}`);\n  }\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n\n                \n              {\n                pricegroup.map((item,index)=>{\n                  return(\n                    <TableRow>\n                      <TableCell>\n                        <Checkbox/>\n                      </TableCell>\n                      <TableCell>\n                        {item.Name}\n                      </TableCell>\n                      <TableCell>\n                        <EyeFilled onClick={()=>{navigatetogrpproduct(item.id)}}/>\n                        <Edit onClick ={()=>navigatetoedit(item.id)}/>\n                        <Delete onClick ={()=>showtoast(item.id)}/>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })\n              }\n\n              \n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListPriceGroups;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListBrands.js",["2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../material-kit/tables/Label';\nimport Scrollbar from '../material-kit/tables/Scrollbar';\nimport USERLIST from '../material-kit/tables/User';\nimport SearchNotFound from '../material-kit/tables/SearchNotFound';\nimport UserListHead from '../material-kit/tables/UserListHead';\nimport UserListToolbar from '../material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Image', label: 'Image', alignRight: false },\n\n  { id: 'Code', label: 'Code', alignRight: false },\n  { id: 'Name', label: 'Name', alignRight: false },\n  { id: 'Slug', label: 'Slug', alignRight: false },\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n   let brand =[\n    {\"id\":\"1\",\"Image\":\"blank\",\"code\":\"123\",\"Name\":\"brand123\",\"slug\":\"brand123\"},\n    {\"id\":\"2\",\"Image\":\"blank\",\"code\":\"123\",\"Name\":\"brand123\",\"slug\":\"brand123\"},\n    {\"id\":\"3\",\"Image\":\"blank\",\"code\":\"123\",\"Name\":\"brand123\",\"slug\":\"brand123\"},\n    {\"id\":\"4\",\"Image\":\"blank\",\"code\":\"123\",\"Name\":\"brand123\",\"slug\":\"brand123\"},\n    {\"id\":\"5\",\"Image\":\"blank\",\"code\":\"123\",\"Name\":\"brand123\",\"slug\":\"brand123\"},\n   ]\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListBrands(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigatetoedit= (index) => {\n  \n  navigate(`/Settings/Brands/EditBrands/${index}`);\n};\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n\n                {\n                  brand.map((item,index)=>{\n                    return(\n                      <TableRow>\n                  <TableCell >\n                    <Checkbox/>\n                  </TableCell>\n                  <TableCell>\n                    {item.Image}\n                  </TableCell>\n                  <TableCell>\n                    {item.code}\n                  </TableCell>\n                  <TableCell>\n                    {item.Name}\n                  </TableCell>\n                  <TableCell>\n                  {item.slug}\n                  </TableCell>\n                  \n                  \n                  <TableCell>\n                    <Delete onClick={()=>showtoast(item.id)}/>\n                    <Edit onClick={()=>navigatetoedit(item.id)}/>\n                  </TableCell>\n                 </TableRow>\n\n\n                    )\n                  })\n                }\n\n\n             \n\n\n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListBrands;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListVariants.js",["2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148","2149","2150","2151","2152","2153","2154","2155","2156","2157","2158"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\n\n\nlet variant =[\n  {\"id\":\"1\",\"Name\":\"Black\"},\n  {\"id\":\"2\",\"Name\":\"Black\"},\n  {\"id\":\"3\",\"Name\":\"Black\"},\n  {\"id\":\"4\",\"Name\":\"Black\"},\n  {\"id\":\"5\",\"Name\":\"Black\"},\n  {\"id\":\"6\",\"Name\":\"Black\"},\n]\n\n\n\n\n\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListVariants(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  const navigate = useNavigate();\n\n\n\n  const navigatetoedit= (index) => {\n    // 👇️ navigate to /EditCurrencies\n    navigate(`/Settings/Variants/EditVariants/${index}`);\n  };\n  \n  \n  \n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n\n              {\n                variant.map((item,index)=>{\n                  return(\n                    <TableRow>\n                      <TableCell>\n                        <Checkbox/>\n                      </TableCell>\n                      <TableCell>\n                        {item.Name}\n                      </TableCell>\n                      <TableCell>\n                        <Edit onClick ={()=>navigatetoedit(item.id)}/>\n                        <Delete onClick ={()=>showtoast(item.id)}/>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })\n              }\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListVariants;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListWareHouses.js",["2159","2160","2161","2162","2163","2164","2165","2166","2167","2168","2169","2170","2171","2172","2173","2174","2175","2176","2177","2178","2179","2180"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Map', label: 'Map', alignRight: false },\n  { id: 'Code', label: 'Code', alignRight: false },\n  { id: 'Name', label: 'Name', alignRight: false },\n  { id: 'Price Group', label: 'Price Group', alignRight: false },\n  { id: 'Phone', label: 'Phone', alignRight: false },\n  { id: 'Email', label: 'Email', alignRight: false },\n  { id: 'Address', label: 'Address', alignRight: false },\n\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\nlet warehouse =[\n  {\"id\":\"1\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n  {\"id\":\"2\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n  {\"id\":\"3\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n  {\"id\":\"4\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n  {\"id\":\"5\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n  {\"id\":\"6\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n]\n\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListWareHouses(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n   \n  const navigate = useNavigate();\n\n\n\n  const navigatetoedit= (index) => {\n    \n    navigate(`/Settings/WareHouses/EditWareHouses/${index}`);\n  };\n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      <TableCell align=\"left\">{\"Map\"}</TableCell>\n\n                      <TableCell align=\"left\">{\"code\"}</TableCell>\n                      <TableCell align=\"left\">{\"name\"}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell>\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n                   \n\n\n                {\n                  warehouse.map((item,index)=>{\n                    return(\n                      <TableRow>\n                  <TableCell >\n                    <Checkbox/>\n                  </TableCell>\n                  <TableCell>\n                    {item.Map}\n                  </TableCell>\n                  <TableCell>\n                    {item.code}\n                  </TableCell>\n                  <TableCell>\n                    {item.Name}\n                  </TableCell>\n                  <TableCell>\n                  {item.Price_Group}\n                  </TableCell>\n                  <TableCell>\n                  {item.Phone}\n                  </TableCell>\n                  <TableCell>\n                  {item.Email}\n                  </TableCell>\n                  <TableCell>\n                  {item.Address}\n                  </TableCell>\n                  \n                  \n                  <TableCell>\n                    <Delete onClick={()=>showtoast(item.id)}/>\n                    <Edit onClick={()=>navigatetoedit(item.id)}/>\n                  </TableCell>\n                 </TableRow>\n\n\n                    )\n                  })\n                }\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={12} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListWareHouses;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListTaxRates.js",["2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2193","2194","2195","2196","2197","2198","2199","2200","2201","2202","2203","2204","2205","2206","2207","2208","2209"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\nimport Label from '../material-kit/tables/Label';\nimport Scrollbar from '../material-kit/tables/Scrollbar';\nimport USERLIST from '../material-kit/tables/User';\nimport SearchNotFound from '../material-kit/tables/SearchNotFound';\nimport UserListHead from '../material-kit/tables/UserListHead';\nimport UserListToolbar from '../material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n  { id: 'Code', label: 'Code', alignRight: false },\n  { id: 'Tax Rate', label: 'Tax Rate', alignRight: false },\n  { id: 'Type', label: 'Type', alignRight: false },\n\n  { id: 'Actions', label: 'Actions', alignRight: false },\n\n\n\n];\n\n// ----------------------------------------------------------------------\n\n   let taxrate =[\n    {\"id\":\"1\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n    {\"id\":\"2\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n    {\"id\":\"3\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n    {\"id\":\"4\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n    {\"id\":\"5\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n    {\"id\":\"6\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n   ]\n\n\n   \n   const showtoast =(index)=>{\n    toast.success(`Delete Successfully! no = ${index}`, {\n      position: toast.POSITION.TOP_CENTER\n  });\n  }\n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListTaxRates(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigatetoedit= (index) => {\n\n  navigate(`/Settings/TaxRates/EditTaxRates/${index}`);\n};\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n      <TableContainer>\n        <Table>\n          <UserListHead\n            order={order}\n            orderBy={orderBy}\n            headLabel={TABLE_HEAD}\n            rowCount={data.length}\n            numSelected={selected.length}\n            onRequestSort={handleRequestSort}\n            onSelectAllClick={handleSelectAllClick}\n          />\n          <TableBody>\n            {filteredUsers\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                const {\n                  id,\n                  name,\n                  unit,\n                  cost,\n                  price,\n                  image,\n                  code,\n                  brand,\n                  quantity,\n                  alert_quantity,\n                  category_id,\n                  isVerified,\n                } = row;\n                const isItemSelected = selected.indexOf(name) !== -1;\n\n                return (\n                  <TableRow\n                  // hover\n                  // key={id}\n                  // tabIndex={-1}\n                  // role=\"checkbox\"\n                  // selected={isItemSelected}\n                  // aria-checked={isItemSelected}\n                  >\n                    {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                    {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                    {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                    {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                    {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                    {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                    <TableCell align=\"right\">\n                      <UserMoreMenu />\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          {isUserNotFound && (\n            <TableBody>\n   \n\n   {\n    taxrate.map((item,index)=>{\n      return(\n           <TableRow>\n            <TableCell>\n            <Checkbox/>\n            </TableCell>\n            <TableCell>\n              {item.Name}\n            </TableCell>\n            <TableCell>\n              {item.code}\n            </TableCell>\n            <TableCell>\n              {item.Tax_Rate}\n            </TableCell>\n            <TableCell>\n              {item.Type}\n            </TableCell>\n            <TableCell>\n            <Edit onClick ={()=>navigatetoedit(item.id)} />\n                      <Delete  onClick={()=>showtoast(item.id)}/>\n            </TableCell>\n           </TableRow>\n      )\n    })\n   }\n            \n\n\n\n\n\n\n  <TableRow>\n                <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                  <SearchNotFound searchQuery={filterName} />\n                </TableCell>\n              </TableRow>\n\n\n            </TableBody>\n          )}\n        </Table>\n      </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListTaxRates;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCurrencies.js",["2210","2211","2212","2213","2214","2215","2216","2217","2218","2219","2220"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n  Currency_Name: '',\n  Symbol: '',\n  Exchange_Rate: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Currency_Code: Yup.string()\n    .min(3, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n        \n   Currency_Name: Yup.string()\n    .min(3, 'Currency Name must be 3 character length')\n    .required('Currency Name per line is required!'),\n\n    Symbol: Yup.string()\n   \n    .required('Symbol per line is required!'),\n\n    Exchange_Rate: Yup.string()\n    .required('Exchange Rate per line is required!'),\n\n\n});\n\n\n\n\n\n\n\nconst EditCurrencies = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Currencies' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Currency_Code',\n                      label: 'Currency Code',\n                      onBlur: handleBlur,\n                      value: values.Currency_Code,\n                      onChange: handleChange,\n                      helperText: touched.Currency_Code && errors.Currency_Code,\n                      error: Boolean(errors.Currency_Code && touched.Currency_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Currency_Name',\n                      label: 'Currency Name',\n                      onBlur: handleBlur,\n                      value: values.start_Date,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Currency_Name && errors.start_Date,\n                      error: Boolean(errors.Currency_Name && touched.start_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Symbol',\n                      label: 'Symbol',\n                      value: values.Symbol,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Symbol && errors.Symbol,\n                      error: Boolean(errors.Symbol && touched.Symbol),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Exchange_Rate',\n                      label: 'Exchange Rate',\n                      onBlur: handleBlur,\n                      value: values.Exchange_Rate,\n                      onChange: handleChange,\n                      helperText: touched.Exchange_Rate && errors.Exchange_Rate,\n                      error: Boolean(errors.Exchange_Rate && touched.Exchange_Rate),\n                    }}\n                  />\n                </Grid>\n              \n           \n                     \n          \n          \n              </Grid>\n\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Currencies\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditCurrencies;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPromos.js",["2221","2222","2223","2224","2225","2226","2227","2228","2229","2230","2231"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\n\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  start_Date: '',\n  End_Date: '',\n  Produc_to_buy: '',\n  Product_to_get: '',\n  Description: '',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n    start_Date: Yup.date(),\n    End_Date: Yup.date().min(\n        Yup.ref('start_Date'),\n        \"End date can't be before Start date\"\n      ),\n     Produc_to_buy: Yup.string()\n    .min(6, 'Produc_to_buy must be 6 character length')\n    .required('Produc_to_buy per line is required!'),\n\n    Product_to_get: Yup.string()\n    .min(6, 'Product_to_get must be 6 character length')\n    \n    .required('Product_to_get per line is required!'),\n\n    Description: Yup.string(),\n});\n\nconst EditPromos = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Promos' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'start_Date',\n                      label: 'start Date',\n                      onBlur: handleBlur,\n                      value: values.start_Date,\n                    \n                      onChange: handleChange,\n                      helperText: touched.start_Date && errors.start_Date,\n                      error: Boolean(errors.start_Date && touched.start_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'End_Date',\n                      label: 'End Date',\n                      value: values.End_Date,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.End_Date && errors.End_Date,\n                      error: Boolean(errors.End_Date && touched.End_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Produc_to_buy',\n                      label: 'Product to buy',\n                      onBlur: handleBlur,\n                      value: values.Produc_to_buy,\n                      onChange: handleChange,\n                      helperText: touched.Produc_to_buy && errors.Produc_to_buy,\n                      error: Boolean(errors.Produc_to_buy && touched.Produc_to_buy),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Product_to_get',\n                      label: 'Product to get',\n                      onBlur: handleBlur,\n                      value: values.Product_to_get,\n                      onChange: handleChange,\n                      helperText: touched.Product_to_get && errors.Product_to_get,\n                      error: Boolean(errors.Product_to_get && touched.Product_to_get),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                <SimpleFormNew\n               \n           \n                     props={{\n                      type: 'text',\n                      multiline:true,\n                      rows:4,\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                \n                  /> \n                        \n               \n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Promos\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditPromos;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditBrands.js",["2232","2233","2234","2235","2236","2237","2238","2239","2240","2241","2242"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize, Typography } from '@mui/material';\nimport { min } from 'lodash';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Code: '',\n  Name: '',\n  Slug: '',\n  Description:'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Code: Yup.string()\n  \n    .required('Code is required!'),\n\n  Name: Yup.string()\n  \n    .required('Name per line is required!'),\n\n    Slug: Yup.string()\n    .required('Slug per line is required!'),\n\n    Description: Yup.string()\n    .required('Name per line is required!'),\n});\n\nconst EditBrands = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Brand' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Code',\n                      label: 'Code',\n                      onBlur: handleBlur,\n                      value: values.Code,\n                      onChange: handleChange,\n                      helperText: touched.Code && errors.Code,\n                      error: Boolean(errors.Code && touched.Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Slug',\n                      label: 'Slug',\n                      value: values.Slug,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  {/* <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category Image',\n                      label: 'Category_Image',\n                      onBlur: handleBlur,\n                      value: values.Category_Image,\n                      onChange: handleChange,\n                      helperText: touched.Category_Image && errors.Category_Image,\n                      error: Boolean(errors.Category_Image && touched.Category_Image),\n                    }}\n                    \n                  />  */}\n                    <Singleimage\n                    \n                        />\n\n                     <Typography className={classes.textnew2}>Image</Typography>\n                </Grid>\n                \n    \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Brand\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditBrands;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCategories.js",["2243","2244","2245","2246","2247","2248","2249","2250","2251","2252"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport { Typography } from '@mui/material';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Category_Code: '',\n  Category_Name: '',\n  Slug: '',\n  Description: '',\n\n \n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Category_Code: Yup.string()\n \n    .required('Category Code is required!'),\n\n    Category_Name: Yup.string()\n   \n    .required('Category Name is required!'),\n\n \n    \n   \n\n    Description: Yup.string()\n    .min(6, 'Description must be 6 character length')\n    .required('Description per line is required!'),\n\n \n\n});\n\nconst EditCategories = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Categories' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Code',\n                      label: 'Category Code',\n                      onBlur: handleBlur,\n                      value: values.Category_Code,\n                      onChange: handleChange,\n                      helperText: touched.Category_Code && errors.Category_Code,\n                      error: Boolean(errors.Category_Code && touched.Category_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Name',\n                      label: 'Category Name',\n                    \n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                   \n                      onChange: handleChange,\n                      helperText: touched.Category_Name && errors.Category_Name,\n                      error: Boolean(errors.Category_Name && touched.Category_Name),\n                    }}\n                  />\n                </Grid>\n              \n              \n              \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Slug',\n                      // label: 'Slug',\n                    \n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                      // Value:\"\",\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                  /> \n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <Fileattachment\n                    props={{\n                      label: '  Category Image',\n                    }}\n                  />\n                </Grid>\n                     \n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                      'Bradley Wilkerson',\n                         'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                         'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Parent_Category',\n                      label: 'Parent Category',\n                      value: values.Parent_Category,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Parent Category'),\n                      helperText: touched.Parent_Category && errors.Parent_Category,\n                      error: Boolean(errors.Parent_Category && touched.Parent_Category),\n                    }}\n                  />\n                </Grid>\n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit category\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditCategories;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPrint.js",["2253","2254","2255","2256","2257","2258","2259","2260","2261","2262","2263","2264","2265","2266","2267","2268","2269","2270","2271","2272","2273","2274","2275","2276","2277","2278","2279","2280","2281","2282"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { Tab } from '@mui/material';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Title', label: 'Title', alignRight: false },\n  { id: 'Type', label: 'Type', alignRight: false },\n  { id: 'Profile', label: 'Profile', alignRight: false },\n  { id: 'Path', label: 'Path', alignRight: false },\n  { id: 'IP Address', label: 'IP Address', alignRight: false },\n  { id: 'Port', label: 'Port', alignRight: false },\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\nlet promo =[\n  {\"id\":\"1\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n  {\"id\":\"2\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n  {\"id\":\"3\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n  {\"id\":\"4\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n  {\"id\":\"5\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n  {\"id\":\"6\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n \n]\n\n\nconst showtoast =()=>{\n  toast.success('Delete Successfully!', {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\n\n\n\n\n\nfunction ListPrint(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  const navigate = useNavigate();\n\n\n\nconst NavigatetoEdit= (index) => {\n  // 👇️ navigate to /EditCurrencies\n  navigate(`/Settings/EditPrinter/${index}`);\n};\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n             {\n              promo.map((item,index)=>{\n                return(\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox/>\n                    </TableCell>\n                    <TableCell>\n                      {item.Title}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Type}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Profile}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Path}\n\n                    </TableCell>\n                    \n                    <TableCell>\n                      {item.IP_Address}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Port}\n\n                    </TableCell>\n                    <TableCell>\n                      <Delete onClick ={showtoast}/>\n                      <Edit onClick ={()=>NavigatetoEdit(item.id)}/>\n                    </TableCell>\n                \n                    \n                    \n                    </TableRow>\n                )\n              })\n             }\n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={12} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n\n      />\n      <ToastContainer/>\n\n    </Container>\n\n\n    // </Page>\n  );\n}\nexport default ListPrint;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPrinter.js",["2283","2284","2285","2286","2287","2288","2289","2290"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Title: '',\n  Type: '',\n  port: '',\n  Charactersperline: '',\n  IPAddress: '',\n  Profile: '',\n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Title: Yup.string()\n    .min(6, 'Title must be 6 character length')\n    .required('Title is required!'),\n\n  Type: Yup.string()\n    .min(6, 'Type must be 6 character length')\n    .required('Type is required!'),\n\n  port: Yup.string()\n    .max(4, 'port must be 4 character length')\n    .required('port is required!')\n    .matches(/^[0-9]+$/, \"Must be only digits\"),\n\n  Charactersperline: Yup.string()\n    .min(6, 'Charactersperline must be 6 character length')\n    .required('Characters per line is required!'),\n\n  IPAddress: Yup.string()\n    .min(6, 'IPAddress must be 6 character length')\n    .matches(/(^(\\d{1,3}\\.){3}(\\d{1,3})$)/, {\n      message: 'Invalid IP address',\n      excludeEmptyString: true\n    })\n    .required('IPAddress per line is required!'),\n\n  Profile: Yup.string()\n    .min(6, 'Profile must be 6 character length')\n    .required('Profile per line is required!'),\n});\n\nconst EditPrinter = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Printer' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Title',\n                      label: 'Title',\n                      onBlur: handleBlur,\n                      value: values.Title,\n                      onChange: handleChange,\n                      helperText: touched.Title && errors.Title,\n                      error: Boolean(errors.Title && touched.Title),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Profile',\n                      label: 'Profile',\n                      value: values.Profile,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Profile'),\n                      helperText: touched.Profile && errors.Profile,\n                      error: Boolean(errors.Profile && touched.Profile),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Charactersperline',\n                      label: 'Characters per line',\n                      onBlur: handleBlur,\n                      value: values.Charactersperline,\n                      onChange: handleChange,\n                      helperText: touched.Charactersperline && errors.Charactersperline,\n                      error: Boolean(errors.Charactersperline && touched.Charactersperline),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'IPAddress',\n                      label: 'IP Address',\n                      onBlur: handleBlur,\n                      value: values.IPAddress,\n                      onChange: handleChange,\n                      helperText: touched.IPAddress && errors.IPAddress,\n                      error: Boolean(errors.IPAddress && touched.IPAddress),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'port',\n                      label: 'Port',\n                      onBlur: handleBlur,\n                      value: values.port,\n                      onChange: handleChange,\n                      helperText: touched.port && errors.port,\n                      error: Boolean(errors.port && touched.port),\n                    }}\n                  /> \n                        {/* <span>Most printers are open on port <b>9100</b></span> */}\n               \n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                edit Printer\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditPrinter;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCustomerGroups.js",["2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317","2318","2319"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { toast, ToastContainer } from 'react-toastify';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n\n  { id: 'Percentage', label: 'Percentage', alignRight: false },\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\n\n    let ConsumerGroups =[\n      {\"id\":\"1\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n      {\"id\":\"2\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n      {\"id\":\"3\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n      {\"id\":\"4\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n      {\"id\":\"5\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n      {\"id\":\"6\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n    ]\n\n\n\n    const showtoast =()=>{\n      toast.success('Delete Successfully!', {\n        position: toast.POSITION.TOP_CENTER\n    });\n    }\n\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListCustomerGroups(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigatetoedit= (index) => {\n  // 👇️ navigate to /EditCustomerGroups\n  navigate(`/Settings/CustomerGroups/EditCustomerGroups/${index}`);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n               {\n                ConsumerGroups.map((item,index)=>{\n                  return(\n                    <TableRow>\n                  <TableCell >\n                    <Checkbox/>\n                  </TableCell>\n                 \n             \n                  <TableCell>\n                    {item.Name}\n                  </TableCell>\n                  <TableCell>\n                  {item.Percentage}\n                  </TableCell>\n                  \n                  \n                  <TableCell>\n                    <Delete onClick ={showtoast}/>\n                    <Edit onClick ={()=>navigatetoedit(item.id)}/>\n                  </TableCell>\n                 </TableRow>\n\n\n                  )\n                })\n               }\n\n              \n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListCustomerGroups;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCustomerGroups.js",["2320","2321","2322","2323","2324","2325","2326","2327","2328","2329","2330"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n  Currency_Name: '',\n  Symbol: '',\n  Exchange_Rate: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Currency_Code: Yup.string()\n    .min(3, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n        \n   Currency_Name: Yup.string()\n    .min(3, 'Currency Name must be 3 character length')\n    .required('Currency Name per line is required!'),\n\n\n\n});\n\n\n\n\n\n\n\nconst EditCustomerGroups = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Customer Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Group Name',\n                      label: 'Group_Name',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Group_Name && errors.Group_Name,\n                      error: Boolean(errors.Group_Name && touched.Group_Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Group_Percentage',\n                      label: 'Group Percentage (without % sign)',\n                      value: values.Group_Percentage,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Group_Percentage && errors.Group_Percentage,\n                      error: Boolean(errors.Group_Percentage && touched.Group_Percentage),\n                    }}\n                  />\n                </Grid>\n              \n              \n           \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Customer Group\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditCustomerGroups;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditExpenseCategories.js",["2331","2332","2333","2334","2335","2336","2337","2338","2339","2340","2341"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Category_Code: '',\n  Category_Name :'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n    Category_Code: Yup.string()\n    \n    .required('Category Code is required!'),\n    Category_Name: Yup.string()\n    // .min(6, 'Category Name must be 3 character length')\n    .required('Category Name is required!'),\n\n\n\n\n\n});\n\n\n\n\n\n\n\nconst EditExpenseCategories = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'edit Expense Categories' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_code',\n                      label: 'Category code',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Category_code && errors.Category_code,\n                      error: Boolean(errors.Category_code && touched.Category_code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Name',\n                      label: 'Category Name',\n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                      onChange: handleChange,\n                      helperText: touched.Category_Name && errors.Category_Name,\n                      error: Boolean(errors.Category_Name && touched.Category_Name),\n                    }}\n                  />\n                </Grid>\n                </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Expense Catergory\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditExpenseCategories;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditUnits.js",["2342","2343","2344","2345","2346","2347","2348","2349","2350","2351"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Unit_Code: '',\n  Unit_Name: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Unit_Code: Yup.string()\n \n    .required('Unit Code is required!'),\n\n    Unit_Name: Yup.string()\n  \n    .required('Unit Name per line is required!'),\n\n  \n});\n\nconst EditUnits = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Unit' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Unit_Code',\n                      label: 'Unit Code',\n                      onBlur: handleBlur,\n                      value: values.Unit_Code,\n                      onChange: handleChange,\n                      helperText: touched.Unit_Code && errors.Unit_Code,\n                      error: Boolean(errors.Unit_Code && touched.Unit_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Unit_Name',\n                      label: 'Unit Name',\n                      onBlur: handleBlur,\n                      value: values.Unit_Name,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Unit_Name && errors.Unit_Name,\n                      error: Boolean(errors.Unit_Name && touched.Unit_Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Base_Unit',\n                      label: 'Base Unit',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Base_Unit'),\n                      helperText: touched.Base_Unit && errors.Base_Unit,\n                      error: Boolean(errors.Base_Unit && touched.Base_Unit),\n                    }}\n                  />\n                </Grid>\n                \n               \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit unit\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditUnits;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditTaxRates.js",["2352","2353","2354","2355","2356","2357","2358","2359","2360","2361"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  Code: '',\n  Rate: '',\n  Type: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(2, 'Name must be 2 character length')\n    .max(2, 'Name must be 10 character length')\n    .required('Name is required!'),\n\n    Code: Yup.string(),\n    \n    Rate: Yup.string()\n   \n    .required('Rate per line is required!'),\n\n    Type: Yup.string()\n   \n    .required('Type per line is required!'),\n\n\n});\n\nconst EditTaxRates = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Tax Rate' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew                    \n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Code',\n                      label: 'Code',\n                      onBlur: handleBlur,\n                      value: values.Code,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Code && errors.Code,\n                      error: Boolean(errors.Code && touched.Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Rate',\n                      label: 'Rate',\n                      value: values.Rate,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Rate && errors.Rate,\n                      error: Boolean(errors.Rate && touched.Rate),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n             \n              \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Tax Rate\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditTaxRates;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditVariants.js",["2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  \n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n\n   \n        \n    \n\n  \n  \n\n    \n});\n\nconst EditVariants = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Variant' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n               \n               \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Variant\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditVariants;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditWareHouses.js",["2373","2374","2375","2376","2377","2378","2379","2380"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize, Typography } from '@mui/material';\nimport { min } from 'lodash';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport Label from '../material-kit/tables/Label';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n \n  code: '',\n  Name: '',\n  Price_Group: '',\n  Phone: '',\n  Email: '',\n  Address:'',\n  Warehouse_Map:'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  code: Yup.string()\n    .min(6, 'code must be 6 character length')\n    .required('code is required!'),\n    Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n  \n    Phone: Yup.string()\n    .matches(\n      /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\n      \"Phone number is not valid\"\n    )\n    .max(10,\"Phone number is not valid\"),\n    \n\n\n    Email: Yup.string()\n          .email(),\n \n    \n});\n\nconst EditWareHouses = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit WareHouse' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n               \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'code',\n                      label: 'code',\n                      onBlur: handleBlur,\n                      value: values.code,\n                    \n                      onChange: handleChange,\n                      helperText: touched.code && errors.code,\n                      error: Boolean(errors.code && touched.code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n             \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'Email',\n                      name: 'Email',\n                      label: 'Email',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n              \n                <Grid item xs={12}>\n                  <Label> Address</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  {/* <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category Image',\n                      label: 'Category_Image',\n                      onBlur: handleBlur,\n                      value: values.Category_Image,\n                      onChange: handleChange,\n                      helperText: touched.Category_Image && errors.Category_Image,\n                      error: Boolean(errors.Category_Image && touched.Category_Image),\n                    }}\n                    \n                  />  */}\n                    <Singleimage\n                    \n                        />\n\n                     <Typography className={classes.textnew2}>Warehouse Map</Typography>\n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit WareHouse\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditWareHouses;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPriceGroups.js",["2381","2382","2383","2384","2385","2386","2387","2388","2389","2390","2391"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Group_Name: Yup.string()\n    .min(6, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n\n\n\n});\n\n\n\n\n\n\n\nconst EditPriceGroups = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Price Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Group_Name *',\n                      label: 'Group Name',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Group_Name && errors.Group_Name,\n                      error: Boolean(errors.Group_Name && touched.Group_Name),\n                    }}\n                  />\n                </Grid>\n                </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Price Group\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditPriceGroups;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/GroupProductPrices.js",["2392","2393","2394","2395","2396","2397","2398","2399","2400","2401","2402","2403","2404","2405","2406","2407","2408","2409","2410","2411","2412","2413","2414","2415","2416","2417","2418","2419","2420","2421","2422","2423","2424","2425","2426","2427","2428","2429"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, styled } from '@mui/system';\n\n\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  \n  Typography,\n  TableContainer,\n  TablePagination,\n  Input,\n  InputBase,\n  InputLabel,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../material-kit/tables/Label';\nimport Scrollbar from '../material-kit/tables/Scrollbar';\nimport USERLIST from '../material-kit/tables/User';\nimport SearchNotFound from '../material-kit/tables/SearchNotFound';\nimport UserListHead from '../material-kit/tables/UserListHead';\nimport UserListToolbar from '../material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Breadcrumb, SimpleCard } from 'app/components';\n// import { Box } from '@mui/system';\n\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Product code', label: 'Product code', alignRight: false },\n\n  { id: 'Product Name', label: 'Product Name', alignRight: false },\n  { id: 'Price', label: 'Price', alignRight: false },\n  { id: 'Update', label: 'Update', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n   let grpproduct=[\n    {\"id\":\"1\",\"Product_code\":\"474865\",\"Product_Name\":\"i phone max pro 13\",\"Price\":\"brand123\"},\n    {\"id\":\"2\",\"Product_code\":\"474865\",\"Product_Name\":\"i phone max pro 13\",\"Price\":\"brand123\"},\n    {\"id\":\"3\",\"Product_code\":\"474865\",\"Product_Name\":\"i phone max pro 13\",\"Price\":\"brand123\"},\n    {\"id\":\"4\",\"Product_code\":\"474865\",\"Product_Name\":\"i phone max pro 13\",\"Price\":\"brand123\"},\n   \n   ]\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction GroupProductPrices(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Group Product Price' }]}\n        />\n      </Box>\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n\n                {\n                  grpproduct.map((item,index)=>{\n                    return(\n                      <TableRow>\n                  <TableCell >\n                    <Checkbox/>\n                  </TableCell>\n                  <TableCell>\n                    {item.Product_code}\n                  </TableCell>\n                  <TableCell>\n                    {item.Product_Name}\n                  </TableCell>\n                  <TableCell>\n                    <Input/>\n                  </TableCell>\n                 \n                  \n                  \n                  <TableCell>\n                    <Checkbox/>\n                  </TableCell>\n                 </TableRow>\n\n\n                    )\n                  })\n                }\n\n\n             \n\n\n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n     \n    </Container>\n    // </Page>\n  );\n}\nexport default GroupProductPrices;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/PrintBarcode.js",["2430","2431","2432","2433","2434","2435","2436","2437","2438","2439"],{"ruleId":"2440","replacedBy":"2441"},{"ruleId":"2442","replacedBy":"2443"},{"ruleId":"2444","severity":1,"message":"2445","line":11,"column":7,"nodeType":"2446","messageId":"2447","endLine":11,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2448","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2449","line":2,"column":10,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2450","line":4,"column":22,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2451","line":8,"column":3,"nodeType":"2446","messageId":"2447","endLine":8,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2452","line":46,"column":10,"nodeType":"2446","messageId":"2447","endLine":46,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":46,"column":17,"nodeType":"2446","messageId":"2447","endLine":46,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":47,"column":11,"nodeType":"2446","messageId":"2447","endLine":47,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":48,"column":9,"nodeType":"2446","messageId":"2447","endLine":48,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":49,"column":19,"nodeType":"2446","messageId":"2447","endLine":49,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":50,"column":10,"nodeType":"2446","messageId":"2447","endLine":50,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":50,"column":16,"nodeType":"2446","messageId":"2447","endLine":50,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2452","line":62,"column":10,"nodeType":"2446","messageId":"2447","endLine":62,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":62,"column":17,"nodeType":"2446","messageId":"2447","endLine":62,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":63,"column":11,"nodeType":"2446","messageId":"2447","endLine":63,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":64,"column":9,"nodeType":"2446","messageId":"2447","endLine":64,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":65,"column":19,"nodeType":"2446","messageId":"2447","endLine":65,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":66,"column":10,"nodeType":"2446","messageId":"2447","endLine":66,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":66,"column":16,"nodeType":"2446","messageId":"2447","endLine":66,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2459","line":73,"column":10,"nodeType":"2446","messageId":"2447","endLine":73,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2460","line":75,"column":9,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2460","line":36,"column":7,"nodeType":"2446","messageId":"2447","endLine":36,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":76,"column":10,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":76,"column":17,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":77,"column":11,"nodeType":"2446","messageId":"2447","endLine":77,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":78,"column":9,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":79,"column":19,"nodeType":"2446","messageId":"2447","endLine":79,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2460","line":41,"column":7,"nodeType":"2446","messageId":"2447","endLine":41,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":100,"column":10,"nodeType":"2446","messageId":"2447","endLine":100,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":100,"column":17,"nodeType":"2446","messageId":"2447","endLine":100,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":101,"column":11,"nodeType":"2446","messageId":"2447","endLine":101,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":102,"column":9,"nodeType":"2446","messageId":"2447","endLine":102,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":103,"column":19,"nodeType":"2446","messageId":"2447","endLine":103,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":104,"column":10,"nodeType":"2446","messageId":"2447","endLine":104,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":104,"column":16,"nodeType":"2446","messageId":"2447","endLine":104,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2460","line":44,"column":7,"nodeType":"2446","messageId":"2447","endLine":44,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":173,"column":10,"nodeType":"2446","messageId":"2447","endLine":173,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":173,"column":17,"nodeType":"2446","messageId":"2447","endLine":173,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":174,"column":11,"nodeType":"2446","messageId":"2447","endLine":174,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":175,"column":9,"nodeType":"2446","messageId":"2447","endLine":175,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":176,"column":19,"nodeType":"2446","messageId":"2447","endLine":176,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2448","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2461","line":38,"column":9,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2462","line":39,"column":10,"nodeType":"2446","messageId":"2447","endLine":39,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2463","line":5,"column":10,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2450","line":5,"column":22,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2464","line":9,"column":8,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2465","line":12,"column":8,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2466","line":32,"column":7,"nodeType":"2446","messageId":"2447","endLine":32,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":9,"column":3,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":11,"column":3,"nodeType":"2446","messageId":"2447","endLine":11,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":12,"column":3,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2475","line":13,"column":3,"nodeType":"2446","messageId":"2447","endLine":13,"endColumn":11},{"ruleId":"2444","severity":1,"message":"2476","line":18,"column":3,"nodeType":"2446","messageId":"2447","endLine":18,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":22,"column":8,"nodeType":"2446","messageId":"2447","endLine":22,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":25,"column":8,"nodeType":"2446","messageId":"2447","endLine":25,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2478","line":27,"column":8,"nodeType":"2446","messageId":"2447","endLine":27,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2479","line":84,"column":10,"nodeType":"2446","messageId":"2447","endLine":84,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":84,"column":17,"nodeType":"2446","messageId":"2447","endLine":84,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":120,"column":9,"nodeType":"2446","messageId":"2447","endLine":120,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":197,"column":21,"nodeType":"2446","messageId":"2447","endLine":197,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2483","line":208,"column":21,"nodeType":"2446","messageId":"2447","endLine":208,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":210,"column":25,"nodeType":"2446","messageId":"2447","endLine":210,"endColumn":39},{"ruleId":"2485","severity":1,"message":"2486","line":26,"column":3,"nodeType":"2487","messageId":"2488","endLine":26,"endColumn":12},{"ruleId":"2444","severity":1,"message":"2489","line":86,"column":9,"nodeType":"2446","messageId":"2447","endLine":86,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2490","line":3,"column":8,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2491","line":4,"column":8,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":30},{"ruleId":"2444","severity":1,"message":"2463","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2450","line":3,"column":22,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2466","line":7,"column":7,"nodeType":"2446","messageId":"2447","endLine":7,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2467","line":2,"column":10,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2448","line":2,"column":18,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2492","line":14,"column":8,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2493","line":87,"column":7,"nodeType":"2446","messageId":"2447","endLine":87,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2494","line":100,"column":7,"nodeType":"2446","messageId":"2447","endLine":100,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2495","line":115,"column":7,"nodeType":"2446","messageId":"2447","endLine":115,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2496","line":121,"column":7,"nodeType":"2446","messageId":"2447","endLine":121,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2497","line":130,"column":10,"nodeType":"2446","messageId":"2447","endLine":130,"endColumn":24},{"ruleId":"2444","severity":1,"message":"2498","line":130,"column":26,"nodeType":"2446","messageId":"2447","endLine":130,"endColumn":43},{"ruleId":"2444","severity":1,"message":"2499","line":133,"column":10,"nodeType":"2446","messageId":"2447","endLine":133,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2500","line":137,"column":9,"nodeType":"2446","messageId":"2447","endLine":137,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2501","line":144,"column":9,"nodeType":"2446","messageId":"2447","endLine":144,"endColumn":18},{"ruleId":"2502","severity":1,"message":"2503","line":277,"column":13,"nodeType":"2504","endLine":277,"endColumn":57},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2448","line":1,"column":18,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2505","line":9,"column":10,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2448","line":1,"column":18,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2506","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2507","line":48,"column":9,"nodeType":"2446","messageId":"2447","endLine":48,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2508","line":2,"column":10,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":18},{"ruleId":"2502","severity":1,"message":"2503","line":31,"column":9,"nodeType":"2504","endLine":31,"endColumn":57},{"ruleId":"2444","severity":1,"message":"2509","line":117,"column":9,"nodeType":"2446","messageId":"2447","endLine":117,"endColumn":18},{"ruleId":"2510","severity":1,"message":"2511","line":3,"column":1,"nodeType":"2512","endLine":180,"endColumn":3},{"ruleId":"2444","severity":1,"message":"2509","line":83,"column":9,"nodeType":"2446","messageId":"2447","endLine":83,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2513","line":2,"column":18,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2514","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2515","line":3,"column":16,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2516","line":2,"column":10,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2517","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2518","line":7,"column":8,"nodeType":"2446","messageId":"2447","endLine":7,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2519","line":9,"column":8,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2520","line":11,"column":7,"nodeType":"2446","messageId":"2447","endLine":11,"endColumn":12},{"ruleId":"2444","severity":1,"message":"2521","line":30,"column":9,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2522","line":31,"column":10,"nodeType":"2446","messageId":"2447","endLine":31,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2460","line":41,"column":9,"nodeType":"2446","messageId":"2447","endLine":41,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2523","line":43,"column":9,"nodeType":"2446","messageId":"2447","endLine":43,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2472","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2524","line":6,"column":8,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2525","line":7,"column":8,"nodeType":"2446","messageId":"2447","endLine":7,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2526","line":8,"column":8,"nodeType":"2446","messageId":"2447","endLine":8,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2527","line":10,"column":8,"nodeType":"2446","messageId":"2447","endLine":10,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2528","line":12,"column":8,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2529","line":33,"column":7,"nodeType":"2446","messageId":"2447","endLine":33,"endColumn":12},{"ruleId":"2444","severity":1,"message":"2530","line":40,"column":7,"nodeType":"2446","messageId":"2447","endLine":40,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2531","line":45,"column":7,"nodeType":"2446","messageId":"2447","endLine":45,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2532","line":113,"column":11,"nodeType":"2446","messageId":"2447","endLine":113,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2533","line":123,"column":9,"nodeType":"2446","messageId":"2447","endLine":123,"endColumn":27},{"ruleId":"2444","severity":1,"message":"2506","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2515","line":1,"column":15,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2463","line":2,"column":10,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2450","line":2,"column":22,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2461","line":14,"column":11,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2448","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":25},{"ruleId":"2534","severity":1,"message":"2535","line":119,"column":19,"nodeType":"2504","endLine":119,"endColumn":83},{"ruleId":"2444","severity":1,"message":"2452","line":55,"column":10,"nodeType":"2446","messageId":"2447","endLine":55,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2460","line":56,"column":9,"nodeType":"2446","messageId":"2447","endLine":56,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2536","line":59,"column":9,"nodeType":"2446","messageId":"2447","endLine":59,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2450","line":3,"column":22,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2537","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2474","line":8,"column":10,"nodeType":"2446","messageId":"2447","endLine":8,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2538","line":12,"column":8,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2539","line":14,"column":8,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2540","line":25,"column":10,"nodeType":"2446","messageId":"2447","endLine":25,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2541","line":27,"column":8,"nodeType":"2446","messageId":"2447","endLine":27,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2542","line":28,"column":8,"nodeType":"2446","messageId":"2447","endLine":28,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2513","line":30,"column":33,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":38},{"ruleId":"2444","severity":1,"message":"2460","line":102,"column":7,"nodeType":"2446","messageId":"2447","endLine":102,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2543","line":189,"column":9,"nodeType":"2446","messageId":"2447","endLine":189,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2454","line":192,"column":11,"nodeType":"2446","messageId":"2447","endLine":192,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":193,"column":9,"nodeType":"2446","messageId":"2447","endLine":193,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":194,"column":19,"nodeType":"2446","messageId":"2447","endLine":194,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":195,"column":10,"nodeType":"2446","messageId":"2447","endLine":195,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":195,"column":16,"nodeType":"2446","messageId":"2447","endLine":195,"endColumn":23},{"ruleId":"2534","severity":1,"message":"2535","line":251,"column":19,"nodeType":"2504","endLine":251,"endColumn":80},{"ruleId":"2444","severity":1,"message":"2460","line":46,"column":7,"nodeType":"2446","messageId":"2447","endLine":46,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":70,"column":10,"nodeType":"2446","messageId":"2447","endLine":70,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":70,"column":17,"nodeType":"2446","messageId":"2447","endLine":70,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":71,"column":11,"nodeType":"2446","messageId":"2447","endLine":71,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":72,"column":9,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":73,"column":19,"nodeType":"2446","messageId":"2447","endLine":73,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":74,"column":10,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":74,"column":16,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2460","line":68,"column":9,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2452","line":72,"column":10,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":72,"column":17,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":73,"column":11,"nodeType":"2446","messageId":"2447","endLine":73,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":74,"column":9,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":75,"column":19,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2454","line":57,"column":11,"nodeType":"2446","messageId":"2447","endLine":57,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":58,"column":9,"nodeType":"2446","messageId":"2447","endLine":58,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":59,"column":19,"nodeType":"2446","messageId":"2447","endLine":59,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":60,"column":10,"nodeType":"2446","messageId":"2447","endLine":60,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":60,"column":16,"nodeType":"2446","messageId":"2447","endLine":60,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2544","line":2,"column":8,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":49,"column":7,"nodeType":"2446","messageId":"2447","endLine":49,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2454","line":100,"column":11,"nodeType":"2446","messageId":"2447","endLine":100,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":101,"column":9,"nodeType":"2446","messageId":"2447","endLine":101,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":102,"column":19,"nodeType":"2446","messageId":"2447","endLine":102,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2544","line":24,"column":8,"nodeType":"2446","messageId":"2447","endLine":24,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":162,"column":9,"nodeType":"2446","messageId":"2447","endLine":162,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2536","line":165,"column":9,"nodeType":"2446","messageId":"2447","endLine":165,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2545","line":166,"column":9,"nodeType":"2446","messageId":"2447","endLine":166,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2452","line":167,"column":10,"nodeType":"2446","messageId":"2447","endLine":167,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":167,"column":17,"nodeType":"2446","messageId":"2447","endLine":167,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":168,"column":11,"nodeType":"2446","messageId":"2447","endLine":168,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":169,"column":9,"nodeType":"2446","messageId":"2447","endLine":169,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":170,"column":19,"nodeType":"2446","messageId":"2447","endLine":170,"endColumn":29},{"ruleId":"2546","severity":1,"message":"2547","line":194,"column":6,"nodeType":"2548","endLine":194,"endColumn":8,"suggestions":"2549"},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2460","line":106,"column":7,"nodeType":"2446","messageId":"2447","endLine":106,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2454","line":112,"column":11,"nodeType":"2446","messageId":"2447","endLine":112,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":113,"column":9,"nodeType":"2446","messageId":"2447","endLine":113,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":114,"column":19,"nodeType":"2446","messageId":"2447","endLine":114,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2550","line":8,"column":8,"nodeType":"2446","messageId":"2447","endLine":8,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2551","line":11,"column":8,"nodeType":"2446","messageId":"2447","endLine":11,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2460","line":106,"column":7,"nodeType":"2446","messageId":"2447","endLine":106,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2454","line":112,"column":11,"nodeType":"2446","messageId":"2447","endLine":112,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":113,"column":9,"nodeType":"2446","messageId":"2447","endLine":113,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":114,"column":19,"nodeType":"2446","messageId":"2447","endLine":114,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2460","line":93,"column":7,"nodeType":"2446","messageId":"2447","endLine":93,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2454","line":99,"column":11,"nodeType":"2446","messageId":"2447","endLine":99,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":100,"column":9,"nodeType":"2446","messageId":"2447","endLine":100,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":101,"column":19,"nodeType":"2446","messageId":"2447","endLine":101,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2460","line":84,"column":7,"nodeType":"2446","messageId":"2447","endLine":84,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2552","line":89,"column":10,"nodeType":"2446","messageId":"2447","endLine":89,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2553","line":89,"column":16,"nodeType":"2446","messageId":"2447","endLine":89,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2454","line":91,"column":11,"nodeType":"2446","messageId":"2447","endLine":91,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":92,"column":9,"nodeType":"2446","messageId":"2447","endLine":92,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":93,"column":19,"nodeType":"2446","messageId":"2447","endLine":93,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2460","line":86,"column":7,"nodeType":"2446","messageId":"2447","endLine":86,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2454","line":93,"column":11,"nodeType":"2446","messageId":"2447","endLine":93,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":94,"column":9,"nodeType":"2446","messageId":"2447","endLine":94,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":95,"column":19,"nodeType":"2446","messageId":"2447","endLine":95,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2460","line":37,"column":7,"nodeType":"2446","messageId":"2447","endLine":37,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2454","line":68,"column":11,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":69,"column":9,"nodeType":"2446","messageId":"2447","endLine":69,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":70,"column":19,"nodeType":"2446","messageId":"2447","endLine":70,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2514","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2515","line":3,"column":16,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2513","line":2,"column":18,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2554","line":12,"column":8,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2555","line":14,"column":8,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2556","line":33,"column":7,"nodeType":"2446","messageId":"2447","endLine":33,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2474","line":4,"column":3,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2475","line":5,"column":3,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":11},{"ruleId":"2444","severity":1,"message":"2557","line":6,"column":3,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2514","line":7,"column":3,"nodeType":"2446","messageId":"2447","endLine":7,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2468","line":8,"column":3,"nodeType":"2446","messageId":"2447","endLine":8,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2558","line":9,"column":3,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":8},{"ruleId":"2444","severity":1,"message":"2559","line":10,"column":3,"nodeType":"2446","messageId":"2447","endLine":10,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2515","line":11,"column":3,"nodeType":"2446","messageId":"2447","endLine":11,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2473","line":2,"column":3,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2472","line":4,"column":3,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2560","line":7,"column":3,"nodeType":"2446","messageId":"2447","endLine":7,"endColumn":11},{"ruleId":"2444","severity":1,"message":"2517","line":8,"column":3,"nodeType":"2446","messageId":"2447","endLine":8,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2561","line":20,"column":7,"nodeType":"2446","messageId":"2447","endLine":20,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2529","line":29,"column":7,"nodeType":"2446","messageId":"2447","endLine":29,"endColumn":12},{"ruleId":"2444","severity":1,"message":"2514","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2515","line":3,"column":16,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2562","line":10,"column":10,"nodeType":"2446","messageId":"2447","endLine":10,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2563","line":66,"column":10,"nodeType":"2446","messageId":"2447","endLine":66,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2564","line":66,"column":19,"nodeType":"2446","messageId":"2447","endLine":66,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2461","line":68,"column":9,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2460","line":69,"column":9,"nodeType":"2446","messageId":"2447","endLine":69,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2536","line":72,"column":9,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2545","line":73,"column":9,"nodeType":"2446","messageId":"2447","endLine":73,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2452","line":74,"column":10,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":74,"column":17,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":75,"column":11,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":76,"column":9,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2565","line":77,"column":10,"nodeType":"2446","messageId":"2447","endLine":77,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":77,"column":19,"nodeType":"2446","messageId":"2447","endLine":77,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":78,"column":10,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":78,"column":16,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2506","line":2,"column":10,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2554","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2464","line":15,"column":8,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2566","line":51,"column":10,"nodeType":"2446","messageId":"2447","endLine":51,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2567","line":53,"column":18,"nodeType":"2446","messageId":"2447","endLine":53,"endColumn":27},{"ruleId":"2444","severity":1,"message":"2568","line":79,"column":9,"nodeType":"2446","messageId":"2447","endLine":79,"endColumn":16},{"ruleId":"2569","severity":1,"message":"2570","line":103,"column":15,"nodeType":"2571","messageId":"2488","endLine":103,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2477","line":4,"column":8,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":17,"column":8,"nodeType":"2446","messageId":"2447","endLine":17,"endColumn":13},{"ruleId":"2569","severity":1,"message":"2570","line":76,"column":15,"nodeType":"2571","messageId":"2488","endLine":76,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2516","line":2,"column":10,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2517","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2518","line":7,"column":8,"nodeType":"2446","messageId":"2447","endLine":7,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2519","line":9,"column":8,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2520","line":11,"column":7,"nodeType":"2446","messageId":"2447","endLine":11,"endColumn":12},{"ruleId":"2444","severity":1,"message":"2521","line":30,"column":9,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2522","line":31,"column":10,"nodeType":"2446","messageId":"2447","endLine":31,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2460","line":41,"column":9,"nodeType":"2446","messageId":"2447","endLine":41,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2506","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2572","line":1,"column":23,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2468","line":1,"column":28,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2554","line":1,"column":34,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":44},{"ruleId":"2444","severity":1,"message":"2515","line":1,"column":46,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":52},{"ruleId":"2444","severity":1,"message":"2573","line":9,"column":7,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2516","line":2,"column":10,"nodeType":"2446","messageId":"2447","endLine":2,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2520","line":9,"column":7,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":12},{"ruleId":"2444","severity":1,"message":"2521","line":28,"column":9,"nodeType":"2446","messageId":"2447","endLine":28,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2522","line":29,"column":10,"nodeType":"2446","messageId":"2447","endLine":29,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2566","line":51,"column":10,"nodeType":"2446","messageId":"2447","endLine":51,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2567","line":53,"column":18,"nodeType":"2446","messageId":"2447","endLine":53,"endColumn":27},{"ruleId":"2444","severity":1,"message":"2568","line":79,"column":9,"nodeType":"2446","messageId":"2447","endLine":79,"endColumn":16},{"ruleId":"2569","severity":1,"message":"2570","line":103,"column":15,"nodeType":"2571","messageId":"2488","endLine":103,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2574","line":4,"column":8,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":21},{"ruleId":"2502","severity":1,"message":"2503","line":32,"column":13,"nodeType":"2504","endLine":35,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2575","line":1,"column":24,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2460","line":94,"column":7,"nodeType":"2446","messageId":"2447","endLine":94,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2454","line":100,"column":11,"nodeType":"2446","messageId":"2447","endLine":100,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":101,"column":9,"nodeType":"2446","messageId":"2447","endLine":101,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":102,"column":19,"nodeType":"2446","messageId":"2447","endLine":102,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2460","line":94,"column":7,"nodeType":"2446","messageId":"2447","endLine":94,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2454","line":100,"column":11,"nodeType":"2446","messageId":"2447","endLine":100,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":101,"column":9,"nodeType":"2446","messageId":"2447","endLine":101,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":102,"column":19,"nodeType":"2446","messageId":"2447","endLine":102,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2460","line":34,"column":7,"nodeType":"2446","messageId":"2447","endLine":34,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":123,"column":10,"nodeType":"2446","messageId":"2447","endLine":123,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":123,"column":17,"nodeType":"2446","messageId":"2447","endLine":123,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":124,"column":11,"nodeType":"2446","messageId":"2447","endLine":124,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":125,"column":9,"nodeType":"2446","messageId":"2447","endLine":125,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":126,"column":19,"nodeType":"2446","messageId":"2447","endLine":126,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":127,"column":10,"nodeType":"2446","messageId":"2447","endLine":127,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":127,"column":16,"nodeType":"2446","messageId":"2447","endLine":127,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2460","line":34,"column":7,"nodeType":"2446","messageId":"2447","endLine":34,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":133,"column":10,"nodeType":"2446","messageId":"2447","endLine":133,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":133,"column":17,"nodeType":"2446","messageId":"2447","endLine":133,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":134,"column":11,"nodeType":"2446","messageId":"2447","endLine":134,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":135,"column":9,"nodeType":"2446","messageId":"2447","endLine":135,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":136,"column":19,"nodeType":"2446","messageId":"2447","endLine":136,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":137,"column":10,"nodeType":"2446","messageId":"2447","endLine":137,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":137,"column":16,"nodeType":"2446","messageId":"2447","endLine":137,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2460","line":34,"column":7,"nodeType":"2446","messageId":"2447","endLine":34,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":133,"column":10,"nodeType":"2446","messageId":"2447","endLine":133,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":133,"column":17,"nodeType":"2446","messageId":"2447","endLine":133,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":134,"column":11,"nodeType":"2446","messageId":"2447","endLine":134,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":135,"column":9,"nodeType":"2446","messageId":"2447","endLine":135,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":136,"column":19,"nodeType":"2446","messageId":"2447","endLine":136,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":137,"column":10,"nodeType":"2446","messageId":"2447","endLine":137,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":137,"column":16,"nodeType":"2446","messageId":"2447","endLine":137,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2460","line":35,"column":7,"nodeType":"2446","messageId":"2447","endLine":35,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2454","line":102,"column":11,"nodeType":"2446","messageId":"2447","endLine":102,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":103,"column":9,"nodeType":"2446","messageId":"2447","endLine":103,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":104,"column":19,"nodeType":"2446","messageId":"2447","endLine":104,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":105,"column":10,"nodeType":"2446","messageId":"2447","endLine":105,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":105,"column":16,"nodeType":"2446","messageId":"2447","endLine":105,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2449","line":1,"column":10,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2576","line":11,"column":8,"nodeType":"2446","messageId":"2447","endLine":11,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2577","line":13,"column":8,"nodeType":"2446","messageId":"2447","endLine":13,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2578","line":25,"column":7,"nodeType":"2446","messageId":"2447","endLine":25,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2477","line":4,"column":8,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":34,"column":7,"nodeType":"2446","messageId":"2447","endLine":34,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":85,"column":10,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":85,"column":17,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":86,"column":11,"nodeType":"2446","messageId":"2447","endLine":86,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":87,"column":9,"nodeType":"2446","messageId":"2447","endLine":87,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":88,"column":19,"nodeType":"2446","messageId":"2447","endLine":88,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":89,"column":10,"nodeType":"2446","messageId":"2447","endLine":89,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":89,"column":16,"nodeType":"2446","messageId":"2447","endLine":89,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2474","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2579","line":17,"column":10,"nodeType":"2446","messageId":"2447","endLine":17,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2580","line":18,"column":8,"nodeType":"2446","messageId":"2447","endLine":18,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2460","line":45,"column":7,"nodeType":"2446","messageId":"2447","endLine":45,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2454","line":226,"column":11,"nodeType":"2446","messageId":"2447","endLine":226,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":227,"column":9,"nodeType":"2446","messageId":"2447","endLine":227,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":228,"column":19,"nodeType":"2446","messageId":"2447","endLine":228,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":229,"column":10,"nodeType":"2446","messageId":"2447","endLine":229,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":229,"column":16,"nodeType":"2446","messageId":"2447","endLine":229,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2460","line":42,"column":7,"nodeType":"2446","messageId":"2447","endLine":42,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":355,"column":10,"nodeType":"2446","messageId":"2447","endLine":355,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":355,"column":17,"nodeType":"2446","messageId":"2447","endLine":355,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":356,"column":11,"nodeType":"2446","messageId":"2447","endLine":356,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":357,"column":9,"nodeType":"2446","messageId":"2447","endLine":357,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":358,"column":19,"nodeType":"2446","messageId":"2447","endLine":358,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":359,"column":10,"nodeType":"2446","messageId":"2447","endLine":359,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":359,"column":16,"nodeType":"2446","messageId":"2447","endLine":359,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":81,"column":10,"nodeType":"2446","messageId":"2447","endLine":81,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":81,"column":17,"nodeType":"2446","messageId":"2447","endLine":81,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":82,"column":11,"nodeType":"2446","messageId":"2447","endLine":82,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":83,"column":9,"nodeType":"2446","messageId":"2447","endLine":83,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":84,"column":19,"nodeType":"2446","messageId":"2447","endLine":84,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":85,"column":10,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":85,"column":16,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":75,"column":10,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":75,"column":17,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":76,"column":11,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":77,"column":9,"nodeType":"2446","messageId":"2447","endLine":77,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":78,"column":19,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":79,"column":10,"nodeType":"2446","messageId":"2447","endLine":79,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":79,"column":16,"nodeType":"2446","messageId":"2447","endLine":79,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":72,"column":10,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":72,"column":17,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":73,"column":11,"nodeType":"2446","messageId":"2447","endLine":73,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":74,"column":9,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":75,"column":19,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":76,"column":10,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":76,"column":16,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":65,"column":10,"nodeType":"2446","messageId":"2447","endLine":65,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":65,"column":17,"nodeType":"2446","messageId":"2447","endLine":65,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":66,"column":11,"nodeType":"2446","messageId":"2447","endLine":66,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":67,"column":9,"nodeType":"2446","messageId":"2447","endLine":67,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":68,"column":19,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":69,"column":10,"nodeType":"2446","messageId":"2447","endLine":69,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":69,"column":16,"nodeType":"2446","messageId":"2447","endLine":69,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":39,"column":7,"nodeType":"2446","messageId":"2447","endLine":39,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":68,"column":10,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":68,"column":17,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":69,"column":11,"nodeType":"2446","messageId":"2447","endLine":69,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":70,"column":9,"nodeType":"2446","messageId":"2447","endLine":70,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":71,"column":19,"nodeType":"2446","messageId":"2447","endLine":71,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":72,"column":10,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":72,"column":16,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":74,"column":10,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":74,"column":17,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":75,"column":11,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":76,"column":9,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":77,"column":19,"nodeType":"2446","messageId":"2447","endLine":77,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":78,"column":10,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":78,"column":16,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":68,"column":10,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":68,"column":17,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":69,"column":11,"nodeType":"2446","messageId":"2447","endLine":69,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":70,"column":9,"nodeType":"2446","messageId":"2447","endLine":70,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":71,"column":19,"nodeType":"2446","messageId":"2447","endLine":71,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":72,"column":10,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":72,"column":16,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":39,"column":7,"nodeType":"2446","messageId":"2447","endLine":39,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":71,"column":10,"nodeType":"2446","messageId":"2447","endLine":71,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":71,"column":17,"nodeType":"2446","messageId":"2447","endLine":71,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":72,"column":11,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":73,"column":9,"nodeType":"2446","messageId":"2447","endLine":73,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":74,"column":19,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":75,"column":10,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":75,"column":16,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2539","line":13,"column":8,"nodeType":"2446","messageId":"2447","endLine":13,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2476","line":14,"column":10,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2460","line":37,"column":7,"nodeType":"2446","messageId":"2447","endLine":37,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":78,"column":10,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":78,"column":17,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":79,"column":11,"nodeType":"2446","messageId":"2447","endLine":79,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":80,"column":9,"nodeType":"2446","messageId":"2447","endLine":80,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":81,"column":19,"nodeType":"2446","messageId":"2447","endLine":81,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":82,"column":10,"nodeType":"2446","messageId":"2447","endLine":82,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":82,"column":16,"nodeType":"2446","messageId":"2447","endLine":82,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":42,"column":7,"nodeType":"2446","messageId":"2447","endLine":42,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":85,"column":10,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":85,"column":17,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":86,"column":11,"nodeType":"2446","messageId":"2447","endLine":86,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":87,"column":9,"nodeType":"2446","messageId":"2447","endLine":87,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":88,"column":19,"nodeType":"2446","messageId":"2447","endLine":88,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":12,"column":3,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":14,"column":3,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":15,"column":3,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":21,"column":3,"nodeType":"2446","messageId":"2447","endLine":21,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":25,"column":8,"nodeType":"2446","messageId":"2447","endLine":25,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":28,"column":9,"nodeType":"2446","messageId":"2447","endLine":28,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":29,"column":8,"nodeType":"2446","messageId":"2447","endLine":29,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":30,"column":8,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2479","line":116,"column":10,"nodeType":"2446","messageId":"2447","endLine":116,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":116,"column":17,"nodeType":"2446","messageId":"2447","endLine":116,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":152,"column":9,"nodeType":"2446","messageId":"2447","endLine":152,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":258,"column":21,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2585","line":260,"column":21,"nodeType":"2446","messageId":"2447","endLine":260,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2586","line":261,"column":21,"nodeType":"2446","messageId":"2447","endLine":261,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2587","line":262,"column":21,"nodeType":"2446","messageId":"2447","endLine":262,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2588","line":263,"column":21,"nodeType":"2446","messageId":"2447","endLine":263,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":264,"column":21,"nodeType":"2446","messageId":"2447","endLine":264,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2590","line":265,"column":21,"nodeType":"2446","messageId":"2447","endLine":265,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2591","line":266,"column":21,"nodeType":"2446","messageId":"2447","endLine":266,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2592","line":267,"column":21,"nodeType":"2446","messageId":"2447","endLine":267,"endColumn":35},{"ruleId":"2444","severity":1,"message":"2593","line":268,"column":21,"nodeType":"2446","messageId":"2447","endLine":268,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2483","line":269,"column":21,"nodeType":"2446","messageId":"2447","endLine":269,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":271,"column":25,"nodeType":"2446","messageId":"2447","endLine":271,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":13,"column":3,"nodeType":"2446","messageId":"2447","endLine":13,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":15,"column":3,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":16,"column":3,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":22,"column":3,"nodeType":"2446","messageId":"2447","endLine":22,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":26,"column":8,"nodeType":"2446","messageId":"2447","endLine":26,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":29,"column":9,"nodeType":"2446","messageId":"2447","endLine":29,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":30,"column":8,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":31,"column":8,"nodeType":"2446","messageId":"2447","endLine":31,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2594","line":36,"column":24,"nodeType":"2446","messageId":"2447","endLine":36,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2595","line":37,"column":10,"nodeType":"2446","messageId":"2447","endLine":37,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2479","line":117,"column":10,"nodeType":"2446","messageId":"2447","endLine":117,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":117,"column":17,"nodeType":"2446","messageId":"2447","endLine":117,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":153,"column":9,"nodeType":"2446","messageId":"2447","endLine":153,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":247,"column":21,"nodeType":"2446","messageId":"2447","endLine":247,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2585","line":249,"column":21,"nodeType":"2446","messageId":"2447","endLine":249,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2586","line":250,"column":21,"nodeType":"2446","messageId":"2447","endLine":250,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2587","line":251,"column":21,"nodeType":"2446","messageId":"2447","endLine":251,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2588","line":252,"column":21,"nodeType":"2446","messageId":"2447","endLine":252,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":253,"column":21,"nodeType":"2446","messageId":"2447","endLine":253,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2590","line":254,"column":21,"nodeType":"2446","messageId":"2447","endLine":254,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2591","line":255,"column":21,"nodeType":"2446","messageId":"2447","endLine":255,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2592","line":256,"column":21,"nodeType":"2446","messageId":"2447","endLine":256,"endColumn":35},{"ruleId":"2444","severity":1,"message":"2593","line":257,"column":21,"nodeType":"2446","messageId":"2447","endLine":257,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2483","line":258,"column":21,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":260,"column":25,"nodeType":"2446","messageId":"2447","endLine":260,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":40,"column":7,"nodeType":"2446","messageId":"2447","endLine":40,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":80,"column":10,"nodeType":"2446","messageId":"2447","endLine":80,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":80,"column":17,"nodeType":"2446","messageId":"2447","endLine":80,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":81,"column":11,"nodeType":"2446","messageId":"2447","endLine":81,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":82,"column":9,"nodeType":"2446","messageId":"2447","endLine":82,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":83,"column":19,"nodeType":"2446","messageId":"2447","endLine":83,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":84,"column":10,"nodeType":"2446","messageId":"2447","endLine":84,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":84,"column":16,"nodeType":"2446","messageId":"2447","endLine":84,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2596","line":8,"column":8,"nodeType":"2446","messageId":"2447","endLine":8,"endColumn":12},{"ruleId":"2444","severity":1,"message":"2472","line":14,"column":3,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":16,"column":3,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":17,"column":3,"nodeType":"2446","messageId":"2447","endLine":17,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":23,"column":3,"nodeType":"2446","messageId":"2447","endLine":23,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":27,"column":8,"nodeType":"2446","messageId":"2447","endLine":27,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":30,"column":9,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":31,"column":8,"nodeType":"2446","messageId":"2447","endLine":31,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":32,"column":8,"nodeType":"2446","messageId":"2447","endLine":32,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2594","line":37,"column":24,"nodeType":"2446","messageId":"2447","endLine":37,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2479","line":117,"column":10,"nodeType":"2446","messageId":"2447","endLine":117,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":117,"column":17,"nodeType":"2446","messageId":"2447","endLine":117,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":153,"column":9,"nodeType":"2446","messageId":"2447","endLine":153,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":245,"column":21,"nodeType":"2446","messageId":"2447","endLine":245,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2585","line":247,"column":21,"nodeType":"2446","messageId":"2447","endLine":247,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2586","line":248,"column":21,"nodeType":"2446","messageId":"2447","endLine":248,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2587","line":249,"column":21,"nodeType":"2446","messageId":"2447","endLine":249,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2588","line":250,"column":21,"nodeType":"2446","messageId":"2447","endLine":250,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":251,"column":21,"nodeType":"2446","messageId":"2447","endLine":251,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2590","line":252,"column":21,"nodeType":"2446","messageId":"2447","endLine":252,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2591","line":253,"column":21,"nodeType":"2446","messageId":"2447","endLine":253,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2592","line":254,"column":21,"nodeType":"2446","messageId":"2447","endLine":254,"endColumn":35},{"ruleId":"2444","severity":1,"message":"2593","line":255,"column":21,"nodeType":"2446","messageId":"2447","endLine":255,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2483","line":256,"column":21,"nodeType":"2446","messageId":"2447","endLine":256,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":258,"column":25,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":13,"column":3,"nodeType":"2446","messageId":"2447","endLine":13,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":15,"column":3,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":16,"column":3,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":22,"column":3,"nodeType":"2446","messageId":"2447","endLine":22,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":26,"column":8,"nodeType":"2446","messageId":"2447","endLine":26,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":29,"column":9,"nodeType":"2446","messageId":"2447","endLine":29,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":30,"column":8,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":31,"column":8,"nodeType":"2446","messageId":"2447","endLine":31,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2597","line":36,"column":10,"nodeType":"2446","messageId":"2447","endLine":36,"endColumn":18},{"ruleId":"2444","severity":1,"message":"2594","line":36,"column":34,"nodeType":"2446","messageId":"2447","endLine":36,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2479","line":110,"column":10,"nodeType":"2446","messageId":"2447","endLine":110,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":110,"column":17,"nodeType":"2446","messageId":"2447","endLine":110,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":146,"column":9,"nodeType":"2446","messageId":"2447","endLine":146,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":249,"column":21,"nodeType":"2446","messageId":"2447","endLine":249,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2585","line":251,"column":21,"nodeType":"2446","messageId":"2447","endLine":251,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2586","line":252,"column":21,"nodeType":"2446","messageId":"2447","endLine":252,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2587","line":253,"column":21,"nodeType":"2446","messageId":"2447","endLine":253,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2588","line":254,"column":21,"nodeType":"2446","messageId":"2447","endLine":254,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":255,"column":21,"nodeType":"2446","messageId":"2447","endLine":255,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2590","line":256,"column":21,"nodeType":"2446","messageId":"2447","endLine":256,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2591","line":257,"column":21,"nodeType":"2446","messageId":"2447","endLine":257,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2592","line":258,"column":21,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":35},{"ruleId":"2444","severity":1,"message":"2593","line":259,"column":21,"nodeType":"2446","messageId":"2447","endLine":259,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2483","line":260,"column":21,"nodeType":"2446","messageId":"2447","endLine":260,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":262,"column":25,"nodeType":"2446","messageId":"2447","endLine":262,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":12,"column":3,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":14,"column":3,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":15,"column":3,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":21,"column":3,"nodeType":"2446","messageId":"2447","endLine":21,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":25,"column":8,"nodeType":"2446","messageId":"2447","endLine":25,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":28,"column":8,"nodeType":"2446","messageId":"2447","endLine":28,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2584","line":29,"column":8,"nodeType":"2446","messageId":"2447","endLine":29,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":30,"column":8,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2594","line":35,"column":24,"nodeType":"2446","messageId":"2447","endLine":35,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2479","line":110,"column":10,"nodeType":"2446","messageId":"2447","endLine":110,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":110,"column":17,"nodeType":"2446","messageId":"2447","endLine":110,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":146,"column":9,"nodeType":"2446","messageId":"2447","endLine":146,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":249,"column":19,"nodeType":"2446","messageId":"2447","endLine":249,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2585","line":251,"column":19,"nodeType":"2446","messageId":"2447","endLine":251,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2586","line":252,"column":19,"nodeType":"2446","messageId":"2447","endLine":252,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2587","line":253,"column":19,"nodeType":"2446","messageId":"2447","endLine":253,"endColumn":24},{"ruleId":"2444","severity":1,"message":"2588","line":254,"column":19,"nodeType":"2446","messageId":"2447","endLine":254,"endColumn":24},{"ruleId":"2444","severity":1,"message":"2589","line":255,"column":19,"nodeType":"2446","messageId":"2447","endLine":255,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2590","line":256,"column":19,"nodeType":"2446","messageId":"2447","endLine":256,"endColumn":24},{"ruleId":"2444","severity":1,"message":"2591","line":257,"column":19,"nodeType":"2446","messageId":"2447","endLine":257,"endColumn":27},{"ruleId":"2444","severity":1,"message":"2592","line":258,"column":19,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":33},{"ruleId":"2444","severity":1,"message":"2593","line":259,"column":19,"nodeType":"2446","messageId":"2447","endLine":259,"endColumn":30},{"ruleId":"2444","severity":1,"message":"2483","line":260,"column":19,"nodeType":"2446","messageId":"2447","endLine":260,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2484","line":262,"column":23,"nodeType":"2446","messageId":"2447","endLine":262,"endColumn":37},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":14,"column":3,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":16,"column":3,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":17,"column":3,"nodeType":"2446","messageId":"2447","endLine":17,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":23,"column":3,"nodeType":"2446","messageId":"2447","endLine":23,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":27,"column":8,"nodeType":"2446","messageId":"2447","endLine":27,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":30,"column":9,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":31,"column":8,"nodeType":"2446","messageId":"2447","endLine":31,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":32,"column":8,"nodeType":"2446","messageId":"2447","endLine":32,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2594","line":37,"column":24,"nodeType":"2446","messageId":"2447","endLine":37,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2479","line":121,"column":10,"nodeType":"2446","messageId":"2447","endLine":121,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":121,"column":17,"nodeType":"2446","messageId":"2447","endLine":121,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":157,"column":9,"nodeType":"2446","messageId":"2447","endLine":157,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":258,"column":21,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2585","line":260,"column":21,"nodeType":"2446","messageId":"2447","endLine":260,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2586","line":261,"column":21,"nodeType":"2446","messageId":"2447","endLine":261,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2587","line":262,"column":21,"nodeType":"2446","messageId":"2447","endLine":262,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2588","line":263,"column":21,"nodeType":"2446","messageId":"2447","endLine":263,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":264,"column":21,"nodeType":"2446","messageId":"2447","endLine":264,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2590","line":265,"column":21,"nodeType":"2446","messageId":"2447","endLine":265,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2591","line":266,"column":21,"nodeType":"2446","messageId":"2447","endLine":266,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2592","line":267,"column":21,"nodeType":"2446","messageId":"2447","endLine":267,"endColumn":35},{"ruleId":"2444","severity":1,"message":"2593","line":268,"column":21,"nodeType":"2446","messageId":"2447","endLine":268,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2483","line":269,"column":21,"nodeType":"2446","messageId":"2447","endLine":269,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":271,"column":25,"nodeType":"2446","messageId":"2447","endLine":271,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":9,"column":3,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":11,"column":3,"nodeType":"2446","messageId":"2447","endLine":11,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":12,"column":3,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":18,"column":3,"nodeType":"2446","messageId":"2447","endLine":18,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":22,"column":8,"nodeType":"2446","messageId":"2447","endLine":22,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":25,"column":9,"nodeType":"2446","messageId":"2447","endLine":25,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":26,"column":8,"nodeType":"2446","messageId":"2447","endLine":26,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":27,"column":8,"nodeType":"2446","messageId":"2447","endLine":27,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2594","line":32,"column":24,"nodeType":"2446","messageId":"2447","endLine":32,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2479","line":108,"column":10,"nodeType":"2446","messageId":"2447","endLine":108,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":108,"column":17,"nodeType":"2446","messageId":"2447","endLine":108,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":144,"column":9,"nodeType":"2446","messageId":"2447","endLine":144,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":241,"column":21,"nodeType":"2446","messageId":"2447","endLine":241,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2585","line":243,"column":21,"nodeType":"2446","messageId":"2447","endLine":243,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2586","line":244,"column":21,"nodeType":"2446","messageId":"2447","endLine":244,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2587","line":245,"column":21,"nodeType":"2446","messageId":"2447","endLine":245,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2588","line":246,"column":21,"nodeType":"2446","messageId":"2447","endLine":246,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":247,"column":21,"nodeType":"2446","messageId":"2447","endLine":247,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2590","line":248,"column":21,"nodeType":"2446","messageId":"2447","endLine":248,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2591","line":249,"column":21,"nodeType":"2446","messageId":"2447","endLine":249,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2592","line":250,"column":21,"nodeType":"2446","messageId":"2447","endLine":250,"endColumn":35},{"ruleId":"2444","severity":1,"message":"2593","line":251,"column":21,"nodeType":"2446","messageId":"2447","endLine":251,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2483","line":252,"column":21,"nodeType":"2446","messageId":"2447","endLine":252,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":254,"column":25,"nodeType":"2446","messageId":"2447","endLine":254,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":12,"column":3,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":14,"column":3,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":15,"column":3,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":21,"column":3,"nodeType":"2446","messageId":"2447","endLine":21,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":25,"column":8,"nodeType":"2446","messageId":"2447","endLine":25,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":28,"column":9,"nodeType":"2446","messageId":"2447","endLine":28,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":29,"column":8,"nodeType":"2446","messageId":"2447","endLine":29,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":30,"column":8,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2594","line":35,"column":24,"nodeType":"2446","messageId":"2447","endLine":35,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2479","line":123,"column":10,"nodeType":"2446","messageId":"2447","endLine":123,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":123,"column":17,"nodeType":"2446","messageId":"2447","endLine":123,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":159,"column":9,"nodeType":"2446","messageId":"2447","endLine":159,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":253,"column":21,"nodeType":"2446","messageId":"2447","endLine":253,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2585","line":255,"column":21,"nodeType":"2446","messageId":"2447","endLine":255,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2586","line":256,"column":21,"nodeType":"2446","messageId":"2447","endLine":256,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2587","line":257,"column":21,"nodeType":"2446","messageId":"2447","endLine":257,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2588","line":258,"column":21,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":259,"column":21,"nodeType":"2446","messageId":"2447","endLine":259,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2590","line":260,"column":21,"nodeType":"2446","messageId":"2447","endLine":260,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2591","line":261,"column":21,"nodeType":"2446","messageId":"2447","endLine":261,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2592","line":262,"column":21,"nodeType":"2446","messageId":"2447","endLine":262,"endColumn":35},{"ruleId":"2444","severity":1,"message":"2593","line":263,"column":21,"nodeType":"2446","messageId":"2447","endLine":263,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2483","line":264,"column":21,"nodeType":"2446","messageId":"2447","endLine":264,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":266,"column":25,"nodeType":"2446","messageId":"2447","endLine":266,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":9,"column":3,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":11,"column":3,"nodeType":"2446","messageId":"2447","endLine":11,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":12,"column":3,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":18,"column":3,"nodeType":"2446","messageId":"2447","endLine":18,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":22,"column":8,"nodeType":"2446","messageId":"2447","endLine":22,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":25,"column":9,"nodeType":"2446","messageId":"2447","endLine":25,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":26,"column":8,"nodeType":"2446","messageId":"2447","endLine":26,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":27,"column":8,"nodeType":"2446","messageId":"2447","endLine":27,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2594","line":32,"column":24,"nodeType":"2446","messageId":"2447","endLine":32,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2479","line":114,"column":10,"nodeType":"2446","messageId":"2447","endLine":114,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":114,"column":17,"nodeType":"2446","messageId":"2447","endLine":114,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":150,"column":9,"nodeType":"2446","messageId":"2447","endLine":150,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":254,"column":21,"nodeType":"2446","messageId":"2447","endLine":254,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2588","line":259,"column":21,"nodeType":"2446","messageId":"2447","endLine":259,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":260,"column":21,"nodeType":"2446","messageId":"2447","endLine":260,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2483","line":265,"column":21,"nodeType":"2446","messageId":"2447","endLine":265,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":267,"column":25,"nodeType":"2446","messageId":"2447","endLine":267,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":12,"column":3,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":14,"column":3,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":15,"column":3,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":21,"column":3,"nodeType":"2446","messageId":"2447","endLine":21,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":25,"column":8,"nodeType":"2446","messageId":"2447","endLine":25,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":28,"column":8,"nodeType":"2446","messageId":"2447","endLine":28,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2584","line":29,"column":8,"nodeType":"2446","messageId":"2447","endLine":29,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":30,"column":8,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2594","line":35,"column":24,"nodeType":"2446","messageId":"2447","endLine":35,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2479","line":127,"column":10,"nodeType":"2446","messageId":"2447","endLine":127,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":127,"column":17,"nodeType":"2446","messageId":"2447","endLine":127,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":163,"column":9,"nodeType":"2446","messageId":"2447","endLine":163,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":256,"column":19,"nodeType":"2446","messageId":"2447","endLine":256,"endColumn":21},{"ruleId":"2444","severity":1,"message":"2585","line":258,"column":19,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2586","line":259,"column":19,"nodeType":"2446","messageId":"2447","endLine":259,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2587","line":260,"column":19,"nodeType":"2446","messageId":"2447","endLine":260,"endColumn":24},{"ruleId":"2444","severity":1,"message":"2588","line":261,"column":19,"nodeType":"2446","messageId":"2447","endLine":261,"endColumn":24},{"ruleId":"2444","severity":1,"message":"2589","line":262,"column":19,"nodeType":"2446","messageId":"2447","endLine":262,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2590","line":263,"column":19,"nodeType":"2446","messageId":"2447","endLine":263,"endColumn":24},{"ruleId":"2444","severity":1,"message":"2591","line":264,"column":19,"nodeType":"2446","messageId":"2447","endLine":264,"endColumn":27},{"ruleId":"2444","severity":1,"message":"2592","line":265,"column":19,"nodeType":"2446","messageId":"2447","endLine":265,"endColumn":33},{"ruleId":"2444","severity":1,"message":"2593","line":266,"column":19,"nodeType":"2446","messageId":"2447","endLine":266,"endColumn":30},{"ruleId":"2444","severity":1,"message":"2483","line":267,"column":19,"nodeType":"2446","messageId":"2447","endLine":267,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2484","line":269,"column":23,"nodeType":"2446","messageId":"2447","endLine":269,"endColumn":37},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":81,"column":10,"nodeType":"2446","messageId":"2447","endLine":81,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":81,"column":17,"nodeType":"2446","messageId":"2447","endLine":81,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":82,"column":11,"nodeType":"2446","messageId":"2447","endLine":82,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":83,"column":9,"nodeType":"2446","messageId":"2447","endLine":83,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":84,"column":19,"nodeType":"2446","messageId":"2447","endLine":84,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":85,"column":10,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":85,"column":16,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":40,"column":7,"nodeType":"2446","messageId":"2447","endLine":40,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":80,"column":10,"nodeType":"2446","messageId":"2447","endLine":80,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":80,"column":17,"nodeType":"2446","messageId":"2447","endLine":80,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":81,"column":11,"nodeType":"2446","messageId":"2447","endLine":81,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":82,"column":9,"nodeType":"2446","messageId":"2447","endLine":82,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":83,"column":19,"nodeType":"2446","messageId":"2447","endLine":83,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":84,"column":10,"nodeType":"2446","messageId":"2447","endLine":84,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":84,"column":16,"nodeType":"2446","messageId":"2447","endLine":84,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":39,"column":7,"nodeType":"2446","messageId":"2447","endLine":39,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":71,"column":10,"nodeType":"2446","messageId":"2447","endLine":71,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":71,"column":17,"nodeType":"2446","messageId":"2447","endLine":71,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":72,"column":11,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":73,"column":9,"nodeType":"2446","messageId":"2447","endLine":73,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":74,"column":19,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":75,"column":10,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":75,"column":16,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2539","line":13,"column":8,"nodeType":"2446","messageId":"2447","endLine":13,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2476","line":14,"column":10,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2460","line":37,"column":7,"nodeType":"2446","messageId":"2447","endLine":37,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":78,"column":10,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":78,"column":17,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":79,"column":11,"nodeType":"2446","messageId":"2447","endLine":79,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":80,"column":9,"nodeType":"2446","messageId":"2447","endLine":80,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":81,"column":19,"nodeType":"2446","messageId":"2447","endLine":81,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":82,"column":10,"nodeType":"2446","messageId":"2447","endLine":82,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":82,"column":16,"nodeType":"2446","messageId":"2447","endLine":82,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":13,"column":3,"nodeType":"2446","messageId":"2447","endLine":13,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":15,"column":3,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":16,"column":3,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":22,"column":3,"nodeType":"2446","messageId":"2447","endLine":22,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":26,"column":8,"nodeType":"2446","messageId":"2447","endLine":26,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":29,"column":9,"nodeType":"2446","messageId":"2447","endLine":29,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":30,"column":8,"nodeType":"2446","messageId":"2447","endLine":30,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":31,"column":8,"nodeType":"2446","messageId":"2447","endLine":31,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2594","line":36,"column":24,"nodeType":"2446","messageId":"2447","endLine":36,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2595","line":37,"column":10,"nodeType":"2446","messageId":"2447","endLine":37,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2479","line":119,"column":10,"nodeType":"2446","messageId":"2447","endLine":119,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":119,"column":17,"nodeType":"2446","messageId":"2447","endLine":119,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":155,"column":9,"nodeType":"2446","messageId":"2447","endLine":155,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":249,"column":21,"nodeType":"2446","messageId":"2447","endLine":249,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2585","line":251,"column":21,"nodeType":"2446","messageId":"2447","endLine":251,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2586","line":252,"column":21,"nodeType":"2446","messageId":"2447","endLine":252,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2587","line":253,"column":21,"nodeType":"2446","messageId":"2447","endLine":253,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2588","line":254,"column":21,"nodeType":"2446","messageId":"2447","endLine":254,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":255,"column":21,"nodeType":"2446","messageId":"2447","endLine":255,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2590","line":256,"column":21,"nodeType":"2446","messageId":"2447","endLine":256,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2591","line":257,"column":21,"nodeType":"2446","messageId":"2447","endLine":257,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2592","line":258,"column":21,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":35},{"ruleId":"2444","severity":1,"message":"2593","line":259,"column":21,"nodeType":"2446","messageId":"2447","endLine":259,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2483","line":260,"column":21,"nodeType":"2446","messageId":"2447","endLine":260,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":262,"column":25,"nodeType":"2446","messageId":"2447","endLine":262,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2460","line":34,"column":7,"nodeType":"2446","messageId":"2447","endLine":34,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":85,"column":10,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":85,"column":17,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":86,"column":11,"nodeType":"2446","messageId":"2447","endLine":86,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":87,"column":9,"nodeType":"2446","messageId":"2447","endLine":87,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":88,"column":19,"nodeType":"2446","messageId":"2447","endLine":88,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":89,"column":10,"nodeType":"2446","messageId":"2447","endLine":89,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":89,"column":16,"nodeType":"2446","messageId":"2447","endLine":89,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2470","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":6,"column":18,"nodeType":"2446","messageId":"2447","endLine":6,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2472","line":9,"column":3,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":11,"column":3,"nodeType":"2446","messageId":"2447","endLine":11,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":12,"column":3,"nodeType":"2446","messageId":"2447","endLine":12,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":18,"column":3,"nodeType":"2446","messageId":"2447","endLine":18,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":22,"column":8,"nodeType":"2446","messageId":"2447","endLine":22,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":25,"column":9,"nodeType":"2446","messageId":"2447","endLine":25,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":26,"column":8,"nodeType":"2446","messageId":"2447","endLine":26,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":27,"column":8,"nodeType":"2446","messageId":"2447","endLine":27,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2594","line":32,"column":24,"nodeType":"2446","messageId":"2447","endLine":32,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2479","line":111,"column":10,"nodeType":"2446","messageId":"2447","endLine":111,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":111,"column":17,"nodeType":"2446","messageId":"2447","endLine":111,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":147,"column":9,"nodeType":"2446","messageId":"2447","endLine":147,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":248,"column":21,"nodeType":"2446","messageId":"2447","endLine":248,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2585","line":250,"column":21,"nodeType":"2446","messageId":"2447","endLine":250,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2586","line":251,"column":21,"nodeType":"2446","messageId":"2447","endLine":251,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2587","line":252,"column":21,"nodeType":"2446","messageId":"2447","endLine":252,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2588","line":253,"column":21,"nodeType":"2446","messageId":"2447","endLine":253,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":254,"column":21,"nodeType":"2446","messageId":"2447","endLine":254,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2590","line":255,"column":21,"nodeType":"2446","messageId":"2447","endLine":255,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2591","line":256,"column":21,"nodeType":"2446","messageId":"2447","endLine":256,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2592","line":257,"column":21,"nodeType":"2446","messageId":"2447","endLine":257,"endColumn":35},{"ruleId":"2444","severity":1,"message":"2593","line":258,"column":21,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2483","line":259,"column":21,"nodeType":"2446","messageId":"2447","endLine":259,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":261,"column":25,"nodeType":"2446","messageId":"2447","endLine":261,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":75,"column":10,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":75,"column":17,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":76,"column":11,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":77,"column":9,"nodeType":"2446","messageId":"2447","endLine":77,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":78,"column":19,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":79,"column":10,"nodeType":"2446","messageId":"2447","endLine":79,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":79,"column":16,"nodeType":"2446","messageId":"2447","endLine":79,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":72,"column":10,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":72,"column":17,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":73,"column":11,"nodeType":"2446","messageId":"2447","endLine":73,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":74,"column":9,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":75,"column":19,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":76,"column":10,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":76,"column":16,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":65,"column":10,"nodeType":"2446","messageId":"2447","endLine":65,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":65,"column":17,"nodeType":"2446","messageId":"2447","endLine":65,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":66,"column":11,"nodeType":"2446","messageId":"2447","endLine":66,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":67,"column":9,"nodeType":"2446","messageId":"2447","endLine":67,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":68,"column":19,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":69,"column":10,"nodeType":"2446","messageId":"2447","endLine":69,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":69,"column":16,"nodeType":"2446","messageId":"2447","endLine":69,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":74,"column":10,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":74,"column":17,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":75,"column":11,"nodeType":"2446","messageId":"2447","endLine":75,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":76,"column":9,"nodeType":"2446","messageId":"2447","endLine":76,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":77,"column":19,"nodeType":"2446","messageId":"2447","endLine":77,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":78,"column":10,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":78,"column":16,"nodeType":"2446","messageId":"2447","endLine":78,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":39,"column":7,"nodeType":"2446","messageId":"2447","endLine":39,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":68,"column":10,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":68,"column":17,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":69,"column":11,"nodeType":"2446","messageId":"2447","endLine":69,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":70,"column":9,"nodeType":"2446","messageId":"2447","endLine":70,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":71,"column":19,"nodeType":"2446","messageId":"2447","endLine":71,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":72,"column":10,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":72,"column":16,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":42,"column":7,"nodeType":"2446","messageId":"2447","endLine":42,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":85,"column":10,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":85,"column":17,"nodeType":"2446","messageId":"2447","endLine":85,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":86,"column":11,"nodeType":"2446","messageId":"2447","endLine":86,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":87,"column":9,"nodeType":"2446","messageId":"2447","endLine":87,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":88,"column":19,"nodeType":"2446","messageId":"2447","endLine":88,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2581","line":5,"column":8,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2582","line":15,"column":10,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2583","line":16,"column":10,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2460","line":38,"column":7,"nodeType":"2446","messageId":"2447","endLine":38,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2452","line":68,"column":10,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2453","line":68,"column":17,"nodeType":"2446","messageId":"2447","endLine":68,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2454","line":69,"column":11,"nodeType":"2446","messageId":"2447","endLine":69,"endColumn":19},{"ruleId":"2444","severity":1,"message":"2455","line":70,"column":9,"nodeType":"2446","messageId":"2447","endLine":70,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2456","line":71,"column":19,"nodeType":"2446","messageId":"2447","endLine":71,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2457","line":72,"column":10,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2458","line":72,"column":16,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2467","line":1,"column":17,"nodeType":"2446","messageId":"2447","endLine":1,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2468","line":3,"column":10,"nodeType":"2446","messageId":"2447","endLine":3,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2469","line":4,"column":10,"nodeType":"2446","messageId":"2447","endLine":4,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2598","line":5,"column":10,"nodeType":"2446","messageId":"2447","endLine":5,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2470","line":9,"column":8,"nodeType":"2446","messageId":"2447","endLine":9,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2471","line":10,"column":18,"nodeType":"2446","messageId":"2447","endLine":10,"endColumn":28},{"ruleId":"2444","severity":1,"message":"2599","line":10,"column":30,"nodeType":"2446","messageId":"2447","endLine":10,"endColumn":41},{"ruleId":"2444","severity":1,"message":"2472","line":13,"column":3,"nodeType":"2446","messageId":"2447","endLine":13,"endColumn":7},{"ruleId":"2444","severity":1,"message":"2473","line":15,"column":3,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2474","line":16,"column":3,"nodeType":"2446","messageId":"2447","endLine":16,"endColumn":9},{"ruleId":"2444","severity":1,"message":"2476","line":22,"column":3,"nodeType":"2446","messageId":"2447","endLine":22,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2600","line":26,"column":3,"nodeType":"2446","messageId":"2447","endLine":26,"endColumn":12},{"ruleId":"2444","severity":1,"message":"2518","line":27,"column":3,"nodeType":"2446","messageId":"2447","endLine":27,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2449","line":29,"column":8,"nodeType":"2446","messageId":"2447","endLine":29,"endColumn":13},{"ruleId":"2444","severity":1,"message":"2477","line":32,"column":9,"nodeType":"2446","messageId":"2447","endLine":32,"endColumn":14},{"ruleId":"2444","severity":1,"message":"2584","line":33,"column":8,"nodeType":"2446","messageId":"2447","endLine":33,"endColumn":17},{"ruleId":"2444","severity":1,"message":"2478","line":34,"column":8,"nodeType":"2446","messageId":"2447","endLine":34,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2601","line":39,"column":10,"nodeType":"2446","messageId":"2447","endLine":39,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2602","line":39,"column":18,"nodeType":"2446","messageId":"2447","endLine":39,"endColumn":22},{"ruleId":"2444","severity":1,"message":"2594","line":39,"column":24,"nodeType":"2446","messageId":"2447","endLine":39,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2603","line":40,"column":18,"nodeType":"2446","messageId":"2447","endLine":40,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2450","line":42,"column":22,"nodeType":"2446","messageId":"2447","endLine":42,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2604","line":73,"column":7,"nodeType":"2446","messageId":"2447","endLine":73,"endColumn":16},{"ruleId":"2444","severity":1,"message":"2479","line":126,"column":10,"nodeType":"2446","messageId":"2447","endLine":126,"endColumn":15},{"ruleId":"2444","severity":1,"message":"2480","line":126,"column":17,"nodeType":"2446","messageId":"2447","endLine":126,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2481","line":162,"column":9,"nodeType":"2446","messageId":"2447","endLine":162,"endColumn":20},{"ruleId":"2444","severity":1,"message":"2482","line":253,"column":21,"nodeType":"2446","messageId":"2447","endLine":253,"endColumn":23},{"ruleId":"2444","severity":1,"message":"2585","line":255,"column":21,"nodeType":"2446","messageId":"2447","endLine":255,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2586","line":256,"column":21,"nodeType":"2446","messageId":"2447","endLine":256,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2587","line":257,"column":21,"nodeType":"2446","messageId":"2447","endLine":257,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2588","line":258,"column":21,"nodeType":"2446","messageId":"2447","endLine":258,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2589","line":259,"column":21,"nodeType":"2446","messageId":"2447","endLine":259,"endColumn":25},{"ruleId":"2444","severity":1,"message":"2590","line":260,"column":21,"nodeType":"2446","messageId":"2447","endLine":260,"endColumn":26},{"ruleId":"2444","severity":1,"message":"2591","line":261,"column":21,"nodeType":"2446","messageId":"2447","endLine":261,"endColumn":29},{"ruleId":"2444","severity":1,"message":"2592","line":262,"column":21,"nodeType":"2446","messageId":"2447","endLine":262,"endColumn":35},{"ruleId":"2444","severity":1,"message":"2593","line":263,"column":21,"nodeType":"2446","messageId":"2447","endLine":263,"endColumn":32},{"ruleId":"2444","severity":1,"message":"2483","line":264,"column":21,"nodeType":"2446","messageId":"2447","endLine":264,"endColumn":31},{"ruleId":"2444","severity":1,"message":"2484","line":266,"column":25,"nodeType":"2446","messageId":"2447","endLine":266,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2476","line":14,"column":72,"nodeType":"2446","messageId":"2447","endLine":14,"endColumn":82},{"ruleId":"2444","severity":1,"message":"2605","line":15,"column":30,"nodeType":"2446","messageId":"2447","endLine":15,"endColumn":44},{"ruleId":"2444","severity":1,"message":"2460","line":37,"column":29,"nodeType":"2446","messageId":"2447","endLine":37,"endColumn":41},{"ruleId":"2444","severity":1,"message":"2452","line":70,"column":32,"nodeType":"2446","messageId":"2447","endLine":70,"endColumn":37},{"ruleId":"2444","severity":1,"message":"2453","line":70,"column":39,"nodeType":"2446","messageId":"2447","endLine":70,"endColumn":47},{"ruleId":"2444","severity":1,"message":"2454","line":71,"column":33,"nodeType":"2446","messageId":"2447","endLine":71,"endColumn":41},{"ruleId":"2444","severity":1,"message":"2455","line":72,"column":31,"nodeType":"2446","messageId":"2447","endLine":72,"endColumn":39},{"ruleId":"2444","severity":1,"message":"2456","line":73,"column":41,"nodeType":"2446","messageId":"2447","endLine":73,"endColumn":51},{"ruleId":"2444","severity":1,"message":"2457","line":74,"column":32,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":36},{"ruleId":"2444","severity":1,"message":"2458","line":74,"column":38,"nodeType":"2446","messageId":"2447","endLine":74,"endColumn":45},"no-native-reassign",["2606"],"no-negated-in-lhs",["2607"],"no-unused-vars","'isValidToken' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Stack' is defined but never used.","'SimpleCard' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'register' is assigned a value but never used.","'navigate' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'note' is assigned a value but never used.","'setNote' is assigned a value but never used.","'searchResults' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'classes' is assigned a value but never used.","'data5' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.","'Container' is assigned a value but never used.","'useRef' is defined but never used.","'Icon' is defined but never used.","'sentenceCase' is defined but never used.","'plusFill' is defined but never used.","'RouterLink' is defined but never used.","'Card' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'Label' is defined but never used.","'USERLIST' is defined but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'id' is assigned a value but never used.","'isVerified' is assigned a value but never used.","'isItemSelected' is assigned a value but never used.","no-dupe-keys","Duplicate key 'boxShadow'.","ObjectExpression","unexpected","'handleSidenavToggle' is assigned a value but never used.","'SecondarySidebarContent' is defined but never used.","'SecondarySidebarToggle' is defined but never used.","'CustomizedDialogs' is defined but never used.","'DialogTitle1' is assigned a value but never used.","'DialogTitle' is assigned a value but never used.","'DialogContent' is assigned a value but never used.","'DialogActions' is assigned a value but never used.","'premiumContent' is assigned a value but never used.","'setPremiumContent' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'deleterow' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'alpha' is defined but never used.","'Box' is defined but never used.","'handleClickOpen1' is assigned a value but never used.","'MatxLogo' is defined but never used.","'textColor' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Space' is defined but never used.","'Grid' is defined but never used.","'styled' is defined but never used.","'Theme' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'names' is assigned a value but never used.","'theme' is assigned a value but never used.","'personName' is assigned a value but never used.","'hint' is assigned a value but never used.","'Campaigns' is defined but never used.","'DoughnutChart' is defined but never used.","'RowCards' is defined but never used.","'StatCards2' is defined but never used.","'UpgradeCard' is defined but never used.","'Title' is assigned a value but never used.","'SubTitle' is assigned a value but never used.","'H4' is assigned a value but never used.","'palette' is assigned a value but never used.","'handleChangeButton' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'handleChange1' is assigned a value but never used.","'SimpleRadio' is defined but never used.","'SimpleForms' is defined but never used.","'Singleimage' is defined but never used.","'NavLink' is defined but never used.","'eyeFill' is defined but never used.","'eyeOffFill' is defined but never used.","'handleimage' is assigned a value but never used.","'axios' is defined but never used.","'handleChange2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBrands'. Either include it or remove the dependency array.","ArrayExpression",["2608"],"'DDbutton' is defined but never used.","'Appeditor' is defined but never used.","'hide' is assigned a value but never used.","'togglehide' is assigned a value but never used.","'IconButton' is defined but never used.","'AddIcon' is defined but never used.","'displayedOptions' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'MenuItem' is defined but never used.","'CardHeader' is assigned a value but never used.","'LoadingButton' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'loading' is assigned a value but never used.","'showtable' is assigned a value but never used.","'setValues' is assigned a value but never used.","'adddata' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'Fab' is defined but never used.","'GreenRadio' is assigned a value but never used.","'DialogActions' is defined but never used.","'Chip' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'RadioRoot' is assigned a value but never used.","'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'AutocompleteComboNew' is defined but never used.","'TextareaAutosize' is defined but never used.","'min' is defined but never used.","'Scrollbar' is defined but never used.","'unit' is assigned a value but never used.","'cost' is assigned a value but never used.","'price' is assigned a value but never used.","'image' is assigned a value but never used.","'code' is assigned a value but never used.","'brand' is assigned a value but never used.","'quantity' is assigned a value but never used.","'alert_quantity' is assigned a value but never used.","'category_id' is assigned a value but never used.","'Print' is defined but never used.","'Tab' is defined but never used.","'Link' is defined but never used.","'CheckBox' is defined but never used.","'makeStyles' is defined but never used.","'useNavigate' is defined but never used.","'InputBase' is defined but never used.","'Delete' is defined but never used.","'Edit' is defined but never used.","'ToastContainer' is defined but never used.","'showtoast' is assigned a value but never used.","'Fileattachment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"2609","fix":"2610"},"Update the dependencies array to be: [getBrands]",{"range":"2611","text":"2612"},[6380,6382],"[getBrands]"]