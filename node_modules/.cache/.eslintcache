[{"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/index.jsx":"1","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/serviceWorker.js":"2","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/App.jsx":"3","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/SettingsContext.js":"4","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/Store.js":"5","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/JWTAuthContext.js":"6","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/routes.jsx":"7","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/index.js":"8","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/index.js":"9","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/axios.js":"10","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/MatxLayout.jsx":"11","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/notification.js":"12","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SimpleCard.jsx":"13","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx":"14","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxVerticalNav/MatxVerticalNav.jsx":"15","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Calendar/Session12Routes.js":"16","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/Session10Routes.js":"17","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/Session11Routes.js":"18","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/index.js":"19","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Typography.js":"20","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useSettings.js":"21","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Calendar/Calendar.jsx":"22","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SMSLog.jsx":"23","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/StaffReport.jsx":"24","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SMSSettings.jsx":"25","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SendSMS.jsx":"26","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/ListPages.jsx":"27","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/AddPage.jsx":"28","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SliderSettings.jsx":"29","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PurchasesReport.jsx":"30","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/CustomersReport.jsx":"31","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ExpensesReport.jsx":"32","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/MonthlyPurchases.jsx":"33","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/ShopSettings.jsx":"34","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/SuppliersReport.jsx":"35","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/TaxReport.jsx":"36","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PaymentsReport.jsx":"37","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProfitLoss.jsx":"38","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/DailySales.jsx":"39","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/MonthlySales.jsx":"40","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/BrandsReport.jsx":"41","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/CategoriesReport.jsx":"42","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/AdjustmentsReport.jsx":"43","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProductsReport.jsx":"44","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProductQuantityAlerts.jsx":"45","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/BestSellers.jsx":"46","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/SalesReport.jsx":"47","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/DailyPurchases.jsx":"48","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/WarehouseStockChart.jsx":"49","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/OverviewChart.jsx":"50","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/RegisterReport.jsx":"51","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1.jsx":"52","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Loadable.jsx":"53","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PieRechartComponent.jsx":"54","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/Years.jsx":"55","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/Calendars.jsx":"56","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/SimpleTable.jsx":"57","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Topbar.jsx":"58","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Sidenav.jsx":"59","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebar.jsx":"60","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useAuth.js":"61","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx":"62","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLoading.jsx":"63","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Footer.jsx":"64","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/StatCards.jsx":"65","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserListHead.jsx":"66","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserMoreMenu.jsx":"67","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserListToolbar.jsx":"68","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/SearchNotFound.jsx":"69","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/User.jsx":"70","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/Scrollbar.jsx":"71","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/Label.jsx":"72","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Sidenav.jsx":"73","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/utils/constant.js":"74","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/mockImages.jsx":"75","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/navigations.js":"76","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/CustomizedDialog.jsx":"77","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebarToggle.jsx":"78","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebarContent.jsx":"79","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Brand.jsx":"80","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx":"81","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ShoppingCart.jsx":"82","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/events.jsx":"83","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/NotificationBar/NotificationBar.jsx":"84","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Singleimage.jsx":"85","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleFormNew.jsx":"86","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteComboNew.jsx":"87","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/utils/utils.js":"88","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/themeColors.js":"89","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/NotificationContext.js":"90","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxCustomizer/MatxCustomizer.jsx":"91","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useNotification.js":"92","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/EcommerceActions.js":"93","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxCustomizer/BadgeSelected.jsx":"94","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/mock.js":"95","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/auth.js":"96","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/ecommerce.js":"97","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSuspense.jsx":"98","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/MatxTheme.jsx":"99","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/EchartTheme.jsx":"100","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxProgressBar.jsx":"101","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxMenu.jsx":"102","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSearchBox.jsx":"103","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLogo.jsx":"104","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ChatHead.jsx":"105","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ConfirmationDialog.jsx":"106","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ChatAvatar.jsx":"107","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Chatbox.jsx":"108","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Breadcrumb.jsx":"109","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenavContent.jsx":"110","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenavContainer.jsx":"111","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenav.jsx":"112","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/icons/GoogleIcon.jsx":"113","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/icons/FacebookIcon.jsx":"114","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/RootReducer.js":"115","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Session9Routes.js":"116","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/MaterialRoutes.js":"117","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/DashboardRoutes.js":"118","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/settings.js":"119","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Session8Routes.js":"120","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/Session7Routes.js":"121","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/Session5Routes.js":"122","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/Session4Routes.js":"123","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/session3Routes.js":"124","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Session2Routes.js":"125","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/SessionRoutes.js":"126","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/Session6Routes.js":"127","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Session1Routes.js":"128","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/NotFound.jsx":"129","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/ChartsRoute.jsx":"130","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/auth/AuthGuard.jsx":"131","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/initThemes.js":"132","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Settings.js":"133","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/auth/authRoles.js":"134","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AppAutoComplete.jsx":"135","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/AppDialog.jsx":"136","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/Analytics.jsx":"137","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Appuploadimage.jsx":"138","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/AppForm.jsx":"139","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/AppTable.jsx":"140","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Backups.jsx":"141","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/AppExpansionPanel.jsx":"142","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/AppSnackbar.jsx":"143","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/AppSlider.jsx":"144","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/AppSwitch.jsx":"145","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/AppRadio.jsx":"146","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/AppMenu.jsx":"147","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/ck/Appeditor.jsx":"148","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/icons/AppIcon.jsx":"149","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/AppCheckbox.jsx":"150","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/AppButton.jsx":"151","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Productdetail.jsx":"152","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Editproduct.jsx":"153","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Stockdetails.jsx":"154","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Profile.jsx":"155","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Conutstock.jsx":"156","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/StockCounts.jsx":"157","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/AddAdjustment.jsx":"158","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/QuantityAdjustments.jsx":"159","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/ImportProducts.jsx":"160","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/PrintBarcode.jsx":"161","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/ListProducts.jsx":"162","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/AddReturn.jsx":"163","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/AddProduct.jsx":"164","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/ListReturns.jsx":"165","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/AppEchart.jsx":"166","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/JwtRegister.jsx":"167","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/ForgotPassword.jsx":"168","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/JwtLogin.jsx":"169","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/GiftCards.jsx":"170","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Deliveries.jsx":"171","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/PosSales.jsx":"172","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Addsalecsv.jsx":"173","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Addsales.jsx":"174","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/SalesList.jsx":"175","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/Addquotation.jsx":"176","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/themeOptions.js":"177","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/ListPurchases.jsx":"178","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/Listquotation.jsx":"179","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/ListExpenses.jsx":"180","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddPurchase.jsx":"181","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddPurchaseCSV.jsx":"182","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddExpense.jsx":"183","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleForm.jsx":"184","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Multipleimage.jsx":"185","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/Addfeild.jsx":"186","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/Date.jsx":"187","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/UpgradeCard.jsx":"188","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/TopSellingTable.jsx":"189","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Fileattachment.jsx":"190","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/SimpleRadioNew.jsx":"191","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleForms.jsx":"192","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/SimpleRadio.jsx":"193","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/Pdfdownloadbutton.jsx":"194","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/FormGroupCheckbox.jsx":"195","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SimpleCheckbox.jsx":"196","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/LineChart.jsx":"197","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/Doughnut.jsx":"198","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/components.js":"199","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/DDbutton.js":"200","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/ComparisonChart.jsx":"201","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/Searchtable.jsx":"202","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useBrand.js":"203","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/AreaChart.jsx":"204","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/Showhideformcheckbox.jsx":"205","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SearchwithAadtable.jsx":"206","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteComboWithIdValue.jsx":"207","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/LabelledCheckbox.jsx":"208","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/Dbutton.jsx":"209","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/Countstack.jsx":"210","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteCombo.jsx":"211","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/SimpleMenu.jsx":"212","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/SelectedMenu.jsx":"213","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/MaxHeightMenu.jsx":"214","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SearchtableNew.jsx":"215","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/StandaloneRadio.jsx":"216","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/SijmpleSwitch.jsx":"217","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/PlacingRadioLabel.jsx":"218","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/PlacingSwitchLabel.jsx":"219","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/LabelledSwitch.jsx":"220","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/FormGroupSwitch.jsx":"221","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/CustomizedSwitch.jsx":"222","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/VerticalSlider.jsx":"223","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/CustomizedMenu.jsx":"224","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/InputSlider.jsx":"225","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/ContinuousSlider.jsx":"226","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/RangeSlider.jsx":"227","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/TransitionSnackbar.jsx":"228","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/DiscreteSlider.jsx":"229","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/SimpleSnackbar.jsx":"230","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/StackedSnackbar.jsx":"231","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/DirectionSnackbar.jsx":"232","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/PositionedSnackbar.jsx":"233","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/LongLengthSnackbar.jsx":"234","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/CustomizedSnackbar.jsx":"235","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/SimpleExpansionPanel.jsx":"236","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/DetailedExpansionPanel.jsx":"237","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx":"238","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/ControlledAccordion.jsx":"239","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/RowCards.jsx":"240","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/CustomizedExpansionPanel.jsx":"241","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/StatCards2.jsx":"242","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/Doughnut.jsx":"243","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/Campaigns.jsx":"244","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/SimpleDialog.jsx":"245","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/SimpleAlerts.jsx":"246","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/ResponsiveDialog.jsx":"247","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/OptimalSizeDialog.jsx":"248","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/FullScreenDialog.jsx":"249","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/FormDialog.jsx":"250","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/DialogTransition.jsx":"251","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/ConfirmationDialog.jsx":"252","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/BadgeAutocomplete.jsx":"253","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/AddTransferCSV.jsx":"254","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/AddTransfer.jsx":"255","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/ListTransfers.jsx":"256","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListSuppliers.jsx":"257","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddSupplier.jsx":"258","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListCustomers.jsx":"259","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddBiller.jsx":"260","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddCustomer.jsx":"261","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListUsers.jsx":"262","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddUser.jsx":"263","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListBillers.jsx":"264","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Notifications.jsx":"265","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Addnotification.jsx":"266","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/GroupPermissions.jsx":"267","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EmailTemplates.jsx":"268","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Warehouses.jsx":"269","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/TaxRates.jsx":"270","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Brands.jsx":"271","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Variants.jsx":"272","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ExpenseCategories.jsx":"273","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Units.jsx":"274","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/PriceGroups.jsx":"275","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Categories.jsx":"276","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/CustomerGroups.jsx":"277","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Currencies.jsx":"278","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ChangeLogo.jsx":"279","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPrinters.jsx":"280","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Promos.jsx":"281","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPrinter.jsx":"282","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/POSSettings.jsx":"283","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/BrandContext.js":"284","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/BrandReducer.js":"285","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/NotificationReducer.js":"286","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/NavigationReducer.js":"287","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/EcommerceReducer.js":"288","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/SystemSettings.jsx":"289","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/BrandActions.js":"290","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/NavigationAction.js":"291","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/NotificationActions.js":"292","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCurrencies.js":"293","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCustomerGroups.js":"294","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddExpenseCategories.jsx":"295","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddUnits.jsx":"296","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddVariants.jsx":"297","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddTaxRates.jsx":"298","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPriceGroups.jsx":"299","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddBrands.jsx":"300","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCategories.js":"301","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddWareHouses.jsx":"302","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCategories.js":"303","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPromos.js":"304","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPromos.jsx":"305","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCurrenies.js":"306","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListExpenseCategories.js":"307","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListUnits.js":"308","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPriceGroups.js":"309","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListBrands.js":"310","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListVariants.js":"311","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListWareHouses.js":"312","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListTaxRates.js":"313","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCurrencies.js":"314","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPromos.js":"315","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditBrands.js":"316","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCategories.js":"317","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPrint.js":"318","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPrinter.js":"319","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCustomerGroups.js":"320","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCustomerGroups.js":"321","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditExpenseCategories.js":"322","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditUnits.js":"323","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditTaxRates.js":"324","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditVariants.js":"325","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditWareHouses.js":"326","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPriceGroups.js":"327","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/GroupProductPrices.js":"328","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/PrintBarcode.js":"329","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/index.jsx":"330","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/serviceWorker.js":"331","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/App.jsx":"332","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/Store.js":"333","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/contexts/SettingsContext.js":"334","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/contexts/JWTAuthContext.js":"335","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/routes.jsx":"336","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/fake-db/index.js":"337","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/index.js":"338","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/axios.js":"339","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/MatxLayout.jsx":"340","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/fake-db/db/notification.js":"341","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/SimpleCard.jsx":"342","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx":"343","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Calendar/Session12Routes.js":"344","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/Session11Routes.js":"345","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/index.js":"346","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/fake-db/mock.js":"347","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Calendar/Calendar.jsx":"348","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/SMSLog.jsx":"349","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/SendSMS.jsx":"350","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/SMSSettings.jsx":"351","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/ListPages.jsx":"352","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/AddPage.jsx":"353","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/Layout1/Layout1.jsx":"354","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/SliderSettings.jsx":"355","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/ShopSettings.jsx":"356","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Loadable.jsx":"357","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/calenders/Calendars.jsx":"358","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/auto-complete/AutocompleteComboNew.jsx":"359","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/Layout1/Layout1Topbar.jsx":"360","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/Layout1/Layout1Sidenav.jsx":"361","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Footer.jsx":"362","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/SimpleTable.jsx":"363","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/SimpleFormNew.jsx":"364","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/SecondarySidebar/SecondarySidebar.jsx":"365","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx":"366","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/Label.jsx":"367","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/hooks/useAuth.js":"368","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/utils/constant.js":"369","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/hooks/useSettings.js":"370","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/uploadimage/Singleimage.jsx":"371","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Typography.js":"372","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLoading.jsx":"373","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/calenders/events.jsx":"374","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Sidenav.jsx":"375","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/SecondarySidebar/SecondarySidebarToggle.jsx":"376","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/navigations.js":"377","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/SecondarySidebar/SecondarySidebarContent.jsx":"378","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/SearchNotFound.jsx":"379","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/UserListHead.jsx":"380","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/UserMoreMenu.jsx":"381","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/UserListToolbar.jsx":"382","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx":"383","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/User.jsx":"384","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/Scrollbar.jsx":"385","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Brand.jsx":"386","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/ShoppingCart.jsx":"387","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/NotificationBar/NotificationBar.jsx":"388","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/mockImages.jsx":"389","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/utils/utils.js":"390","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/contexts/NotificationContext.js":"391","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/themeColors.js":"392","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/CustomizedDialog.jsx":"393","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxCustomizer/MatxCustomizer.jsx":"394","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/hooks/useNotification.js":"395","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/actions/EcommerceActions.js":"396","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxCustomizer/BadgeSelected.jsx":"397","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/fake-db/db/auth.js":"398","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/fake-db/db/ecommerce.js":"399","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxVerticalNav/MatxVerticalNav.jsx":"400","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/MatxTheme.jsx":"401","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/EchartTheme.jsx":"402","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxSuspense.jsx":"403","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxProgressBar.jsx":"404","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxSearchBox.jsx":"405","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/reducers/RootReducer.js":"406","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxMenu.jsx":"407","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLogo.jsx":"408","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/ConfirmationDialog.jsx":"409","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/ChatHead.jsx":"410","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/ChatAvatar.jsx":"411","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Chatbox.jsx":"412","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Breadcrumb.jsx":"413","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxSidenav/MatxSidenavContainer.jsx":"414","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxSidenav/MatxSidenav.jsx":"415","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxSidenav/MatxSidenavContent.jsx":"416","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/icons/FacebookIcon.jsx":"417","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/icons/GoogleIcon.jsx":"418","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/MaterialRoutes.js":"419","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Notifications/Session8Routes.js":"420","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Return/Session6Routes.js":"421","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/Session10Routes.js":"422","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Session9Routes.js":"423","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/Session7Routes.js":"424","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Transfers/Session5Routes.js":"425","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/Session4Routes.js":"426","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Quotations/session3Routes.js":"427","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/settings.js":"428","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/Session2Routes.js":"429","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Session1Routes.js":"430","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/sessions/SessionRoutes.js":"431","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/DashboardRoutes.js":"432","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/reducers/EcommerceReducer.js":"433","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/reducers/BrandReducer.js":"434","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/reducers/NavigationReducer.js":"435","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/reducers/NotificationReducer.js":"436","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/sessions/NotFound.jsx":"437","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/ChartsRoute.jsx":"438","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/auth/AuthGuard.jsx":"439","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/Layout1/Layout1Settings.js":"440","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/auth/authRoles.js":"441","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/AppTable.jsx":"442","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/AppForm.jsx":"443","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/uploadimage/Appuploadimage.jsx":"444","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/AppDialog.jsx":"445","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/auto-complete/AppAutoComplete.jsx":"446","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Notifications/Addnotification.jsx":"447","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Return/ListReturns.jsx":"448","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/WarehouseStockChart.jsx":"449","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Return/AddReturn.jsx":"450","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/OverviewChart.jsx":"451","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/RegisterReport.jsx":"452","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/BestSellers.jsx":"453","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/ProductQuantityAlerts.jsx":"454","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/ProductsReport.jsx":"455","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Notifications/Notifications.jsx":"456","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/StaffReport.jsx":"457","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/AddSupplier.jsx":"458","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Backups.jsx":"459","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Transfers/AddTransferCSV.jsx":"460","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/actions/NavigationAction.js":"461","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/actions/BrandActions.js":"462","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/actions/NotificationActions.js":"463","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/ListPurchases.jsx":"464","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/ListExpenses.jsx":"465","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Quotations/Addquotation.jsx":"466","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Quotations/Listquotation.jsx":"467","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/AddPurchaseCSV.jsx":"468","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/AddPurchase.jsx":"469","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/AddExpense.jsx":"470","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/GiftCards.jsx":"471","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Stockdetails.jsx":"472","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/sessions/JwtRegister.jsx":"473","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/buttons/AppButton.jsx":"474","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/AppSwitch.jsx":"475","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/icons/AppIcon.jsx":"476","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/ck/Appeditor.jsx":"477","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/AppCheckbox.jsx":"478","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/AppSnackbar.jsx":"479","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/menu/AppMenu.jsx":"480","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/expansion-panel/AppExpansionPanel.jsx":"481","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/AppRadio.jsx":"482","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/AppSlider.jsx":"483","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/sessions/JwtLogin.jsx":"484","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/sessions/ForgotPassword.jsx":"485","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/Analytics.jsx":"486","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/echarts/AppEchart.jsx":"487","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/Addfeild.jsx":"488","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/uploadimage/Multipleimage.jsx":"489","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/SimpleDialog.jsx":"490","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/auto-complete/BadgeAutocomplete.jsx":"491","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/auto-complete/AutocompleteCombo.jsx":"492","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/uploadimage/Fileattachment.jsx":"493","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/SimpleForm.jsx":"494","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/PieRechartComponent.jsx":"495","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/Date.jsx":"496","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/SearchtableNew.jsx":"497","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/VerticalSlider.jsx":"498","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/InputSlider.jsx":"499","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/RangeSlider.jsx":"500","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/ContinuousSlider.jsx":"501","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/DiscreteSlider.jsx":"502","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/Countstack.jsx":"503","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/SimpleRadio.jsx":"504","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/StandaloneRadio.jsx":"505","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/PlacingRadioLabel.jsx":"506","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/expansion-panel/SimpleExpansionPanel.jsx":"507","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/expansion-panel/DetailedExpansionPanel.jsx":"508","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/expansion-panel/ControlledAccordion.jsx":"509","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/expansion-panel/CustomizedExpansionPanel.jsx":"510","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/menu/SimpleMenu.jsx":"511","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/UpgradeCard.jsx":"512","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/TopSellingTable.jsx":"513","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/StatCards2.jsx":"514","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/StatCards.jsx":"515","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/Doughnut.jsx":"516","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/RowCards.jsx":"517","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/Campaigns.jsx":"518","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/menu/CustomizedMenu.jsx":"519","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/menu/MaxHeightMenu.jsx":"520","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/menu/SelectedMenu.jsx":"521","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/TransitionSnackbar.jsx":"522","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/StackedSnackbar.jsx":"523","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/SimpleSnackbar.jsx":"524","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/PositionedSnackbar.jsx":"525","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/LongLengthSnackbar.jsx":"526","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/echarts/LineChart.jsx":"527","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/echarts/Doughnut.jsx":"528","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/echarts/ComparisonChart.jsx":"529","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/echarts/AreaChart.jsx":"530","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/DirectionSnackbar.jsx":"531","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx":"532","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/Searchtable.jsx":"533","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/CustomizedSnackbar.jsx":"534","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/SearchwithAadtable.jsx":"535","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/Showhideformcheckbox.jsx":"536","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/LabelledCheckbox.jsx":"537","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/SimpleCheckbox.jsx":"538","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/FormGroupCheckbox.jsx":"539","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/SijmpleSwitch.jsx":"540","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/PlacingSwitchLabel.jsx":"541","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/FormGroupSwitch.jsx":"542","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/LabelledSwitch.jsx":"543","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/CustomizedSwitch.jsx":"544","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/buttons/Pdfdownloadbutton.jsx":"545","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/ResponsiveDialog.jsx":"546","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/SimpleAlerts.jsx":"547","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/FullScreenDialog.jsx":"548","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/OptimalSizeDialog.jsx":"549","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/FormDialog.jsx":"550","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/DialogTransition.jsx":"551","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/ConfirmationDialog.jsx":"552","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/initThemes.js":"553","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Editproduct.jsx":"554","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Profile.jsx":"555","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Conutstock.jsx":"556","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Productdetail.jsx":"557","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/AddAdjustment.jsx":"558","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/StockCounts.jsx":"559","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/ImportProducts.jsx":"560","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/PrintBarcode.jsx":"561","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/QuantityAdjustments.jsx":"562","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/AddProduct.jsx":"563","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/ListProducts.jsx":"564","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditWareHouses.js":"565","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/Deliveries.jsx":"566","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/SalesList.jsx":"567","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/Addsales.jsx":"568","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/Addsalecsv.jsx":"569","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Transfers/ListTransfers.jsx":"570","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Transfers/AddTransfer.jsx":"571","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/PosSales.jsx":"572","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListWareHouses.js":"573","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/ListSuppliers.jsx":"574","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/AddCustomer.jsx":"575","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/ListCustomers.jsx":"576","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditTaxRates.js":"577","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/AddBiller.jsx":"578","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListTaxRates.js":"579","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditVariants.js":"580","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListVariants.js":"581","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListBrands.js":"582","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditBrands.js":"583","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/ListBillers.jsx":"584","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditUnits.js":"585","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditExpenseCategories.js":"586","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListUnits.js":"587","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListExpenseCategories.js":"588","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/ListUsers.jsx":"589","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/AddUser.jsx":"590","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/GroupPermissions.jsx":"591","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EmailTemplates.jsx":"592","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddWareHouses.jsx":"593","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Warehouses.jsx":"594","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddTaxRates.jsx":"595","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/TaxRates.jsx":"596","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddVariants.jsx":"597","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Variants.jsx":"598","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddBrands.jsx":"599","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Brands.jsx":"600","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddUnits.jsx":"601","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Units.jsx":"602","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddExpenseCategories.jsx":"603","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ExpenseCategories.jsx":"604","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/themeOptions.js":"605","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/buttons/DDbutton.js":"606","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/buttons/Dbutton.jsx":"607","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/auto-complete/AutocompleteComboWithIdValue.jsx":"608","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/SimpleForms.jsx":"609","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/SimpleRadioNew.jsx":"610","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/hooks/useBrand.js":"611","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/components.js":"612","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/PrintBarcode.js":"613","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddCategories.js":"614","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditCategories.js":"615","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListCategories.js":"616","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/GroupProductPrices.js":"617","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListPriceGroups.js":"618","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditPriceGroups.js":"619","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditCustomerGroups.js":"620","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListCustomerGroups.js":"621","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListCurrenies.js":"622","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddCustomerGroups.js":"623","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddCurrencies.js":"624","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditCurrencies.js":"625","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditPrinter.js":"626","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListPrint.js":"627","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListPromos.js":"628","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditPromos.js":"629","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Categories.jsx":"630","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddPriceGroups.jsx":"631","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/PriceGroups.jsx":"632","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/CustomerGroups.jsx":"633","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Currencies.jsx":"634","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ChangeLogo.jsx":"635","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddPrinter.jsx":"636","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListPrinters.jsx":"637","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddPromos.jsx":"638","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/POSSettings.jsx":"639","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/SuppliersReport.jsx":"640","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/CustomersReport.jsx":"641","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/PurchasesReport.jsx":"642","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/ExpensesReport.jsx":"643","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/MonthlyPurchases.jsx":"644","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/DailyPurchases.jsx":"645","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Promos.jsx":"646","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/SystemSettings.jsx":"647","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/ProfitLoss.jsx":"648","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/PaymentsReport.jsx":"649","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/SalesReport.jsx":"650","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/DailySales.jsx":"651","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/MonthlySales.jsx":"652","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/TaxReport.jsx":"653","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/CategoriesReport.jsx":"654","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/BrandsReport.jsx":"655","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/AdjustmentsReport.jsx":"656","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/calenders/Years.jsx":"657","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/contexts/BrandContext.js":"658"},{"size":848,"mtime":1655822386000,"results":"659","hashOfConfig":"660"},{"size":4933,"mtime":1655822386000,"results":"661","hashOfConfig":"660"},{"size":649,"mtime":1667396500000,"results":"662","hashOfConfig":"660"},{"size":878,"mtime":1655822386000,"results":"663","hashOfConfig":"660"},{"size":549,"mtime":1655822386000,"results":"664","hashOfConfig":"660"},{"size":4806,"mtime":1670564236670,"results":"665","hashOfConfig":"660"},{"size":1888,"mtime":1664456864000,"results":"666","hashOfConfig":"660"},{"size":130,"mtime":1655822386000,"results":"667","hashOfConfig":"660"},{"size":1706,"mtime":1663754380000,"results":"668","hashOfConfig":"660"},{"size":264,"mtime":1655822386000,"results":"669","hashOfConfig":"660"},{"size":374,"mtime":1655822386000,"results":"670","hashOfConfig":"660"},{"size":1884,"mtime":1655822386000,"results":"671","hashOfConfig":"660"},{"size":821,"mtime":1665474468000,"results":"672","hashOfConfig":"660"},{"size":4420,"mtime":1663837616000,"results":"673","hashOfConfig":"660"},{"size":5455,"mtime":1663845364000,"results":"674","hashOfConfig":"660"},{"size":255,"mtime":1664456818000,"results":"675","hashOfConfig":"660"},{"size":3293,"mtime":1663760218000,"results":"676","hashOfConfig":"660"},{"size":1009,"mtime":1663767386000,"results":"677","hashOfConfig":"660"},{"size":115,"mtime":1655822386000,"results":"678","hashOfConfig":"660"},{"size":4413,"mtime":1663839594000,"results":"679","hashOfConfig":"660"},{"size":177,"mtime":1655822386000,"results":"680","hashOfConfig":"660"},{"size":827,"mtime":1664860598000,"results":"681","hashOfConfig":"660"},{"size":2079,"mtime":1666011462000,"results":"682","hashOfConfig":"660"},{"size":766,"mtime":1663762960000,"results":"683","hashOfConfig":"660"},{"size":3380,"mtime":1666011468000,"results":"684","hashOfConfig":"660"},{"size":4883,"mtime":1666011418000,"results":"685","hashOfConfig":"660"},{"size":744,"mtime":1666011398000,"results":"686","hashOfConfig":"660"},{"size":7069,"mtime":1666011390000,"results":"687","hashOfConfig":"660"},{"size":11118,"mtime":1666011446000,"results":"688","hashOfConfig":"660"},{"size":789,"mtime":1665475224000,"results":"689","hashOfConfig":"660"},{"size":789,"mtime":1665475116000,"results":"690","hashOfConfig":"660"},{"size":786,"mtime":1665475134000,"results":"691","hashOfConfig":"660"},{"size":781,"mtime":1665475166000,"results":"692","hashOfConfig":"660"},{"size":28868,"mtime":1666011434000,"results":"693","hashOfConfig":"660"},{"size":778,"mtime":1663762920000,"results":"694","hashOfConfig":"660"},{"size":760,"mtime":1663762724000,"results":"695","hashOfConfig":"660"},{"size":786,"mtime":1665475180000,"results":"696","hashOfConfig":"660"},{"size":11365,"mtime":1666010972000,"results":"697","hashOfConfig":"660"},{"size":794,"mtime":1664536648000,"results":"698","hashOfConfig":"660"},{"size":786,"mtime":1664536716000,"results":"699","hashOfConfig":"660"},{"size":780,"mtime":1665475086000,"results":"700","hashOfConfig":"660"},{"size":792,"mtime":1665475094000,"results":"701","hashOfConfig":"660"},{"size":795,"mtime":1665475042000,"results":"702","hashOfConfig":"660"},{"size":786,"mtime":1665475194000,"results":"703","hashOfConfig":"660"},{"size":845,"mtime":1665475188000,"results":"704","hashOfConfig":"660"},{"size":1739,"mtime":1665475068000,"results":"705","hashOfConfig":"660"},{"size":750,"mtime":1666010984000,"results":"706","hashOfConfig":"660"},{"size":792,"mtime":1665475124000,"results":"707","hashOfConfig":"660"},{"size":3876,"mtime":1666011026000,"results":"708","hashOfConfig":"660"},{"size":5815,"mtime":1666010956000,"results":"709","hashOfConfig":"660"},{"size":786,"mtime":1665475232000,"results":"710","hashOfConfig":"660"},{"size":4737,"mtime":1666013210000,"results":"711","hashOfConfig":"660"},{"size":247,"mtime":1655822386000,"results":"712","hashOfConfig":"660"},{"size":2428,"mtime":1664285494000,"results":"713","hashOfConfig":"660"},{"size":3972,"mtime":1664536642000,"results":"714","hashOfConfig":"660"},{"size":1077,"mtime":1665405184000,"results":"715","hashOfConfig":"660"},{"size":10098,"mtime":1670839458562,"results":"716","hashOfConfig":"660"},{"size":10453,"mtime":1666013202000,"results":"717","hashOfConfig":"660"},{"size":3071,"mtime":1666012834000,"results":"718","hashOfConfig":"660"},{"size":685,"mtime":1664879250000,"results":"719","hashOfConfig":"660"},{"size":160,"mtime":1655822386000,"results":"720","hashOfConfig":"660"},{"size":414,"mtime":1655822386000,"results":"721","hashOfConfig":"660"},{"size":691,"mtime":1655822386000,"results":"722","hashOfConfig":"660"},{"size":949,"mtime":1665474514000,"results":"723","hashOfConfig":"660"},{"size":1057,"mtime":1665063436000,"results":"724","hashOfConfig":"660"},{"size":1951,"mtime":1662450656000,"results":"725","hashOfConfig":"660"},{"size":8847,"mtime":1666185514000,"results":"726","hashOfConfig":"660"},{"size":2502,"mtime":1664777322000,"results":"727","hashOfConfig":"660"},{"size":682,"mtime":1662448654000,"results":"728","hashOfConfig":"660"},{"size":743,"mtime":1662450882000,"results":"729","hashOfConfig":"660"},{"size":1486,"mtime":1662467032000,"results":"730","hashOfConfig":"660"},{"size":2419,"mtime":1663841506000,"results":"731","hashOfConfig":"660"},{"size":1474,"mtime":1655822386000,"results":"732","hashOfConfig":"660"},{"size":172,"mtime":1655822386000,"results":"733","hashOfConfig":"660"},{"size":348,"mtime":1662448932000,"results":"734","hashOfConfig":"660"},{"size":11630,"mtime":1671085596764,"results":"735","hashOfConfig":"660"},{"size":2417,"mtime":1664803184000,"results":"736","hashOfConfig":"660"},{"size":1207,"mtime":1655822386000,"results":"737","hashOfConfig":"660"},{"size":1800,"mtime":1664879058000,"results":"738","hashOfConfig":"660"},{"size":1222,"mtime":1664869414000,"results":"739","hashOfConfig":"660"},{"size":227,"mtime":1655822386000,"results":"740","hashOfConfig":"660"},{"size":5721,"mtime":1665468336000,"results":"741","hashOfConfig":"660"},{"size":4067,"mtime":1665405192000,"results":"742","hashOfConfig":"660"},{"size":5304,"mtime":1665468302000,"results":"743","hashOfConfig":"660"},{"size":779,"mtime":1665137738000,"results":"744","hashOfConfig":"660"},{"size":1410,"mtime":1666185512000,"results":"745","hashOfConfig":"660"},{"size":2420,"mtime":1665991258000,"results":"746","hashOfConfig":"660"},{"size":4642,"mtime":1655822386000,"results":"747","hashOfConfig":"660"},{"size":7312,"mtime":1663656762000,"results":"748","hashOfConfig":"660"},{"size":2852,"mtime":1655822386000,"results":"749","hashOfConfig":"660"},{"size":6969,"mtime":1655822386000,"results":"750","hashOfConfig":"660"},{"size":197,"mtime":1655822386000,"results":"751","hashOfConfig":"660"},{"size":2297,"mtime":1655822386000,"results":"752","hashOfConfig":"660"},{"size":213,"mtime":1655822386000,"results":"753","hashOfConfig":"660"},{"size":141,"mtime":1655822386000,"results":"754","hashOfConfig":"660"},{"size":3164,"mtime":1655822386000,"results":"755","hashOfConfig":"660"},{"size":15049,"mtime":1655822386000,"results":"756","hashOfConfig":"660"},{"size":224,"mtime":1655822386000,"results":"757","hashOfConfig":"660"},{"size":399,"mtime":1663845336000,"results":"758","hashOfConfig":"660"},{"size":980,"mtime":1655822386000,"results":"759","hashOfConfig":"660"},{"size":1023,"mtime":1655822386000,"results":"760","hashOfConfig":"660"},{"size":1675,"mtime":1663839070000,"results":"761","hashOfConfig":"660"},{"size":1616,"mtime":1663755168000,"results":"762","hashOfConfig":"660"},{"size":2220,"mtime":1663315308000,"results":"763","hashOfConfig":"660"},{"size":1223,"mtime":1663755174000,"results":"764","hashOfConfig":"660"},{"size":1882,"mtime":1655822386000,"results":"765","hashOfConfig":"660"},{"size":697,"mtime":1655822386000,"results":"766","hashOfConfig":"660"},{"size":9528,"mtime":1655822386000,"results":"767","hashOfConfig":"660"},{"size":2121,"mtime":1665468942000,"results":"768","hashOfConfig":"660"},{"size":272,"mtime":1663656664000,"results":"769","hashOfConfig":"660"},{"size":283,"mtime":1655822386000,"results":"770","hashOfConfig":"660"},{"size":1035,"mtime":1663656610000,"results":"771","hashOfConfig":"660"},{"size":550,"mtime":1655822386000,"results":"772","hashOfConfig":"660"},{"size":472,"mtime":1655822386000,"results":"773","hashOfConfig":"660"},{"size":443,"mtime":1667395431000,"results":"774","hashOfConfig":"660"},{"size":7944,"mtime":1671167976318,"results":"775","hashOfConfig":"660"},{"size":2274,"mtime":1662988842000,"results":"776","hashOfConfig":"660"},{"size":347,"mtime":1655822386000,"results":"777","hashOfConfig":"660"},{"size":767,"mtime":1663845334000,"results":"778","hashOfConfig":"660"},{"size":434,"mtime":1665121566000,"results":"779","hashOfConfig":"660"},{"size":1148,"mtime":1666010840000,"results":"780","hashOfConfig":"660"},{"size":553,"mtime":1663746390000,"results":"781","hashOfConfig":"660"},{"size":815,"mtime":1663324054000,"results":"782","hashOfConfig":"660"},{"size":419,"mtime":1663320924000,"results":"783","hashOfConfig":"660"},{"size":992,"mtime":1664455442000,"results":"784","hashOfConfig":"660"},{"size":631,"mtime":1663224322000,"results":"785","hashOfConfig":"660"},{"size":389,"mtime":1663745688000,"results":"786","hashOfConfig":"660"},{"size":1736,"mtime":1665127228000,"results":"787","hashOfConfig":"660"},{"size":997,"mtime":1655822386000,"results":"788","hashOfConfig":"660"},{"size":336,"mtime":1655822386000,"results":"789","hashOfConfig":"660"},{"size":1232,"mtime":1655822386000,"results":"790","hashOfConfig":"660"},{"size":397,"mtime":1663845328000,"results":"791","hashOfConfig":"660"},{"size":436,"mtime":1663835156000,"results":"792","hashOfConfig":"660"},{"size":288,"mtime":1655822386000,"results":"793","hashOfConfig":"660"},{"size":957,"mtime":1663571500000,"results":"794","hashOfConfig":"660"},{"size":1999,"mtime":1655822386000,"results":"795","hashOfConfig":"660"},{"size":9350,"mtime":1665063434000,"results":"796","hashOfConfig":"660"},{"size":977,"mtime":1662988838000,"results":"797","hashOfConfig":"660"},{"size":1020,"mtime":1663063700000,"results":"798","hashOfConfig":"660"},{"size":701,"mtime":1663223490000,"results":"799","hashOfConfig":"660"},{"size":644,"mtime":1666011098000,"results":"800","hashOfConfig":"660"},{"size":1405,"mtime":1655822386000,"results":"801","hashOfConfig":"660"},{"size":1929,"mtime":1655822386000,"results":"802","hashOfConfig":"660"},{"size":1386,"mtime":1655822386000,"results":"803","hashOfConfig":"660"},{"size":1442,"mtime":1655822386000,"results":"804","hashOfConfig":"660"},{"size":1249,"mtime":1663067482000,"results":"805","hashOfConfig":"660"},{"size":1212,"mtime":1655822386000,"results":"806","hashOfConfig":"660"},{"size":1228,"mtime":1663845304000,"results":"807","hashOfConfig":"660"},{"size":17217,"mtime":1663332832000,"results":"808","hashOfConfig":"660"},{"size":1662,"mtime":1663140360000,"results":"809","hashOfConfig":"660"},{"size":5297,"mtime":1663845344000,"results":"810","hashOfConfig":"660"},{"size":9653,"mtime":1665474726000,"results":"811","hashOfConfig":"660"},{"size":12951,"mtime":1666185516000,"results":"812","hashOfConfig":"660"},{"size":4434,"mtime":1666010600000,"results":"813","hashOfConfig":"660"},{"size":20373,"mtime":1668682537000,"results":"814","hashOfConfig":"660"},{"size":5257,"mtime":1666010558000,"results":"815","hashOfConfig":"660"},{"size":777,"mtime":1665474778000,"results":"816","hashOfConfig":"660"},{"size":6790,"mtime":1666083964000,"results":"817","hashOfConfig":"660"},{"size":838,"mtime":1665474768000,"results":"818","hashOfConfig":"660"},{"size":2894,"mtime":1666010576000,"results":"819","hashOfConfig":"660"},{"size":4898,"mtime":1666004558000,"results":"820","hashOfConfig":"660"},{"size":1467,"mtime":1670566007621,"results":"821","hashOfConfig":"660"},{"size":11838,"mtime":1666011050000,"results":"822","hashOfConfig":"660"},{"size":25634,"mtime":1668325296000,"results":"823","hashOfConfig":"660"},{"size":789,"mtime":1666011054000,"results":"824","hashOfConfig":"660"},{"size":1767,"mtime":1664285492000,"results":"825","hashOfConfig":"660"},{"size":5729,"mtime":1665336320000,"results":"826","hashOfConfig":"660"},{"size":2102,"mtime":1655822386000,"results":"827","hashOfConfig":"660"},{"size":5291,"mtime":1670564712500,"results":"828","hashOfConfig":"660"},{"size":766,"mtime":1663313638000,"results":"829","hashOfConfig":"660"},{"size":762,"mtime":1663313572000,"results":"830","hashOfConfig":"660"},{"size":757,"mtime":1663313648000,"results":"831","hashOfConfig":"660"},{"size":17165,"mtime":1666011336000,"results":"832","hashOfConfig":"660"},{"size":14905,"mtime":1665569256000,"results":"833","hashOfConfig":"660"},{"size":760,"mtime":1663313400000,"results":"834","hashOfConfig":"660"},{"size":12744,"mtime":1666010914000,"results":"835","hashOfConfig":"660"},{"size":465,"mtime":1663845324000,"results":"836","hashOfConfig":"660"},{"size":783,"mtime":1665474978000,"results":"837","hashOfConfig":"660"},{"size":783,"mtime":1666010924000,"results":"838","hashOfConfig":"660"},{"size":780,"mtime":1665474968000,"results":"839","hashOfConfig":"660"},{"size":13357,"mtime":1666003864000,"results":"840","hashOfConfig":"660"},{"size":14647,"mtime":1666003882000,"results":"841","hashOfConfig":"660"},{"size":8175,"mtime":1666003860000,"results":"842","hashOfConfig":"660"},{"size":660,"mtime":1663936364000,"results":"843","hashOfConfig":"660"},{"size":794,"mtime":1665137638000,"results":"844","hashOfConfig":"660"},{"size":4831,"mtime":1666097446000,"results":"845","hashOfConfig":"660"},{"size":498,"mtime":1663653974000,"results":"846","hashOfConfig":"660"},{"size":1481,"mtime":1663845348000,"results":"847","hashOfConfig":"660"},{"size":6793,"mtime":1665063430000,"results":"848","hashOfConfig":"660"},{"size":3409,"mtime":1665127868000,"results":"849","hashOfConfig":"660"},{"size":1572,"mtime":1665991244000,"results":"850","hashOfConfig":"660"},{"size":990,"mtime":1665393400000,"results":"851","hashOfConfig":"660"},{"size":1329,"mtime":1664890784000,"results":"852","hashOfConfig":"660"},{"size":528,"mtime":1666010326000,"results":"853","hashOfConfig":"660"},{"size":7863,"mtime":1667382007000,"results":"854","hashOfConfig":"660"},{"size":989,"mtime":1665727212000,"results":"855","hashOfConfig":"660"},{"size":1644,"mtime":1663832428000,"results":"856","hashOfConfig":"660"},{"size":1891,"mtime":1663832428000,"results":"857","hashOfConfig":"660"},{"size":3073,"mtime":1664886636000,"results":"858","hashOfConfig":"660"},{"size":739,"mtime":1665474448000,"results":"859","hashOfConfig":"660"},{"size":1503,"mtime":1663832428000,"results":"860","hashOfConfig":"660"},{"size":6287,"mtime":1666096114000,"results":"861","hashOfConfig":"660"},{"size":162,"mtime":1667390537000,"results":"862","hashOfConfig":"660"},{"size":619,"mtime":1655822386000,"results":"863","hashOfConfig":"660"},{"size":1643,"mtime":1667382359000,"results":"864","hashOfConfig":"660"},{"size":6711,"mtime":1667382296000,"results":"865","hashOfConfig":"660"},{"size":2460,"mtime":1668325062000,"results":"866","hashOfConfig":"660"},{"size":2603,"mtime":1666010454000,"results":"867","hashOfConfig":"660"},{"size":699,"mtime":1663930254000,"results":"868","hashOfConfig":"660"},{"size":2359,"mtime":1666005612000,"results":"869","hashOfConfig":"660"},{"size":1746,"mtime":1663936354000,"results":"870","hashOfConfig":"660"},{"size":857,"mtime":1655822386000,"results":"871","hashOfConfig":"660"},{"size":1757,"mtime":1655822386000,"results":"872","hashOfConfig":"660"},{"size":1239,"mtime":1655822386000,"results":"873","hashOfConfig":"660"},{"size":6339,"mtime":1665553954000,"results":"874","hashOfConfig":"660"},{"size":1832,"mtime":1663223480000,"results":"875","hashOfConfig":"660"},{"size":1226,"mtime":1655822386000,"results":"876","hashOfConfig":"660"},{"size":1201,"mtime":1662447024000,"results":"877","hashOfConfig":"660"},{"size":1734,"mtime":1655822386000,"results":"878","hashOfConfig":"660"},{"size":1205,"mtime":1655822386000,"results":"879","hashOfConfig":"660"},{"size":1375,"mtime":1655822386000,"results":"880","hashOfConfig":"660"},{"size":6423,"mtime":1655822386000,"results":"881","hashOfConfig":"660"},{"size":1440,"mtime":1655822386000,"results":"882","hashOfConfig":"660"},{"size":2124,"mtime":1655822386000,"results":"883","hashOfConfig":"660"},{"size":1460,"mtime":1655822386000,"results":"884","hashOfConfig":"660"},{"size":801,"mtime":1655822386000,"results":"885","hashOfConfig":"660"},{"size":641,"mtime":1655822386000,"results":"886","hashOfConfig":"660"},{"size":1063,"mtime":1655822386000,"results":"887","hashOfConfig":"660"},{"size":1961,"mtime":1655822386000,"results":"888","hashOfConfig":"660"},{"size":1244,"mtime":1655822386000,"results":"889","hashOfConfig":"660"},{"size":811,"mtime":1655822386000,"results":"890","hashOfConfig":"660"},{"size":1320,"mtime":1655822386000,"results":"891","hashOfConfig":"660"},{"size":1423,"mtime":1655822386000,"results":"892","hashOfConfig":"660"},{"size":1029,"mtime":1655822386000,"results":"893","hashOfConfig":"660"},{"size":1890,"mtime":1655822386000,"results":"894","hashOfConfig":"660"},{"size":2017,"mtime":1655822386000,"results":"895","hashOfConfig":"660"},{"size":2452,"mtime":1655822386000,"results":"896","hashOfConfig":"660"},{"size":1948,"mtime":1655822386000,"results":"897","hashOfConfig":"660"},{"size":3537,"mtime":1655822386000,"results":"898","hashOfConfig":"660"},{"size":2662,"mtime":1655822386000,"results":"899","hashOfConfig":"660"},{"size":3353,"mtime":1655822386000,"results":"900","hashOfConfig":"660"},{"size":2497,"mtime":1655822386000,"results":"901","hashOfConfig":"660"},{"size":3255,"mtime":1663832428000,"results":"902","hashOfConfig":"660"},{"size":1240,"mtime":1655822386000,"results":"903","hashOfConfig":"660"},{"size":2586,"mtime":1655822386000,"results":"904","hashOfConfig":"660"},{"size":1548,"mtime":1664881440000,"results":"905","hashOfConfig":"660"},{"size":1719,"mtime":1655822386000,"results":"906","hashOfConfig":"660"},{"size":3231,"mtime":1655822386000,"results":"907","hashOfConfig":"660"},{"size":2036,"mtime":1655822386000,"results":"908","hashOfConfig":"660"},{"size":1642,"mtime":1655822386000,"results":"909","hashOfConfig":"660"},{"size":1776,"mtime":1655822386000,"results":"910","hashOfConfig":"660"},{"size":3949,"mtime":1655822386000,"results":"911","hashOfConfig":"660"},{"size":5528,"mtime":1662445718000,"results":"912","hashOfConfig":"660"},{"size":12146,"mtime":1670587394898,"results":"913","hashOfConfig":"660"},{"size":10167,"mtime":1666011282000,"results":"914","hashOfConfig":"660"},{"size":756,"mtime":1666011320000,"results":"915","hashOfConfig":"660"},{"size":772,"mtime":1663746976000,"results":"916","hashOfConfig":"660"},{"size":15048,"mtime":1666010686000,"results":"917","hashOfConfig":"660"},{"size":772,"mtime":1663746950000,"results":"918","hashOfConfig":"660"},{"size":17044,"mtime":1666010618000,"results":"919","hashOfConfig":"660"},{"size":17439,"mtime":1666010654000,"results":"920","hashOfConfig":"660"},{"size":783,"mtime":1664197714000,"results":"921","hashOfConfig":"660"},{"size":11955,"mtime":1666010716000,"results":"922","hashOfConfig":"660"},{"size":766,"mtime":1663746848000,"results":"923","hashOfConfig":"660"},{"size":1690,"mtime":1665123202000,"results":"924","hashOfConfig":"660"},{"size":4059,"mtime":1665126418000,"results":"925","hashOfConfig":"660"},{"size":765,"mtime":1666011170000,"results":"926","hashOfConfig":"660"},{"size":666,"mtime":1666011150000,"results":"927","hashOfConfig":"660"},{"size":746,"mtime":1666011248000,"results":"928","hashOfConfig":"660"},{"size":741,"mtime":1666011206000,"results":"929","hashOfConfig":"660"},{"size":716,"mtime":1666011114000,"results":"930","hashOfConfig":"660"},{"size":740,"mtime":1666011242000,"results":"931","hashOfConfig":"660"},{"size":767,"mtime":1666011164000,"results":"932","hashOfConfig":"660"},{"size":713,"mtime":1666011236000,"results":"933","hashOfConfig":"660"},{"size":749,"mtime":1670925731832,"results":"934","hashOfConfig":"660"},{"size":746,"mtime":1670840665469,"results":"935","hashOfConfig":"660"},{"size":759,"mtime":1666013206000,"results":"936","hashOfConfig":"660"},{"size":746,"mtime":1666011136000,"results":"937","hashOfConfig":"660"},{"size":1617,"mtime":1666011126000,"results":"938","hashOfConfig":"660"},{"size":753,"mtime":1670849588023,"results":"939","hashOfConfig":"660"},{"size":716,"mtime":1666010320000,"results":"940","hashOfConfig":"660"},{"size":7963,"mtime":1670498164700,"results":"941","hashOfConfig":"660"},{"size":40758,"mtime":1666011182000,"results":"942","hashOfConfig":"660"},{"size":2666,"mtime":1667395615000,"results":"943","hashOfConfig":"660"},{"size":567,"mtime":1667391093000,"results":"944","hashOfConfig":"660"},{"size":644,"mtime":1655822386000,"results":"945","hashOfConfig":"660"},{"size":408,"mtime":1655822386000,"results":"946","hashOfConfig":"660"},{"size":1420,"mtime":1655822386000,"results":"947","hashOfConfig":"660"},{"size":83207,"mtime":1666011198000,"results":"948","hashOfConfig":"660"},{"size":1054,"mtime":1667391727000,"results":"949","hashOfConfig":"660"},{"size":773,"mtime":1655822386000,"results":"950","hashOfConfig":"660"},{"size":1112,"mtime":1655822386000,"results":"951","hashOfConfig":"660"},{"size":5636,"mtime":1671015416510,"results":"952","hashOfConfig":"660"},{"size":4341,"mtime":1670567639144,"results":"953","hashOfConfig":"660"},{"size":4123,"mtime":1671091125232,"results":"954","hashOfConfig":"660"},{"size":5057,"mtime":1670589818721,"results":"955","hashOfConfig":"660"},{"size":3347,"mtime":1670827183066,"results":"956","hashOfConfig":"660"},{"size":5695,"mtime":1670589754472,"results":"957","hashOfConfig":"660"},{"size":3369,"mtime":1671103893306,"results":"958","hashOfConfig":"660"},{"size":6115,"mtime":1670589851489,"results":"959","hashOfConfig":"660"},{"size":6950,"mtime":1670831615641,"results":"960","hashOfConfig":"660"},{"size":8611,"mtime":1670589408113,"results":"961","hashOfConfig":"660"},{"size":12614,"mtime":1671167900260,"results":"962","hashOfConfig":"660"},{"size":12603,"mtime":1671020369686,"results":"963","hashOfConfig":"660"},{"size":7032,"mtime":1671016191798,"results":"964","hashOfConfig":"660"},{"size":12394,"mtime":1671020255528,"results":"965","hashOfConfig":"660"},{"size":11838,"mtime":1671095324771,"results":"966","hashOfConfig":"660"},{"size":12365,"mtime":1671097106153,"results":"967","hashOfConfig":"660"},{"size":11614,"mtime":1671108595311,"results":"968","hashOfConfig":"660"},{"size":11834,"mtime":1671100670806,"results":"969","hashOfConfig":"660"},{"size":11273,"mtime":1671107213084,"results":"970","hashOfConfig":"660"},{"size":12832,"mtime":1671102563571,"results":"971","hashOfConfig":"660"},{"size":11452,"mtime":1671101309187,"results":"972","hashOfConfig":"660"},{"size":5641,"mtime":1671015568492,"results":"973","hashOfConfig":"660"},{"size":7036,"mtime":1671103602942,"results":"974","hashOfConfig":"660"},{"size":6118,"mtime":1671021465011,"results":"975","hashOfConfig":"660"},{"size":6954,"mtime":1671023869014,"results":"976","hashOfConfig":"660"},{"size":12602,"mtime":1671084379578,"results":"977","hashOfConfig":"660"},{"size":7967,"mtime":1671083874493,"results":"978","hashOfConfig":"660"},{"size":11578,"mtime":1671086997562,"results":"979","hashOfConfig":"660"},{"size":4345,"mtime":1671086444511,"results":"980","hashOfConfig":"660"},{"size":4129,"mtime":1671091136285,"results":"981","hashOfConfig":"660"},{"size":5061,"mtime":1671097264617,"results":"982","hashOfConfig":"660"},{"size":5719,"mtime":1671101363268,"results":"983","hashOfConfig":"660"},{"size":3351,"mtime":1671104026471,"results":"984","hashOfConfig":"660"},{"size":8615,"mtime":1671099351190,"results":"985","hashOfConfig":"660"},{"size":3373,"mtime":1671099809857,"results":"986","hashOfConfig":"660"},{"size":12141,"mtime":1671109910315,"results":"987","hashOfConfig":"660"},{"size":10107,"mtime":1671173307218,"results":"988","hashOfConfig":"660"},{"size":848,"mtime":1655822386000,"results":"989","hashOfConfig":"990"},{"size":4933,"mtime":1655822386000,"results":"991","hashOfConfig":"990"},{"size":649,"mtime":1667396500000,"results":"992","hashOfConfig":"990"},{"size":549,"mtime":1655822386000,"results":"993","hashOfConfig":"990"},{"size":878,"mtime":1655822386000,"results":"994","hashOfConfig":"990"},{"size":4806,"mtime":1670564236670,"results":"995","hashOfConfig":"990"},{"size":1888,"mtime":1664456864000,"results":"996","hashOfConfig":"990"},{"size":130,"mtime":1655822386000,"results":"997","hashOfConfig":"990"},{"size":1706,"mtime":1663754380000,"results":"998","hashOfConfig":"990"},{"size":264,"mtime":1655822386000,"results":"999","hashOfConfig":"990"},{"size":374,"mtime":1655822386000,"results":"1000","hashOfConfig":"990"},{"size":1884,"mtime":1655822386000,"results":"1001","hashOfConfig":"990"},{"size":821,"mtime":1665474468000,"results":"1002","hashOfConfig":"990"},{"size":4420,"mtime":1663837616000,"results":"1003","hashOfConfig":"990"},{"size":255,"mtime":1664456818000,"results":"1004","hashOfConfig":"990"},{"size":1009,"mtime":1663767386000,"results":"1005","hashOfConfig":"990"},{"size":115,"mtime":1655822386000,"results":"1006","hashOfConfig":"990"},{"size":141,"mtime":1655822386000,"results":"1007","hashOfConfig":"990"},{"size":827,"mtime":1664860598000,"results":"1008","hashOfConfig":"990"},{"size":2079,"mtime":1666011462000,"results":"1009","hashOfConfig":"990"},{"size":4883,"mtime":1666011418000,"results":"1010","hashOfConfig":"990"},{"size":3380,"mtime":1666011468000,"results":"1011","hashOfConfig":"990"},{"size":744,"mtime":1666011398000,"results":"1012","hashOfConfig":"990"},{"size":7069,"mtime":1666011390000,"results":"1013","hashOfConfig":"990"},{"size":4737,"mtime":1666013210000,"results":"1014","hashOfConfig":"990"},{"size":11118,"mtime":1666011446000,"results":"1015","hashOfConfig":"990"},{"size":28868,"mtime":1666011434000,"results":"1016","hashOfConfig":"990"},{"size":247,"mtime":1655822386000,"results":"1017","hashOfConfig":"990"},{"size":1077,"mtime":1665405184000,"results":"1018","hashOfConfig":"990"},{"size":2420,"mtime":1665991258000,"results":"1019","hashOfConfig":"990"},{"size":10453,"mtime":1666013202000,"results":"1020","hashOfConfig":"990"},{"size":3071,"mtime":1666012834000,"results":"1021","hashOfConfig":"990"},{"size":949,"mtime":1665474514000,"results":"1022","hashOfConfig":"990"},{"size":10098,"mtime":1670839458562,"results":"1023","hashOfConfig":"990"},{"size":1410,"mtime":1666185512000,"results":"1024","hashOfConfig":"990"},{"size":685,"mtime":1664879250000,"results":"1025","hashOfConfig":"990"},{"size":414,"mtime":1655822386000,"results":"1026","hashOfConfig":"990"},{"size":2419,"mtime":1663841506000,"results":"1027","hashOfConfig":"990"},{"size":160,"mtime":1655822386000,"results":"1028","hashOfConfig":"990"},{"size":172,"mtime":1655822386000,"results":"1029","hashOfConfig":"990"},{"size":177,"mtime":1655822386000,"results":"1030","hashOfConfig":"990"},{"size":779,"mtime":1665137738000,"results":"1031","hashOfConfig":"990"},{"size":4413,"mtime":1663839594000,"results":"1032","hashOfConfig":"990"},{"size":691,"mtime":1655822386000,"results":"1033","hashOfConfig":"990"},{"size":4067,"mtime":1665405192000,"results":"1034","hashOfConfig":"990"},{"size":1474,"mtime":1655822386000,"results":"1035","hashOfConfig":"990"},{"size":1207,"mtime":1655822386000,"results":"1036","hashOfConfig":"990"},{"size":11630,"mtime":1671085596764,"results":"1037","hashOfConfig":"990"},{"size":1800,"mtime":1664879058000,"results":"1038","hashOfConfig":"990"},{"size":682,"mtime":1662448654000,"results":"1039","hashOfConfig":"990"},{"size":1951,"mtime":1662450656000,"results":"1040","hashOfConfig":"990"},{"size":8847,"mtime":1666185514000,"results":"1041","hashOfConfig":"990"},{"size":2502,"mtime":1664777322000,"results":"1042","hashOfConfig":"990"},{"size":227,"mtime":1655822386000,"results":"1043","hashOfConfig":"990"},{"size":743,"mtime":1662450882000,"results":"1044","hashOfConfig":"990"},{"size":1486,"mtime":1662467032000,"results":"1045","hashOfConfig":"990"},{"size":1222,"mtime":1664869414000,"results":"1046","hashOfConfig":"990"},{"size":5721,"mtime":1665468336000,"results":"1047","hashOfConfig":"990"},{"size":5304,"mtime":1665468302000,"results":"1048","hashOfConfig":"990"},{"size":348,"mtime":1662448932000,"results":"1049","hashOfConfig":"990"},{"size":4642,"mtime":1655822386000,"results":"1050","hashOfConfig":"990"},{"size":2852,"mtime":1655822386000,"results":"1051","hashOfConfig":"990"},{"size":7312,"mtime":1663656762000,"results":"1052","hashOfConfig":"990"},{"size":2417,"mtime":1664803184000,"results":"1053","hashOfConfig":"990"},{"size":6969,"mtime":1655822386000,"results":"1054","hashOfConfig":"990"},{"size":197,"mtime":1655822386000,"results":"1055","hashOfConfig":"990"},{"size":2297,"mtime":1655822386000,"results":"1056","hashOfConfig":"990"},{"size":213,"mtime":1655822386000,"results":"1057","hashOfConfig":"990"},{"size":3164,"mtime":1655822386000,"results":"1058","hashOfConfig":"990"},{"size":15049,"mtime":1655822386000,"results":"1059","hashOfConfig":"990"},{"size":5455,"mtime":1663845364000,"results":"1060","hashOfConfig":"990"},{"size":399,"mtime":1663845336000,"results":"1061","hashOfConfig":"990"},{"size":980,"mtime":1655822386000,"results":"1062","hashOfConfig":"990"},{"size":224,"mtime":1655822386000,"results":"1063","hashOfConfig":"990"},{"size":1023,"mtime":1655822386000,"results":"1064","hashOfConfig":"990"},{"size":1616,"mtime":1663755168000,"results":"1065","hashOfConfig":"990"},{"size":443,"mtime":1667395431000,"results":"1066","hashOfConfig":"990"},{"size":1675,"mtime":1663839070000,"results":"1067","hashOfConfig":"990"},{"size":2220,"mtime":1663315308000,"results":"1068","hashOfConfig":"990"},{"size":1882,"mtime":1655822386000,"results":"1069","hashOfConfig":"990"},{"size":1223,"mtime":1663755174000,"results":"1070","hashOfConfig":"990"},{"size":697,"mtime":1655822386000,"results":"1071","hashOfConfig":"990"},{"size":9528,"mtime":1655822386000,"results":"1072","hashOfConfig":"990"},{"size":2121,"mtime":1665468942000,"results":"1073","hashOfConfig":"990"},{"size":283,"mtime":1655822386000,"results":"1074","hashOfConfig":"990"},{"size":1035,"mtime":1663656610000,"results":"1075","hashOfConfig":"990"},{"size":272,"mtime":1663656664000,"results":"1076","hashOfConfig":"990"},{"size":472,"mtime":1655822386000,"results":"1077","hashOfConfig":"990"},{"size":550,"mtime":1655822386000,"results":"1078","hashOfConfig":"990"},{"size":2274,"mtime":1662988842000,"results":"1079","hashOfConfig":"990"},{"size":434,"mtime":1665121566000,"results":"1080","hashOfConfig":"990"},{"size":389,"mtime":1663745688000,"results":"1081","hashOfConfig":"990"},{"size":3293,"mtime":1663760218000,"results":"1082","hashOfConfig":"990"},{"size":7944,"mtime":1671167976318,"results":"1083","hashOfConfig":"990"},{"size":1148,"mtime":1666010840000,"results":"1084","hashOfConfig":"990"},{"size":553,"mtime":1663746390000,"results":"1085","hashOfConfig":"990"},{"size":815,"mtime":1663324054000,"results":"1086","hashOfConfig":"990"},{"size":419,"mtime":1663320924000,"results":"1087","hashOfConfig":"990"},{"size":767,"mtime":1663845334000,"results":"1088","hashOfConfig":"990"},{"size":992,"mtime":1664455442000,"results":"1089","hashOfConfig":"990"},{"size":1736,"mtime":1665127228000,"results":"1090","hashOfConfig":"990"},{"size":631,"mtime":1663224322000,"results":"1091","hashOfConfig":"990"},{"size":347,"mtime":1655822386000,"results":"1092","hashOfConfig":"990"},{"size":1420,"mtime":1655822386000,"results":"1093","hashOfConfig":"990"},{"size":567,"mtime":1667391093000,"results":"1094","hashOfConfig":"990"},{"size":408,"mtime":1655822386000,"results":"1095","hashOfConfig":"990"},{"size":644,"mtime":1655822386000,"results":"1096","hashOfConfig":"990"},{"size":997,"mtime":1655822386000,"results":"1097","hashOfConfig":"990"},{"size":336,"mtime":1655822386000,"results":"1098","hashOfConfig":"990"},{"size":1232,"mtime":1655822386000,"results":"1099","hashOfConfig":"990"},{"size":436,"mtime":1663835156000,"results":"1100","hashOfConfig":"990"},{"size":288,"mtime":1655822386000,"results":"1101","hashOfConfig":"990"},{"size":701,"mtime":1663223490000,"results":"1102","hashOfConfig":"990"},{"size":1020,"mtime":1663063700000,"results":"1103","hashOfConfig":"990"},{"size":977,"mtime":1662988838000,"results":"1104","hashOfConfig":"990"},{"size":1999,"mtime":1655822386000,"results":"1105","hashOfConfig":"990"},{"size":957,"mtime":1663571500000,"results":"1106","hashOfConfig":"990"},{"size":4059,"mtime":1665126418000,"results":"1107","hashOfConfig":"990"},{"size":789,"mtime":1666011054000,"results":"1108","hashOfConfig":"990"},{"size":3876,"mtime":1666011026000,"results":"1109","hashOfConfig":"990"},{"size":11838,"mtime":1666011050000,"results":"1110","hashOfConfig":"990"},{"size":5815,"mtime":1666010956000,"results":"1111","hashOfConfig":"990"},{"size":786,"mtime":1665475232000,"results":"1112","hashOfConfig":"990"},{"size":1739,"mtime":1665475068000,"results":"1113","hashOfConfig":"990"},{"size":845,"mtime":1665475188000,"results":"1114","hashOfConfig":"990"},{"size":786,"mtime":1665475194000,"results":"1115","hashOfConfig":"990"},{"size":1690,"mtime":1665123202000,"results":"1116","hashOfConfig":"990"},{"size":766,"mtime":1663762960000,"results":"1117","hashOfConfig":"990"},{"size":15048,"mtime":1666010686000,"results":"1118","hashOfConfig":"990"},{"size":644,"mtime":1666011098000,"results":"1119","hashOfConfig":"990"},{"size":12146,"mtime":1670587394898,"results":"1120","hashOfConfig":"990"},{"size":773,"mtime":1655822386000,"results":"1121","hashOfConfig":"990"},{"size":1054,"mtime":1667391727000,"results":"1122","hashOfConfig":"990"},{"size":1112,"mtime":1655822386000,"results":"1123","hashOfConfig":"990"},{"size":783,"mtime":1665474978000,"results":"1124","hashOfConfig":"990"},{"size":780,"mtime":1665474968000,"results":"1125","hashOfConfig":"990"},{"size":12744,"mtime":1666010914000,"results":"1126","hashOfConfig":"990"},{"size":783,"mtime":1666010924000,"results":"1127","hashOfConfig":"990"},{"size":14647,"mtime":1666003882000,"results":"1128","hashOfConfig":"990"},{"size":13357,"mtime":1666003864000,"results":"1129","hashOfConfig":"990"},{"size":8175,"mtime":1666003860000,"results":"1130","hashOfConfig":"990"},{"size":766,"mtime":1663313638000,"results":"1131","hashOfConfig":"990"},{"size":4434,"mtime":1666010600000,"results":"1132","hashOfConfig":"990"},{"size":5729,"mtime":1665336320000,"results":"1133","hashOfConfig":"990"},{"size":5297,"mtime":1663845344000,"results":"1134","hashOfConfig":"990"},{"size":1442,"mtime":1655822386000,"results":"1135","hashOfConfig":"990"},{"size":17217,"mtime":1663332832000,"results":"1136","hashOfConfig":"990"},{"size":1228,"mtime":1663845304000,"results":"1137","hashOfConfig":"990"},{"size":1662,"mtime":1663140360000,"results":"1138","hashOfConfig":"990"},{"size":1929,"mtime":1655822386000,"results":"1139","hashOfConfig":"990"},{"size":1212,"mtime":1655822386000,"results":"1140","hashOfConfig":"990"},{"size":1405,"mtime":1655822386000,"results":"1141","hashOfConfig":"990"},{"size":1249,"mtime":1663067482000,"results":"1142","hashOfConfig":"990"},{"size":1386,"mtime":1655822386000,"results":"1143","hashOfConfig":"990"},{"size":5291,"mtime":1670564712500,"results":"1144","hashOfConfig":"990"},{"size":2102,"mtime":1655822386000,"results":"1145","hashOfConfig":"990"},{"size":9350,"mtime":1665063434000,"results":"1146","hashOfConfig":"990"},{"size":1767,"mtime":1664285492000,"results":"1147","hashOfConfig":"990"},{"size":4831,"mtime":1666097446000,"results":"1148","hashOfConfig":"990"},{"size":794,"mtime":1665137638000,"results":"1149","hashOfConfig":"990"},{"size":2586,"mtime":1655822386000,"results":"1150","hashOfConfig":"990"},{"size":5528,"mtime":1662445718000,"results":"1151","hashOfConfig":"990"},{"size":1746,"mtime":1663936354000,"results":"1152","hashOfConfig":"990"},{"size":3409,"mtime":1665127868000,"results":"1153","hashOfConfig":"990"},{"size":660,"mtime":1663936364000,"results":"1154","hashOfConfig":"990"},{"size":2428,"mtime":1664285494000,"results":"1155","hashOfConfig":"990"},{"size":498,"mtime":1663653974000,"results":"1156","hashOfConfig":"990"},{"size":6339,"mtime":1665553954000,"results":"1157","hashOfConfig":"990"},{"size":1440,"mtime":1655822386000,"results":"1158","hashOfConfig":"990"},{"size":1460,"mtime":1655822386000,"results":"1159","hashOfConfig":"990"},{"size":641,"mtime":1655822386000,"results":"1160","hashOfConfig":"990"},{"size":801,"mtime":1655822386000,"results":"1161","hashOfConfig":"990"},{"size":1961,"mtime":1655822386000,"results":"1162","hashOfConfig":"990"},{"size":2359,"mtime":1666005612000,"results":"1163","hashOfConfig":"990"},{"size":1329,"mtime":1664890784000,"results":"1164","hashOfConfig":"990"},{"size":1832,"mtime":1663223480000,"results":"1165","hashOfConfig":"990"},{"size":1201,"mtime":1662447024000,"results":"1166","hashOfConfig":"990"},{"size":2017,"mtime":1655822386000,"results":"1167","hashOfConfig":"990"},{"size":2452,"mtime":1655822386000,"results":"1168","hashOfConfig":"990"},{"size":3537,"mtime":1655822386000,"results":"1169","hashOfConfig":"990"},{"size":3353,"mtime":1655822386000,"results":"1170","hashOfConfig":"990"},{"size":857,"mtime":1655822386000,"results":"1171","hashOfConfig":"990"},{"size":1481,"mtime":1663845348000,"results":"1172","hashOfConfig":"990"},{"size":6793,"mtime":1665063430000,"results":"1173","hashOfConfig":"990"},{"size":2497,"mtime":1655822386000,"results":"1174","hashOfConfig":"990"},{"size":1057,"mtime":1665063436000,"results":"1175","hashOfConfig":"990"},{"size":3255,"mtime":1663832428000,"results":"1176","hashOfConfig":"990"},{"size":2662,"mtime":1655822386000,"results":"1177","hashOfConfig":"990"},{"size":1240,"mtime":1655822386000,"results":"1178","hashOfConfig":"990"},{"size":2124,"mtime":1655822386000,"results":"1179","hashOfConfig":"990"},{"size":1239,"mtime":1655822386000,"results":"1180","hashOfConfig":"990"},{"size":1757,"mtime":1655822386000,"results":"1181","hashOfConfig":"990"},{"size":1063,"mtime":1655822386000,"results":"1182","hashOfConfig":"990"},{"size":811,"mtime":1655822386000,"results":"1183","hashOfConfig":"990"},{"size":1244,"mtime":1655822386000,"results":"1184","hashOfConfig":"990"},{"size":1423,"mtime":1655822386000,"results":"1185","hashOfConfig":"990"},{"size":1029,"mtime":1655822386000,"results":"1186","hashOfConfig":"990"},{"size":1644,"mtime":1663832428000,"results":"1187","hashOfConfig":"990"},{"size":1891,"mtime":1663832428000,"results":"1188","hashOfConfig":"990"},{"size":1503,"mtime":1663832428000,"results":"1189","hashOfConfig":"990"},{"size":619,"mtime":1655822386000,"results":"1190","hashOfConfig":"990"},{"size":1320,"mtime":1655822386000,"results":"1191","hashOfConfig":"990"},{"size":1948,"mtime":1655822386000,"results":"1192","hashOfConfig":"990"},{"size":6287,"mtime":1666096114000,"results":"1193","hashOfConfig":"990"},{"size":1890,"mtime":1655822386000,"results":"1194","hashOfConfig":"990"},{"size":6711,"mtime":1667382296000,"results":"1195","hashOfConfig":"990"},{"size":1643,"mtime":1667382359000,"results":"1196","hashOfConfig":"990"},{"size":2603,"mtime":1666010454000,"results":"1197","hashOfConfig":"990"},{"size":989,"mtime":1665727212000,"results":"1198","hashOfConfig":"990"},{"size":7863,"mtime":1667382007000,"results":"1199","hashOfConfig":"990"},{"size":1226,"mtime":1655822386000,"results":"1200","hashOfConfig":"990"},{"size":1734,"mtime":1655822386000,"results":"1201","hashOfConfig":"990"},{"size":1375,"mtime":1655822386000,"results":"1202","hashOfConfig":"990"},{"size":1205,"mtime":1655822386000,"results":"1203","hashOfConfig":"990"},{"size":6423,"mtime":1655822386000,"results":"1204","hashOfConfig":"990"},{"size":528,"mtime":1666010326000,"results":"1205","hashOfConfig":"990"},{"size":1719,"mtime":1655822386000,"results":"1206","hashOfConfig":"990"},{"size":1548,"mtime":1664881440000,"results":"1207","hashOfConfig":"990"},{"size":2036,"mtime":1655822386000,"results":"1208","hashOfConfig":"990"},{"size":3231,"mtime":1655822386000,"results":"1209","hashOfConfig":"990"},{"size":1642,"mtime":1655822386000,"results":"1210","hashOfConfig":"990"},{"size":1776,"mtime":1655822386000,"results":"1211","hashOfConfig":"990"},{"size":3949,"mtime":1655822386000,"results":"1212","hashOfConfig":"990"},{"size":397,"mtime":1663845328000,"results":"1213","hashOfConfig":"990"},{"size":12951,"mtime":1666185516000,"results":"1214","hashOfConfig":"990"},{"size":20373,"mtime":1668682537000,"results":"1215","hashOfConfig":"990"},{"size":5257,"mtime":1666010558000,"results":"1216","hashOfConfig":"990"},{"size":9653,"mtime":1665474726000,"results":"1217","hashOfConfig":"990"},{"size":6790,"mtime":1666083964000,"results":"1218","hashOfConfig":"990"},{"size":777,"mtime":1665474778000,"results":"1219","hashOfConfig":"990"},{"size":2894,"mtime":1666010576000,"results":"1220","hashOfConfig":"990"},{"size":4898,"mtime":1666004558000,"results":"1221","hashOfConfig":"990"},{"size":838,"mtime":1665474768000,"results":"1222","hashOfConfig":"990"},{"size":25634,"mtime":1668325296000,"results":"1223","hashOfConfig":"990"},{"size":1467,"mtime":1670566007621,"results":"1224","hashOfConfig":"990"},{"size":8656,"mtime":1671455239497,"results":"1225","hashOfConfig":"990"},{"size":762,"mtime":1663313572000,"results":"1226","hashOfConfig":"990"},{"size":760,"mtime":1663313400000,"results":"1227","hashOfConfig":"990"},{"size":14905,"mtime":1665569256000,"results":"1228","hashOfConfig":"990"},{"size":17165,"mtime":1666011336000,"results":"1229","hashOfConfig":"990"},{"size":756,"mtime":1666011320000,"results":"1230","hashOfConfig":"990"},{"size":10167,"mtime":1666011282000,"results":"1231","hashOfConfig":"990"},{"size":757,"mtime":1663313648000,"results":"1232","hashOfConfig":"990"},{"size":12832,"mtime":1671102563571,"results":"1233","hashOfConfig":"990"},{"size":772,"mtime":1663746976000,"results":"1234","hashOfConfig":"990"},{"size":17439,"mtime":1666010654000,"results":"1235","hashOfConfig":"990"},{"size":772,"mtime":1663746950000,"results":"1236","hashOfConfig":"990"},{"size":5701,"mtime":1671454621022,"results":"1237","hashOfConfig":"990"},{"size":17044,"mtime":1666010618000,"results":"1238","hashOfConfig":"990"},{"size":11452,"mtime":1671101309187,"results":"1239","hashOfConfig":"990"},{"size":3351,"mtime":1671454495096,"results":"1240","hashOfConfig":"990"},{"size":11273,"mtime":1671107213084,"results":"1241","hashOfConfig":"990"},{"size":11834,"mtime":1671100670806,"results":"1242","hashOfConfig":"990"},{"size":6091,"mtime":1671454147983,"results":"1243","hashOfConfig":"990"},{"size":766,"mtime":1663746848000,"results":"1244","hashOfConfig":"990"},{"size":5052,"mtime":1671454042845,"results":"1245","hashOfConfig":"990"},{"size":4129,"mtime":1671091136285,"results":"1246","hashOfConfig":"990"},{"size":12365,"mtime":1671097106153,"results":"1247","hashOfConfig":"990"},{"size":11838,"mtime":1671095324771,"results":"1248","hashOfConfig":"990"},{"size":783,"mtime":1664197714000,"results":"1249","hashOfConfig":"990"},{"size":11955,"mtime":1666010716000,"results":"1250","hashOfConfig":"990"},{"size":765,"mtime":1666011170000,"results":"1251","hashOfConfig":"990"},{"size":666,"mtime":1666011150000,"results":"1252","hashOfConfig":"990"},{"size":8652,"mtime":1671455001821,"results":"1253","hashOfConfig":"990"},{"size":746,"mtime":1666011248000,"results":"1254","hashOfConfig":"990"},{"size":5677,"mtime":1671454443955,"results":"1255","hashOfConfig":"990"},{"size":741,"mtime":1666011206000,"results":"1256","hashOfConfig":"990"},{"size":3347,"mtime":1670827183066,"results":"1257","hashOfConfig":"990"},{"size":740,"mtime":1666011242000,"results":"1258","hashOfConfig":"990"},{"size":6088,"mtime":1671454126595,"results":"1259","hashOfConfig":"990"},{"size":716,"mtime":1666011114000,"results":"1260","hashOfConfig":"990"},{"size":5048,"mtime":1671453891606,"results":"1261","hashOfConfig":"990"},{"size":713,"mtime":1666011236000,"results":"1262","hashOfConfig":"990"},{"size":4126,"mtime":1671453687302,"results":"1263","hashOfConfig":"990"},{"size":767,"mtime":1666011164000,"results":"1264","hashOfConfig":"990"},{"size":465,"mtime":1663845324000,"results":"1265","hashOfConfig":"990"},{"size":739,"mtime":1665474448000,"results":"1266","hashOfConfig":"990"},{"size":699,"mtime":1663930254000,"results":"1267","hashOfConfig":"990"},{"size":2460,"mtime":1668325062000,"results":"1268","hashOfConfig":"990"},{"size":990,"mtime":1665393400000,"results":"1269","hashOfConfig":"990"},{"size":1572,"mtime":1665991244000,"results":"1270","hashOfConfig":"990"},{"size":162,"mtime":1667390537000,"results":"1271","hashOfConfig":"990"},{"size":3073,"mtime":1664886636000,"results":"1272","hashOfConfig":"990"},{"size":10179,"mtime":1671453027875,"results":"1273","hashOfConfig":"990"},{"size":6950,"mtime":1670831615641,"results":"1274","hashOfConfig":"990"},{"size":6945,"mtime":1671454476244,"results":"1275","hashOfConfig":"990"},{"size":12615,"mtime":1671448636153,"results":"1276","hashOfConfig":"990"},{"size":12141,"mtime":1671109910315,"results":"1277","hashOfConfig":"990"},{"size":11614,"mtime":1671108595311,"results":"1278","hashOfConfig":"990"},{"size":3364,"mtime":1671452854725,"results":"1279","hashOfConfig":"990"},{"size":4306,"mtime":1671452548559,"results":"1280","hashOfConfig":"990"},{"size":11578,"mtime":1671086997562,"results":"1281","hashOfConfig":"990"},{"size":12394,"mtime":1671020255528,"results":"1282","hashOfConfig":"990"},{"size":4302,"mtime":1671452352355,"results":"1283","hashOfConfig":"990"},{"size":5615,"mtime":1671451367385,"results":"1284","hashOfConfig":"990"},{"size":5620,"mtime":1671451514004,"results":"1285","hashOfConfig":"990"},{"size":7967,"mtime":1671083874493,"results":"1286","hashOfConfig":"990"},{"size":12602,"mtime":1671084379578,"results":"1287","hashOfConfig":"990"},{"size":12603,"mtime":1671020369686,"results":"1288","hashOfConfig":"990"},{"size":7019,"mtime":1671454572205,"results":"1289","hashOfConfig":"990"},{"size":746,"mtime":1670840665469,"results":"1290","hashOfConfig":"990"},{"size":3360,"mtime":1671452765468,"results":"1291","hashOfConfig":"990"},{"size":749,"mtime":1670925731832,"results":"1292","hashOfConfig":"990"},{"size":759,"mtime":1666013206000,"results":"1293","hashOfConfig":"990"},{"size":746,"mtime":1666011136000,"results":"1294","hashOfConfig":"990"},{"size":1617,"mtime":1666011126000,"results":"1295","hashOfConfig":"990"},{"size":7966,"mtime":1671450939239,"results":"1296","hashOfConfig":"990"},{"size":753,"mtime":1670849588023,"results":"1297","hashOfConfig":"990"},{"size":6926,"mtime":1671449178305,"results":"1298","hashOfConfig":"990"},{"size":40758,"mtime":1666011182000,"results":"1299","hashOfConfig":"990"},{"size":778,"mtime":1663762920000,"results":"1300","hashOfConfig":"990"},{"size":789,"mtime":1665475116000,"results":"1301","hashOfConfig":"990"},{"size":789,"mtime":1665475224000,"results":"1302","hashOfConfig":"990"},{"size":786,"mtime":1665475134000,"results":"1303","hashOfConfig":"990"},{"size":781,"mtime":1665475166000,"results":"1304","hashOfConfig":"990"},{"size":792,"mtime":1665475124000,"results":"1305","hashOfConfig":"990"},{"size":716,"mtime":1666010320000,"results":"1306","hashOfConfig":"990"},{"size":83207,"mtime":1666011198000,"results":"1307","hashOfConfig":"990"},{"size":11365,"mtime":1666010972000,"results":"1308","hashOfConfig":"990"},{"size":786,"mtime":1665475180000,"results":"1309","hashOfConfig":"990"},{"size":750,"mtime":1666010984000,"results":"1310","hashOfConfig":"990"},{"size":794,"mtime":1664536648000,"results":"1311","hashOfConfig":"990"},{"size":786,"mtime":1664536716000,"results":"1312","hashOfConfig":"990"},{"size":760,"mtime":1663762724000,"results":"1313","hashOfConfig":"990"},{"size":792,"mtime":1665475094000,"results":"1314","hashOfConfig":"990"},{"size":780,"mtime":1665475086000,"results":"1315","hashOfConfig":"990"},{"size":795,"mtime":1665475042000,"results":"1316","hashOfConfig":"990"},{"size":3972,"mtime":1664536642000,"results":"1317","hashOfConfig":"990"},{"size":2666,"mtime":1667395615000,"results":"1318","hashOfConfig":"990"},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},"u8dioy",{"filePath":"1322","messages":"1323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1324","messages":"1325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1326","messages":"1327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1328","messages":"1329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1330","messages":"1331","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1332","usedDeprecatedRules":"1321"},{"filePath":"1333","messages":"1334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1335","messages":"1336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1337","messages":"1338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1339","messages":"1340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1341","messages":"1342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1343","messages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1345","messages":"1346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1347","messages":"1348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1349","messages":"1350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1351","messages":"1352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1353","messages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1355","messages":"1356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1357","messages":"1358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1359","messages":"1360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1361","messages":"1362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1363","messages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1365","usedDeprecatedRules":"1321"},{"filePath":"1366","messages":"1367","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"1321"},{"filePath":"1369","messages":"1370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1371","usedDeprecatedRules":"1321"},{"filePath":"1372","messages":"1373","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374","usedDeprecatedRules":"1321"},{"filePath":"1375","messages":"1376","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"1321"},{"filePath":"1378","messages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1380","messages":"1381","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1382","usedDeprecatedRules":"1321"},{"filePath":"1383","messages":"1384","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1385","usedDeprecatedRules":"1321"},{"filePath":"1386","messages":"1387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1388","messages":"1389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1390","messages":"1391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1392","messages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1394","messages":"1395","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"1321"},{"filePath":"1397","messages":"1398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1399","usedDeprecatedRules":"1321"},{"filePath":"1400","messages":"1401","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1402","usedDeprecatedRules":"1321"},{"filePath":"1403","messages":"1404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1405","messages":"1406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1407","messages":"1408","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"1321"},{"filePath":"1410","messages":"1411","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1412","usedDeprecatedRules":"1321"},{"filePath":"1413","messages":"1414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1415","messages":"1416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1417","messages":"1418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1419","messages":"1420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1421","messages":"1422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1423","messages":"1424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1425","messages":"1426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1427","messages":"1428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1429","messages":"1430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1431","messages":"1432","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1433","usedDeprecatedRules":"1321"},{"filePath":"1434","messages":"1435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1436","messages":"1437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1438","messages":"1439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1440","messages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1442","messages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1444","usedDeprecatedRules":"1321"},{"filePath":"1445","messages":"1446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1447","messages":"1448","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1449","usedDeprecatedRules":"1321"},{"filePath":"1450","messages":"1451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1452","messages":"1453","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1454","usedDeprecatedRules":"1321"},{"filePath":"1455","messages":"1456","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1457","usedDeprecatedRules":"1321"},{"filePath":"1458","messages":"1459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1460","messages":"1461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1462","messages":"1463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1464","messages":"1465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1466","messages":"1467","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1468","usedDeprecatedRules":"1321"},{"filePath":"1469","messages":"1470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1471","usedDeprecatedRules":"1321"},{"filePath":"1472","messages":"1473","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1474","usedDeprecatedRules":"1321"},{"filePath":"1475","messages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1477","usedDeprecatedRules":"1321"},{"filePath":"1478","messages":"1479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1480","messages":"1481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1482","messages":"1483","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1484","usedDeprecatedRules":"1321"},{"filePath":"1485","messages":"1486","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1487","usedDeprecatedRules":"1321"},{"filePath":"1488","messages":"1489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1490","messages":"1491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1492","messages":"1493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1494","messages":"1495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1496","messages":"1497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1498","usedDeprecatedRules":"1321"},{"filePath":"1499","messages":"1500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1501","messages":"1502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1503","messages":"1504","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1505","usedDeprecatedRules":"1321"},{"filePath":"1506","messages":"1507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1508","messages":"1509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1510","usedDeprecatedRules":"1321"},{"filePath":"1511","messages":"1512","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1513","usedDeprecatedRules":"1321"},{"filePath":"1514","messages":"1515","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1516","usedDeprecatedRules":"1321"},{"filePath":"1517","messages":"1518","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1519","usedDeprecatedRules":"1321"},{"filePath":"1520","messages":"1521","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1522","usedDeprecatedRules":"1321"},{"filePath":"1523","messages":"1524","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1525","usedDeprecatedRules":"1321"},{"filePath":"1526","messages":"1527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1528","messages":"1529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1530","messages":"1531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1532","messages":"1533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1534","messages":"1535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1536","messages":"1537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1538","messages":"1539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1540","messages":"1541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1542","messages":"1543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1544","messages":"1545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1546","messages":"1547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1548","messages":"1549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1550","messages":"1551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1552","messages":"1553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1554","messages":"1555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1556","messages":"1557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1558","messages":"1559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1560","messages":"1561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1562","messages":"1563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1564","messages":"1565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1566","messages":"1567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1568","messages":"1569","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1570","usedDeprecatedRules":"1321"},{"filePath":"1571","messages":"1572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1573","messages":"1574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1575","messages":"1576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1577","messages":"1578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1579","messages":"1580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1581","messages":"1582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1583","messages":"1584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1585","messages":"1586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1587","messages":"1588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1589","messages":"1590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1591","messages":"1592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1593","messages":"1594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1595","messages":"1596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1597","messages":"1598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1599","messages":"1600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1601","messages":"1602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1603","messages":"1604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1605","messages":"1606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1607","messages":"1608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1609","messages":"1610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1611","messages":"1612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1613","messages":"1614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1615","messages":"1616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1617","messages":"1618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1619","messages":"1620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1621","messages":"1622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1623","messages":"1624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1625","messages":"1626","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1627","usedDeprecatedRules":"1321"},{"filePath":"1628","messages":"1629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1630","messages":"1631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1632","messages":"1633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1634","messages":"1635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1636","messages":"1637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1638","messages":"1639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1640","messages":"1641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1642","messages":"1643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1644","messages":"1645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1646","messages":"1647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1648","messages":"1649","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1650","usedDeprecatedRules":"1321"},{"filePath":"1651","messages":"1652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1653","messages":"1654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1655","messages":"1656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1657","messages":"1658","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1659","usedDeprecatedRules":"1321"},{"filePath":"1660","messages":"1661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1662","messages":"1663","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1664","usedDeprecatedRules":"1321"},{"filePath":"1665","messages":"1666","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1667","usedDeprecatedRules":"1321"},{"filePath":"1668","messages":"1669","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1670","usedDeprecatedRules":"1321"},{"filePath":"1671","messages":"1672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1673","messages":"1674","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1675","usedDeprecatedRules":"1321"},{"filePath":"1676","messages":"1677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1678","messages":"1679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1680","messages":"1681","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1682","usedDeprecatedRules":"1321"},{"filePath":"1683","messages":"1684","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1685","usedDeprecatedRules":"1321"},{"filePath":"1686","messages":"1687","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1688","usedDeprecatedRules":"1321"},{"filePath":"1689","messages":"1690","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1691","usedDeprecatedRules":"1321"},{"filePath":"1692","messages":"1693","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1694","usedDeprecatedRules":"1321"},{"filePath":"1695","messages":"1696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1697","messages":"1698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1699","messages":"1700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1701","messages":"1702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1703","messages":"1704","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1705","usedDeprecatedRules":"1321"},{"filePath":"1706","messages":"1707","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1708","usedDeprecatedRules":"1321"},{"filePath":"1709","messages":"1710","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1711","usedDeprecatedRules":"1321"},{"filePath":"1712","messages":"1713","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1714","usedDeprecatedRules":"1321"},{"filePath":"1715","messages":"1716","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1717","usedDeprecatedRules":"1321"},{"filePath":"1718","messages":"1719","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1720","usedDeprecatedRules":"1321"},{"filePath":"1721","messages":"1722","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1723","usedDeprecatedRules":"1321"},{"filePath":"1724","messages":"1725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1726","messages":"1727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1728","messages":"1729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1730","messages":"1731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1732","messages":"1733","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1734","usedDeprecatedRules":"1321"},{"filePath":"1735","messages":"1736","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1737","usedDeprecatedRules":"1321"},{"filePath":"1738","messages":"1739","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1740","usedDeprecatedRules":"1321"},{"filePath":"1741","messages":"1742","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1743","usedDeprecatedRules":"1321"},{"filePath":"1744","messages":"1745","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1746","usedDeprecatedRules":"1321"},{"filePath":"1747","messages":"1748","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1749","usedDeprecatedRules":"1321"},{"filePath":"1750","messages":"1751","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1752","usedDeprecatedRules":"1321"},{"filePath":"1753","messages":"1754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1755","messages":"1756","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1757","usedDeprecatedRules":"1321"},{"filePath":"1758","messages":"1759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1760","messages":"1761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1762","messages":"1763","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1764","usedDeprecatedRules":"1321"},{"filePath":"1765","messages":"1766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1767","messages":"1768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1769","messages":"1770","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1771","usedDeprecatedRules":"1321"},{"filePath":"1772","messages":"1773","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1774","usedDeprecatedRules":"1321"},{"filePath":"1775","messages":"1776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1777","messages":"1778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1779","messages":"1780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1781","messages":"1782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1783","messages":"1784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1785","messages":"1786","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1787","usedDeprecatedRules":"1321"},{"filePath":"1788","messages":"1789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1790","messages":"1791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1792","messages":"1793","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1794","usedDeprecatedRules":"1321"},{"filePath":"1795","messages":"1796","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1797","usedDeprecatedRules":"1321"},{"filePath":"1798","messages":"1799","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1800","usedDeprecatedRules":"1321"},{"filePath":"1801","messages":"1802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1803","messages":"1804","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1805","usedDeprecatedRules":"1321"},{"filePath":"1806","messages":"1807","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1808","usedDeprecatedRules":"1321"},{"filePath":"1809","messages":"1810","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1811","usedDeprecatedRules":"1321"},{"filePath":"1812","messages":"1813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1814","messages":"1815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1816","messages":"1817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1818","messages":"1819","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1820","usedDeprecatedRules":"1321"},{"filePath":"1821","messages":"1822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1823","messages":"1824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1825","messages":"1826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1827","messages":"1828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1829","messages":"1830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1831","messages":"1832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1833","messages":"1834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1835","messages":"1836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1837","messages":"1838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1839","messages":"1840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1841","messages":"1842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1843","messages":"1844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1845","messages":"1846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1847","messages":"1848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1849","messages":"1850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1851","messages":"1852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1853","messages":"1854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1855","messages":"1856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1857","messages":"1858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1859","messages":"1860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1861","messages":"1862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1863","messages":"1864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1865","messages":"1866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1867","messages":"1868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1869","messages":"1870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1871","messages":"1872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1873","messages":"1874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1875","messages":"1876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1877","messages":"1878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1879","messages":"1880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1881","messages":"1882","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1883","usedDeprecatedRules":"1321"},{"filePath":"1884","messages":"1885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1886","messages":"1887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1888","messages":"1889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1890","messages":"1891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1892","messages":"1893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1894","messages":"1895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1896","messages":"1897","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1898","usedDeprecatedRules":"1321"},{"filePath":"1899","messages":"1900","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1901","usedDeprecatedRules":"1321"},{"filePath":"1902","messages":"1903","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1904","usedDeprecatedRules":"1321"},{"filePath":"1905","messages":"1906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1907","messages":"1908","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1909","usedDeprecatedRules":"1321"},{"filePath":"1910","messages":"1911","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1912","usedDeprecatedRules":"1321"},{"filePath":"1913","messages":"1914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1915","usedDeprecatedRules":"1321"},{"filePath":"1916","messages":"1917","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1918","usedDeprecatedRules":"1321"},{"filePath":"1919","messages":"1920","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1921","usedDeprecatedRules":"1321"},{"filePath":"1922","messages":"1923","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1924","usedDeprecatedRules":"1321"},{"filePath":"1925","messages":"1926","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1927","usedDeprecatedRules":"1321"},{"filePath":"1928","messages":"1929","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1930","usedDeprecatedRules":"1321"},{"filePath":"1931","messages":"1932","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1933","usedDeprecatedRules":"1321"},{"filePath":"1934","messages":"1935","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1936","usedDeprecatedRules":"1321"},{"filePath":"1937","messages":"1938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1939","messages":"1940","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1941","messages":"1942","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1943","messages":"1944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1945","messages":"1946","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1947","messages":"1948","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1949","messages":"1950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1951","messages":"1952","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1953","messages":"1954","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1955","messages":"1956","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1957","messages":"1958","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1959","messages":"1960","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1961","messages":"1962","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1963","usedDeprecatedRules":"1321"},{"filePath":"1964","messages":"1965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1966","messages":"1967","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1968","messages":"1969","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1970","usedDeprecatedRules":"1321"},{"filePath":"1971","messages":"1972","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1973","usedDeprecatedRules":"1321"},{"filePath":"1974","messages":"1975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1976","messages":"1977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1978","messages":"1979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1980","messages":"1981","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1982","messages":"1983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1984","messages":"1985","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1986","usedDeprecatedRules":"1321"},{"filePath":"1987","messages":"1988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1989","messages":"1990","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1991","messages":"1992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1321"},{"filePath":"1993","messages":"1994","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1995","usedDeprecatedRules":"1321"},{"filePath":"1996","messages":"1997","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1998","usedDeprecatedRules":"1321"},{"filePath":"1999","messages":"2000","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2001","usedDeprecatedRules":"1321"},{"filePath":"2002","messages":"2003","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2004","usedDeprecatedRules":"1321"},{"filePath":"2005","messages":"2006","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2007","usedDeprecatedRules":"1321"},{"filePath":"2008","messages":"2009","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2010","usedDeprecatedRules":"1321"},{"filePath":"2011","messages":"2012","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2013","usedDeprecatedRules":"1321"},{"filePath":"2014","messages":"2015","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2016","usedDeprecatedRules":"1321"},{"filePath":"2017","messages":"2018","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2019","usedDeprecatedRules":"1321"},{"filePath":"2020","messages":"2021","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2022","usedDeprecatedRules":"1321"},{"filePath":"2023","messages":"2024","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2025","messages":"2026","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2027","usedDeprecatedRules":"1321"},{"filePath":"2028","messages":"2029","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2030","usedDeprecatedRules":"1321"},{"filePath":"2031","messages":"2032","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2033","usedDeprecatedRules":"1321"},{"filePath":"2034","messages":"2035","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2036","usedDeprecatedRules":"1321"},{"filePath":"2037","messages":"2038","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2039","usedDeprecatedRules":"1321"},{"filePath":"2040","messages":"2041","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2042","usedDeprecatedRules":"1321"},{"filePath":"2043","messages":"2044","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2045","usedDeprecatedRules":"1321"},{"filePath":"2046","messages":"2047","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2048","usedDeprecatedRules":"1321"},{"filePath":"2049","messages":"2050","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2051","usedDeprecatedRules":"1321"},{"filePath":"2052","messages":"2053","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2054","usedDeprecatedRules":"1321"},{"filePath":"2055","messages":"2056","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2057","usedDeprecatedRules":"1321"},{"filePath":"2058","messages":"2059","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2060","usedDeprecatedRules":"1321"},{"filePath":"2061","messages":"2062","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2063","usedDeprecatedRules":"1321"},{"filePath":"2064","messages":"2065","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2066","usedDeprecatedRules":"1321"},{"filePath":"2067","messages":"2068","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2069","usedDeprecatedRules":"1321"},{"filePath":"2070","messages":"2071","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2072","usedDeprecatedRules":"1321"},{"filePath":"2073","messages":"2074","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2075","usedDeprecatedRules":"1321"},{"filePath":"2076","messages":"2077","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2078","usedDeprecatedRules":"1321"},{"filePath":"2079","messages":"2080","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2081","usedDeprecatedRules":"1321"},{"filePath":"2082","messages":"2083","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2084","usedDeprecatedRules":"1321"},{"filePath":"2085","messages":"2086","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2087","usedDeprecatedRules":"1321"},{"filePath":"2088","messages":"2089","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2090","usedDeprecatedRules":"1321"},{"filePath":"2091","messages":"2092","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2093","usedDeprecatedRules":"1321"},{"filePath":"2094","messages":"2095","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2096","usedDeprecatedRules":"1321"},{"filePath":"2097","messages":"2098","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2099","usedDeprecatedRules":"1321"},{"filePath":"2100","messages":"2101","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2102","messages":"2103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},"1mmwvi1",{"filePath":"2105","messages":"2106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2107","messages":"2108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2109","messages":"2110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2111","messages":"2112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2113","messages":"2114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1332","usedDeprecatedRules":"2104"},{"filePath":"2115","messages":"2116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2117","messages":"2118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2119","messages":"2120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2121","messages":"2122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2123","messages":"2124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2125","messages":"2126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2127","messages":"2128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2129","messages":"2130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2131","messages":"2132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2133","messages":"2134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2135","messages":"2136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2137","messages":"2138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2139","messages":"2140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1365","usedDeprecatedRules":"2104"},{"filePath":"2141","messages":"2142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"2104"},{"filePath":"2143","messages":"2144","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"2104"},{"filePath":"2145","messages":"2146","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374","usedDeprecatedRules":"2104"},{"filePath":"2147","messages":"2148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2149","messages":"2150","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1382","usedDeprecatedRules":"2104"},{"filePath":"2151","messages":"2152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2153","messages":"2154","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1385","usedDeprecatedRules":"2104"},{"filePath":"2155","messages":"2156","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"2104"},{"filePath":"2157","messages":"2158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2159","messages":"2160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2161","messages":"2162","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1525","usedDeprecatedRules":"2104"},{"filePath":"2163","messages":"2164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2165","messages":"2166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1454","usedDeprecatedRules":"2104"},{"filePath":"2167","messages":"2168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2169","messages":"2170","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1449","usedDeprecatedRules":"2104"},{"filePath":"2171","messages":"2172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1522","usedDeprecatedRules":"2104"},{"filePath":"2173","messages":"2174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1457","usedDeprecatedRules":"2104"},{"filePath":"2175","messages":"2176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2177","messages":"2178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1487","usedDeprecatedRules":"2104"},{"filePath":"2179","messages":"2180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2181","messages":"2182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2183","messages":"2184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2185","messages":"2186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1519","usedDeprecatedRules":"2104"},{"filePath":"2187","messages":"2188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2189","messages":"2190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2191","messages":"2192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1513","usedDeprecatedRules":"2104"},{"filePath":"2193","messages":"2194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2195","messages":"2196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2197","messages":"2198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2199","messages":"2200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2201","messages":"2202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2203","messages":"2204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1471","usedDeprecatedRules":"2104"},{"filePath":"2205","messages":"2206","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1474","usedDeprecatedRules":"2104"},{"filePath":"2207","messages":"2208","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1477","usedDeprecatedRules":"2104"},{"filePath":"2209","messages":"2210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2211","messages":"2212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2213","messages":"2214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1484","usedDeprecatedRules":"2104"},{"filePath":"2215","messages":"2216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1505","usedDeprecatedRules":"2104"},{"filePath":"2217","messages":"2218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1510","usedDeprecatedRules":"2104"},{"filePath":"2219","messages":"2220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1516","usedDeprecatedRules":"2104"},{"filePath":"2221","messages":"2222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2223","messages":"2224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2225","messages":"2226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2227","messages":"2228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2229","messages":"2230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1498","usedDeprecatedRules":"2104"},{"filePath":"2231","messages":"2232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2233","messages":"2234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2235","messages":"2236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2237","messages":"2238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2239","messages":"2240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2241","messages":"2242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2243","messages":"2244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2245","messages":"2246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2247","messages":"2248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2249","messages":"2250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2251","messages":"2252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2253","messages":"2254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2255","messages":"2256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2257","messages":"2258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2259","messages":"2260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2261","messages":"2262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2263","messages":"2264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2265","messages":"2266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2267","messages":"2268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2269","messages":"2270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1570","usedDeprecatedRules":"2104"},{"filePath":"2271","messages":"2272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2273","messages":"2274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2275","messages":"2276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2277","messages":"2278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2279","messages":"2280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2281","messages":"2282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2283","messages":"2284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2285","messages":"2286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2287","messages":"2288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2289","messages":"2290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2291","messages":"2292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2293","messages":"2294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2295","messages":"2296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2297","messages":"2298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2299","messages":"2300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2301","messages":"2302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2303","messages":"2304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2305","messages":"2306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2307","messages":"2308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2309","messages":"2310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2311","messages":"2312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2313","messages":"2314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2315","messages":"2316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2317","messages":"2318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2319","messages":"2320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2321","messages":"2322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2323","messages":"2324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2325","messages":"2326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2327","messages":"2328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2329","messages":"2330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2331","messages":"2332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2333","messages":"2334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2335","messages":"2336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2337","messages":"2338","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1936","usedDeprecatedRules":"2104"},{"filePath":"2339","messages":"2340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1694","usedDeprecatedRules":"2104"},{"filePath":"2341","messages":"2342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2343","messages":"2344","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1688","usedDeprecatedRules":"2104"},{"filePath":"2345","messages":"2346","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1433","usedDeprecatedRules":"2104"},{"filePath":"2347","messages":"2348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2349","messages":"2350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2351","messages":"2352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2353","messages":"2354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2355","messages":"2356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1933","usedDeprecatedRules":"2104"},{"filePath":"2357","messages":"2358","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1371","usedDeprecatedRules":"2104"},{"filePath":"2359","messages":"2360","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1912","usedDeprecatedRules":"2104"},{"filePath":"2361","messages":"2362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2363","messages":"2364","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1901","usedDeprecatedRules":"2104"},{"filePath":"2365","messages":"2366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2367","messages":"2368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2369","messages":"2370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2371","messages":"2372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2373","messages":"2374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2375","messages":"2376","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1723","usedDeprecatedRules":"2104"},{"filePath":"2377","messages":"2378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2379","messages":"2380","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1737","usedDeprecatedRules":"2104"},{"filePath":"2381","messages":"2382","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1734","usedDeprecatedRules":"2104"},{"filePath":"2383","messages":"2384","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1740","usedDeprecatedRules":"2104"},{"filePath":"2385","messages":"2386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1705","usedDeprecatedRules":"2104"},{"filePath":"2387","messages":"2388","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1664","usedDeprecatedRules":"2104"},{"filePath":"2389","messages":"2390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2391","messages":"2392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2393","messages":"2394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2395","messages":"2396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2397","messages":"2398","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1650","usedDeprecatedRules":"2104"},{"filePath":"2399","messages":"2400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2401","messages":"2402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2403","messages":"2404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2405","messages":"2406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2407","messages":"2408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2409","messages":"2410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2411","messages":"2412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2413","messages":"2414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2415","messages":"2416","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1627","usedDeprecatedRules":"2104"},{"filePath":"2417","messages":"2418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2419","messages":"2420","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1749","usedDeprecatedRules":"2104"},{"filePath":"2421","messages":"2422","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1746","usedDeprecatedRules":"2104"},{"filePath":"2423","messages":"2424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2425","messages":"2426","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1898","usedDeprecatedRules":"2104"},{"filePath":"2427","messages":"2428","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1811","usedDeprecatedRules":"2104"},{"filePath":"2429","messages":"2430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2431","messages":"2432","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1743","usedDeprecatedRules":"2104"},{"filePath":"2433","messages":"2434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2435","messages":"2436","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1752","usedDeprecatedRules":"2104"},{"filePath":"2437","messages":"2438","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1820","usedDeprecatedRules":"2104"},{"filePath":"2439","messages":"2440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2441","messages":"2442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2443","messages":"2444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2445","messages":"2446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2447","messages":"2448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2449","messages":"2450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1808","usedDeprecatedRules":"2104"},{"filePath":"2451","messages":"2452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2453","messages":"2454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2455","messages":"2456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2457","messages":"2458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2459","messages":"2460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2461","messages":"2462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2463","messages":"2464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2465","messages":"2466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2467","messages":"2468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2469","messages":"2470","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1757","usedDeprecatedRules":"2104"},{"filePath":"2471","messages":"2472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2473","messages":"2474","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1468","usedDeprecatedRules":"2104"},{"filePath":"2475","messages":"2476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2477","messages":"2478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2479","messages":"2480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2481","messages":"2482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2483","messages":"2484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2485","messages":"2486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2487","messages":"2488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2489","messages":"2490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2491","messages":"2492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2493","messages":"2494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2495","messages":"2496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2497","messages":"2498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2499","messages":"2500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2501","messages":"2502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2503","messages":"2504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2505","messages":"2506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2507","messages":"2508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2509","messages":"2510","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1787","usedDeprecatedRules":"2104"},{"filePath":"2511","messages":"2512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2513","messages":"2514","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1797","usedDeprecatedRules":"2104"},{"filePath":"2515","messages":"2516","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1794","usedDeprecatedRules":"2104"},{"filePath":"2517","messages":"2518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2519","messages":"2520","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1774","usedDeprecatedRules":"2104"},{"filePath":"2521","messages":"2522","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1771","usedDeprecatedRules":"2104"},{"filePath":"2523","messages":"2524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2525","messages":"2526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2527","messages":"2528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2529","messages":"2530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2531","messages":"2532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2533","messages":"2534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2535","messages":"2536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2537","messages":"2538","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1883","usedDeprecatedRules":"2104"},{"filePath":"2539","messages":"2540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2541","messages":"2542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2543","messages":"2544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2545","messages":"2546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2547","messages":"2548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2549","messages":"2550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2551","messages":"2552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2553","messages":"2554","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1667","usedDeprecatedRules":"2104"},{"filePath":"2555","messages":"2556","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1670","usedDeprecatedRules":"2104"},{"filePath":"2557","messages":"2558","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1659","usedDeprecatedRules":"2104"},{"filePath":"2559","messages":"2560","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1675","usedDeprecatedRules":"2104"},{"filePath":"2561","messages":"2562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2563","messages":"2564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2565","messages":"2566","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1682","usedDeprecatedRules":"2104"},{"filePath":"2567","messages":"2568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2569","messages":"2570","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1691","usedDeprecatedRules":"2104"},{"filePath":"2571","messages":"2572","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1685","usedDeprecatedRules":"2104"},{"filePath":"2573","messages":"2574","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2575","messages":"2576","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1708","usedDeprecatedRules":"2104"},{"filePath":"2577","messages":"2578","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1720","usedDeprecatedRules":"2104"},{"filePath":"2579","messages":"2580","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1717","usedDeprecatedRules":"2104"},{"filePath":"2581","messages":"2582","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1714","usedDeprecatedRules":"2104"},{"filePath":"2583","messages":"2584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2585","messages":"2586","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1904","usedDeprecatedRules":"2104"},{"filePath":"2587","messages":"2588","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1711","usedDeprecatedRules":"2104"},{"filePath":"2589","messages":"2590","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2051","usedDeprecatedRules":"2104"},{"filePath":"2591","messages":"2592","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1909","usedDeprecatedRules":"2104"},{"filePath":"2593","messages":"2594","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1921","usedDeprecatedRules":"2104"},{"filePath":"2595","messages":"2596","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1915","usedDeprecatedRules":"2104"},{"filePath":"2597","messages":"2598","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2599","messages":"2600","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1918","usedDeprecatedRules":"2104"},{"filePath":"2601","messages":"2602","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2054","usedDeprecatedRules":"2104"},{"filePath":"2603","messages":"2604","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2605","messages":"2606","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2048","usedDeprecatedRules":"2104"},{"filePath":"2607","messages":"2608","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2045","usedDeprecatedRules":"2104"},{"filePath":"2609","messages":"2610","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2611","messages":"2612","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1930","usedDeprecatedRules":"2104"},{"filePath":"2613","messages":"2614","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2615","usedDeprecatedRules":"2104"},{"filePath":"2616","messages":"2617","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2081","usedDeprecatedRules":"2104"},{"filePath":"2618","messages":"2619","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2039","usedDeprecatedRules":"2104"},{"filePath":"2620","messages":"2621","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2036","usedDeprecatedRules":"2104"},{"filePath":"2622","messages":"2623","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1924","usedDeprecatedRules":"2104"},{"filePath":"2624","messages":"2625","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1927","usedDeprecatedRules":"2104"},{"filePath":"2626","messages":"2627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2628","messages":"2629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2630","messages":"2631","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2632","messages":"2633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2634","messages":"2635","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2636","messages":"2637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2638","messages":"2639","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2007","usedDeprecatedRules":"2104"},{"filePath":"2640","messages":"2641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2642","messages":"2643","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2644","messages":"2645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2646","messages":"2647","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2648","messages":"2649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2650","messages":"2651","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2652","messages":"2653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2654","messages":"2655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2656","messages":"2657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2658","messages":"2659","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1805","usedDeprecatedRules":"2104"},{"filePath":"2660","messages":"2661","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1800","usedDeprecatedRules":"2104"},{"filePath":"2662","messages":"2663","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1764","usedDeprecatedRules":"2104"},{"filePath":"2664","messages":"2665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2666","messages":"2667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2668","messages":"2669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2670","messages":"2671","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2672","messages":"2673","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2019","usedDeprecatedRules":"2104"},{"filePath":"2674","messages":"2675","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2676","messages":"2677","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2678","usedDeprecatedRules":"2104"},{"filePath":"2679","messages":"2680","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2099","usedDeprecatedRules":"2104"},{"filePath":"2681","messages":"2682","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2042","usedDeprecatedRules":"2104"},{"filePath":"2683","messages":"2684","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2685","messages":"2686","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2687","messages":"2688","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2075","usedDeprecatedRules":"2104"},{"filePath":"2689","messages":"2690","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2033","usedDeprecatedRules":"2104"},{"filePath":"2691","messages":"2692","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2693","messages":"2694","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2695","messages":"2696","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2697","messages":"2698","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2072","usedDeprecatedRules":"2104"},{"filePath":"2699","messages":"2700","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2069","usedDeprecatedRules":"2104"},{"filePath":"2701","messages":"2702","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2027","usedDeprecatedRules":"2104"},{"filePath":"2703","messages":"2704","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2705","messages":"2706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2707","messages":"2708","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2709","usedDeprecatedRules":"2104"},{"filePath":"2710","messages":"2711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2712","messages":"2713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2714","messages":"2715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2716","messages":"2717","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1963","usedDeprecatedRules":"2104"},{"filePath":"2718","messages":"2719","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2720","messages":"2721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2722","messages":"2723","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2724","usedDeprecatedRules":"2104"},{"filePath":"2725","messages":"2726","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1973","usedDeprecatedRules":"2104"},{"filePath":"2727","messages":"2728","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1399","usedDeprecatedRules":"2104"},{"filePath":"2729","messages":"2730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2731","messages":"2732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2733","messages":"2734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2735","messages":"2736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2737","messages":"2738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2739","messages":"2740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2741","messages":"2742","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1986","usedDeprecatedRules":"2104"},{"filePath":"2743","messages":"2744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2745","messages":"2746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2747","messages":"2748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2749","messages":"2750","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"2104"},{"filePath":"2751","messages":"2752","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1412","usedDeprecatedRules":"2104"},{"filePath":"2753","messages":"2754","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1402","usedDeprecatedRules":"2104"},{"filePath":"2755","messages":"2756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2757","messages":"2758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2759","messages":"2760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},{"filePath":"2761","messages":"2762","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1444","usedDeprecatedRules":"2104"},{"filePath":"2763","messages":"2764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"2104"},"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/index.jsx",[],["2765","2766"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/serviceWorker.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/App.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/SettingsContext.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/Store.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/JWTAuthContext.js",["2767"],"import React, { createContext, useEffect, useReducer } from 'react'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios.js'\nimport { MatxLoading } from 'app/components'\n\nconst initialState = {\n    isAuthenticated: false,\n    isInitialised: false,\n    user: null\n}\nconst isValidToken = (accessToken) => {\n    if (!accessToken) {\n        return false\n    }\n\n    const decodedToken = jwtDecode(accessToken)\n    const currentTime = Date.now() / 1000\n    return decodedToken.exp > currentTime\n}\nconst setSession = (accessToken) => {\n    if (accessToken) {\n        localStorage.setItem('accessToken', accessToken)\n        axios.defaults.headers.common['x-token'] = `${accessToken}`\n    } else {\n        localStorage.removeItem('accessToken')\n        delete axios.defaults.headers.common['x-token']\n    }\n}\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'INIT':\n            {\n                const { isAuthenticated, user } = action.payload\n\n                return {\n                    ...state,\n                    isAuthenticated,\n                    isInitialised: true,\n                    user\n                }\n            }\n        case 'LOGIN':\n            {\n                const { user } = action.payload\n\n                return {\n                    ...state,\n                    isAuthenticated: true,\n                    user\n                }\n            }\n        case 'LOGOUT':\n            {\n                return {\n                    ...state,\n                    isAuthenticated: false,\n                    user: null\n                }\n            }\n        case 'REGISTER':\n            {\n                const { user } = action.payload\n\n                return {\n                    ...state,\n                    isAuthenticated: true,\n                    user\n                }\n            }\n        default:\n            {\n                return {\n                    ...state\n                }\n            }\n    }\n}\nconst AuthContext = createContext({\n    ...initialState,\n    method: 'JWT',\n    login: () => Promise.resolve(),\n    logout: () => { },\n    register: () => Promise.resolve()\n})\nexport const AuthProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const login = async (email, password) => {\n        const response = await axios.post('http://43.205.125.69:3000/api/public/adminposlogin', { email, password })\n        const { accessToken, user } = response.data.data\n        console.log(accessToken, user, 'kamlesh rajpoot')\n        setSession(accessToken)\n\n        dispatch({\n            type: 'LOGIN', payload: {\n                user\n            }\n        })\n    }\n    const register = async (email, username, password) => {\n        const response = await axios.post('/api/auth/register', { email, username, password })\n\n        const { accessToken, user } = response.data\n\n        setSession(accessToken)\n\n        dispatch({\n            type: 'REGISTER', payload: {\n                user\n            }\n        })\n    }\n    const logout = () => {\n        setSession(null)\n        dispatch({ type: 'LOGOUT' })\n    }\n    useEffect(() => {\n        ;\n        (async () => {\n            try {\n                const accessToken = window.localStorage.getItem('accessToken')\n\n                if (accessToken) {\n\n                    setSession(accessToken)\n                    // const response = await axios.get('/api/auth/profile')\n                    // const { user } = response.data\n                    const response = await axios.post('http://43.205.125.69:3000/api/admin/adminposdetails')\n                    const { user } = response.data.data\n                    dispatch({\n                        type: 'INIT',\n                        payload: {\n                            isAuthenticated: true,\n                            user\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: 'INIT',\n                        payload: {\n                            isAuthenticated: false,\n                            user: null\n                        }\n                    })\n                }\n            } catch (err) {\n                console.error(err)\n                dispatch({\n                    type: 'INIT',\n                    payload: {\n                        isAuthenticated: false,\n                        user: null\n                    }\n                })\n            }\n        })()\n    }, [])\n    if (!state.isInitialised) {\n        return <MatxLoading />\n    } return (<AuthContext.Provider value={\n        {\n            ...state,\n            method: 'JWT',\n            login,\n            logout,\n            register\n        }\n    }> {children} </AuthContext.Provider>)\n}\nexport default AuthContext\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/routes.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/index.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/index.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/axios.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/MatxLayout.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/notification.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SimpleCard.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxVerticalNav/MatxVerticalNav.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Calendar/Session12Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/Session10Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/Session11Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/index.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Typography.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useSettings.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Calendar/Calendar.jsx",["2768","2769"],"import React, { useState } from 'react';\nimport { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Calendars from '../../views/material-kit/calenders/Calendars';\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst Calendar1 = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Calendar' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Calendars />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Calendar1;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SMSLog.jsx",["2770","2771"],"import React, { useState } from 'react';\nimport { Typography } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  paper6: {\n    padding: '35px 25px',\n    boxShadow: 'none',\n    background: '#fff',\n  },\n  selet: {\n    color: '#000',\n    border: '1px solid #e7dcdc',\n    padding: '11px',\n    marginTop: '20px',\n  },\n}));\nexport default function SMSLog() {\n  const classes = useStyles();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'SMS Log' }]}\n        />\n      </Box>\n      {/* <SimpleCard> */}\n\n      <Box className={classes.paper6}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container>\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              id=\"date-picker-inline\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n          </Grid>\n        </MuiPickersUtilsProvider>\n        <Typography className={classes.selet}>\n          There is no log available for the selected date.\n        </Typography>\n      </Box>\n      {/* </SimpleCard> */}\n    </Container>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/StaffReport.jsx",["2772"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst StaffReport = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Staff Report\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default StaffReport;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SMSSettings.jsx",["2773","2774","2775","2776","2777","2778","2779"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Typography } from '@mui/material';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { makeStyles } from '@material-ui/styles';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  Gateway: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Gateway: Yup.string()\n    .min(6, 'Gateway must be 6 character length')\n    .required('Gateway is required!'),\n});\n\nconst SMSSettings = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'SMS Settings' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <AutocompleteComboNew\n                props={{\n                  names: [\n                    'Oliver Hansen',\n                    'Van Henry',\n                    'April Tucker',\n                    'Ralph Hubbard',\n                    'Omar Alexander',\n                    'Carlos Abbott',\n                    'Miriam Wagner',\n                    'Bradley Wilkerson',\n                    'Virginia Andrews',\n                    'Kelly Snyder',\n                  ],\n                  name: 'Gateway',\n                  label: 'Gateway',\n                  value: values.Gateway,\n                  onBlur: handleBlur,\n                  onChange: handleChange('Gateway'),\n                  helperText: touched.Gateway && errors.Gateway,\n                  error: Boolean(errors.Gateway && touched.Gateway),\n                }}\n              />\n              <Typography style={{ marginTop: '10px' }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default SMSSettings;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SendSMS.jsx",["2780","2781","2782","2783","2784","2785","2786","2787","2788"],"import React, { useState, useEffect } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@mui/material';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '15px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  fil: {\n    width: '100%',\n    height: '50px',\n    marginBottom: '0px',\n    borderRadius: '5px',\n    padding: '10px',\n    border: '1px solid #cfcfcf',\n  },\n}));\n\nconst people = ['Siri', 'Alexa', 'Google', 'Facebook', 'Twitter', 'Linkedin', 'Sinkedin'];\n\n// inital login credentials\nconst initialValues = {\n  Phone: '',\n  Message: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('number is required!'),\n\n  Message: Yup.string()\n    .min(6, 'Message must be 6 character length')\n    .required('Message is required!'),\n});\n\nconst SendSMS = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const [searchResults, setSearchResults] = useState([]);\n  // at every occurance of the change event, sets the current value of the form to the state\n  const handleChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  useEffect(() => {\n    const results = people.filter((person) => person.toLowerCase().includes(searchTerm));\n    setSearchResults(results);\n  }, [searchTerm]);\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Send SMS' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search phone by customer\"\n                    value={searchTerm}\n                    onChange={handleChange}\n                    className={classes.fil}\n                  />\n                </Grid>\n                {/* <ul>\n        {searchResults.map(item => (\n          <li>{item}</li>\n        ))}\n      </ul> */}\n                <Grid item xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Phone',\n                      label: 'Mobile',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      rows: 4,\n                      multiline: true,\n                      name: 'Message',\n                      label: 'Message',\n                      onBlur: handleBlur,\n                      value: values.Message,\n                      onChange: handleChange,\n                      helperText: touched.Message && errors.Message,\n                      error: Boolean(errors.Message && touched.Message),\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Send Msg\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default SendSMS;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/ListPages.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/AddPage.jsx",["2789","2790","2791","2792","2793","2794"],"import React, { useState } from 'react';\nimport Label from '../material-kit/tables/Label';\nimport { Checkbox, Grid } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Title: '',\n  Name: '',\n  Description: '',\n  Slug: '',\n  MenuOrder: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Title: Yup.string()\n    .min(6, 'Title must be 6 character length')\n    .required('Title is required!'),\n\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n  Description: Yup.string()\n    .min(6, 'Description must be 6 character length')\n    .required('Description is required!'),\n\n  Slug: Yup.string()\n    .min(6, 'Slug must be 6 character length')\n    .required('Slug per line is required!'),\n\n  MenuOrder: Yup.string()\n    .min(6, 'MenuOrder must be 6 character length')\n    .required('MenuOrder per line is required!'),\n});\n\nconst AddPage = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Page' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Title',\n                      label: 'Title',\n                      onBlur: handleBlur,\n                      value: values.Title,\n                      onChange: handleChange,\n                      helperText: touched.Title && errors.Title,\n                      error: Boolean(errors.Title && touched.Title),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Slug',\n                      label: 'Slug',\n                      onBlur: handleBlur,\n                      value: values.Slug,\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'MenuOrder',\n                      label: 'Menu Order',\n                      onBlur: handleBlur,\n                      value: values.MenuOrder,\n                      onChange: handleChange,\n                      helperText: touched.MenuOrder && errors.MenuOrder,\n                      error: Boolean(errors.MenuOrder && touched.MenuOrder),\n                    }}\n                  />\n                  <Checkbox value=\"checkedA\" defaultChecked />\n                  <Label> Show in top menus</Label>\n                </Grid>\n              </Grid>\n              <Label>Body</Label>\n              <CKEditor\n                editor={ClassicEditor}\n                data={note}\n                onReady={(editor) => {\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setNote(data);\n                  console.log({ event, editor, data });\n                }}\n                onBlur={(event, editor) => {\n                  handleBlur();\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n              <div className=\"content-invalid-feedback\">\n                {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n              </div>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Page\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPage;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/SliderSettings.jsx",["2795","2796","2797","2798","2799","2800","2801","2802"],"import React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  textnew1: {\n    fontSize: '15px',\n    fontWeight: '600',\n    paddingBottom: '20px',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst initialValues = {\n  Link1: 'http://ci.dev/sma/shop/products',\n  Link2: '',\n  Link3: '',\n  Link4: '',\n  Link5: '',\n  Caption1: '',\n  Caption2: '',\n  Caption3: '',\n  Caption4: '',\n  Caption5: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Link1: Yup.number()\n    .min(6, 'Link1 must be 6 character length')\n    .required('Link1 is required!'),\n\n  Link2: Yup.string()\n    .min(6, 'Link2 must be 6 character length')\n    .required('Link2 is required!'),\n\n  Link3: Yup.string()\n    .min(6, 'Link3 must be 6 character length')\n    .required('Link3 is required!'),\n\n  Link4: Yup.string()\n    .min(6, 'Link4 must be 6 character length')\n    .required('Link4 is required!'),\n\n  Link5: Yup.string()\n    .min(6, 'Link5 must be 6 character length')\n    .required('Link5 is required!'),\n\n  Caption1: Yup.string()\n    .min(6, 'Caption1 must be 6 character length')\n    .required('Caption1 is required!'),\n  Caption2: Yup.string()\n    .min(6, 'Caption2 must be 6 character length')\n    .required('Caption2 is required!'),\n\n  Caption3: Yup.string()\n    .min(6, 'Caption3 must be 6 character length')\n    .required('Caption3 is required!'),\n  Caption4: Yup.string()\n    .min(6, 'Caption4 must be 6 character length')\n    .required('Caption4 is required!'),\n  Caption5: Yup.string()\n    .min(6, 'Caption5 must be 6 character length')\n    .required('Caption5 is required!'),\n});\n\nconst SliderSettings = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Slider Settings' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Paper\n                style={{\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '30px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Shop Settings\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Link1',\n                        label: 'Link 1',\n                        onBlur: handleBlur,\n                        value: values.Link1,\n                        onChange: handleChange,\n                        helperText: touched.Link1 && errors.Link1,\n                        error: Boolean(errors.Link1 && touched.Link1),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Link2',\n                        label: 'Link 2',\n                        onBlur: handleBlur,\n                        value: values.Link2,\n                        onChange: handleChange,\n                        helperText: touched.Link2 && errors.Link2,\n                        error: Boolean(errors.Link2 && touched.Link2),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Link3',\n                        label: 'Link 3',\n                        onBlur: handleBlur,\n                        value: values.Link3,\n                        onChange: handleChange,\n                        helperText: touched.Link3 && errors.Link3,\n                        error: Boolean(errors.Link3 && touched.Link3),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Link4',\n                        label: 'Link 4',\n                        onBlur: handleBlur,\n                        value: values.Link4,\n                        onChange: handleChange,\n                        helperText: touched.Link4 && errors.Link4,\n                        error: Boolean(errors.Link4 && touched.Link4),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Link5',\n                        label: 'Link 5',\n                        onBlur: handleBlur,\n                        value: values.Link5,\n                        onChange: handleChange,\n                        helperText: touched.Link5 && errors.Link5,\n                        error: Boolean(errors.Link5 && touched.Link5),\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Caption1',\n                        label: 'Caption 1',\n                        onBlur: handleBlur,\n                        value: values.Caption1,\n                        onChange: handleChange,\n                        helperText: touched.Caption1 && errors.Caption1,\n                        error: Boolean(errors.Caption1 && touched.Caption1),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Caption2',\n                        label: 'Caption 2',\n                        onBlur: handleBlur,\n                        value: values.Caption2,\n                        onChange: handleChange,\n                        helperText: touched.Caption2 && errors.Caption2,\n                        error: Boolean(errors.Caption2 && touched.Caption2),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Caption3',\n                        label: 'Caption 3',\n                        onBlur: handleBlur,\n                        value: values.Caption3,\n                        onChange: handleChange,\n                        helperText: touched.Caption3 && errors.Caption3,\n                        error: Boolean(errors.Caption3 && touched.Caption3),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Caption4',\n                        label: 'Caption 4',\n                        onBlur: handleBlur,\n                        value: values.Caption4,\n                        onChange: handleChange,\n                        helperText: touched.Caption4 && errors.Caption4,\n                        error: Boolean(errors.Caption4 && touched.Caption4),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Caption5',\n                        label: 'Caption 5',\n                        onBlur: handleBlur,\n                        value: values.Caption5,\n                        onChange: handleChange,\n                        helperText: touched.Caption5 && errors.Caption5,\n                        error: Boolean(errors.Caption5 && touched.Caption5),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography>Image 1</Typography>\n                    <Singleimage />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography style={{ padding: '0px 0px' }}>Image 2</Typography>\n                    <Singleimage />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography style={{ padding: '0px 0px' }}>Image 3</Typography>\n                    <Singleimage />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography style={{ padding: '0px 0px' }}>Image 4</Typography>\n                    <Singleimage />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography style={{ padding: '0px 0px 0px 0px' }}>Image 5</Typography>\n                    <Singleimage />\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Update\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default SliderSettings;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PurchasesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/CustomersReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ExpensesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/MonthlyPurchases.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/FrontEnd/ShopSettings.jsx",["2803","2804","2805","2806","2807","2808"],"import React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  textnew1: {\n    fontSize: '15px',\n    fontWeight: '600',\n    paddingBottom: '20px',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst initialValues = {\n  ShopName: 'Stock Manager Advance with All Modules',\n  Shipping: '0',\n  Description: 'Stock Manager Advance with All Modules',\n  Warehouse: '',\n  Products: '',\n  Productspagedescription: 'Jewelry',\n  Email: 'info@tecdiary.com',\n  AboutPage: '',\n  TermsPage: '',\n  PrivacyPolicyPage: '',\n  ContactPage: '',\n  PaymentText: '',\n  Biller: '',\n  FollowText: 'Please click the link below to follow us on social media.',\n  Facebook: 'http://facebook.com/tecdiary',\n  Twitter: 'http://facebook.com/tecdiary',\n  CookieMessage:\n    'We use cookies to improve your experience on our website. By browsing this website, you agree to our use of cookies.',\n  CookiePage: '',\n  HideBrands: '',\n  Disablecart: '',\n  Instgram: '',\n  Phone: '',\n  Privateshop: '',\n  GooglePlus: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  ShopName: Yup.string()\n    .min(6, 'ShopName must be 6 character length')\n    .required('Shop Name is required!'),\n\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n\n  Description: Yup.string()\n    .min(6, 'Description must be 6 character length')\n    .required('Description is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  Products: Yup.string()\n    .min(6, 'Products must be 6 character length')\n    .required('Products is required!'),\n\n  Productspagedescription: Yup.string()\n    .min(6, 'Productspagedescription must be 6 character length')\n    .required('Products page description is required!'),\n\n  Email: Yup.string()\n    .email()\n    .required('Email is required!'),\n\n  PaymentText: Yup.string()\n    .min(6, 'PaymentText must be 6 character length')\n    .required('Payment Text is required!'),\n\n  TermsPage: Yup.string()\n    .min(6, 'TermsPage must be 6 character length')\n    .required('Terms Page is required!'),\n  AboutPage: Yup.string()\n    .min(6, 'AboutPage must be 6 character length')\n    .required('About Page is required!'),\n\n  PrivacyPolicyPage: Yup.string()\n    .min(6, 'PrivacyPolicyPage must be 6 character length')\n    .required('Privacy Policy Page is required!'),\n\n  ContactPage: Yup.string()\n    .min(6, 'ContactPage must be 6 character length')\n    .required('Contact Page is required!'),\n\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller  is required!'),\n\n  FollowText: Yup.string()\n    .min(6, 'FollowText must be 6 character length')\n    .required('Follow Text is required!'),\n\n  Facebook: Yup.string()\n    .min(6, 'Facebook must be 6 character length')\n    .required('Facebook  is required!'),\n\n  Twitter: Yup.string()\n    .min(6, 'Twitter must be 6 character length')\n    .required('Twitter is required!'),\n\n  CookieMessage: Yup.string()\n    .min(6, 'CookieMessage must be 6 character length')\n    .required('Cookie Message is required!'),\n\n  CookiePage: Yup.string()\n    .min(6, 'CookiePage must be 6 character length')\n    .required('Cookie Page  is required!'),\n  HideBrands: Yup.string()\n    .min(6, 'HideBrands must be 6 character length')\n    .required('Hide Brands is required!'),\n  Disablecart: Yup.string()\n    .min(6, 'Disablecart must be 6 character length')\n    .required('Disable cart is required!'),\n  Instgram: Yup.string()\n    .min(6, 'Instgram must be 6 character length')\n    .required('Instgram is required!'),\n\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('number is required!'),\n\n  Privateshop: Yup.number()\n    .min(6, 'Privateshop must be 6 character length')\n    .required('Privateshop is required!'),\n\n  GooglePlus: Yup.number()\n    .min(6, 'GooglePlus must be 6 character length')\n    .required('GooglePlus is required!'),\n});\n\nconst ShopSettings = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Shop Settings' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Paper\n                style={{\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '30px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Shop Settings\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ShopName',\n                        label: 'Shop Name',\n                        onBlur: handleBlur,\n                        value: values.ShopName,\n                        onChange: handleChange,\n                        helperText: touched.ShopName && errors.ShopName,\n                        error: Boolean(errors.ShopName && touched.ShopName),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Description',\n                        label: 'Description',\n                        onBlur: handleBlur,\n                        value: values.Description,\n                        onChange: handleChange,\n                        helperText: touched.Description && errors.Description,\n                        error: Boolean(errors.Description && touched.Description),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Productspagedescription ',\n                        label: 'Products page description ',\n                        onBlur: handleBlur,\n                        value: values.Productspagedescription,\n                        onChange: handleChange,\n                        helperText:\n                          touched.Productspagedescription && errors.Productspagedescription,\n                        error: Boolean(\n                          errors.Productspagedescription && touched.Productspagedescription\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'number',\n                        name: 'Phone',\n                        label: 'Phone',\n                        onBlur: handleBlur,\n                        value: values.Phone,\n                        onChange: handleChange,\n                        helperText: touched.Phone && errors.Phone,\n                        error: Boolean(errors.Phone && touched.Phone),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Email',\n                        label: 'Email',\n                        onBlur: handleBlur,\n                        value: values.Email,\n                        onChange: handleChange,\n                        helperText: touched.Email && errors.Email,\n                        error: Boolean(errors.Email && touched.Email),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Products',\n                        label: 'Products page (grid style)',\n                        value: values.Products,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Products'),\n                        helperText: touched.Products && errors.Products,\n                        error: Boolean(errors.Products && touched.Products),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'AboutPage',\n                        label: 'About Page',\n                        value: values.AboutPage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('AboutPage'),\n                        helperText: touched.AboutPage && errors.AboutPage,\n                        error: Boolean(errors.AboutPage && touched.AboutPage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'TermsPage',\n                        label: 'Terms Page',\n                        value: values.TermsPage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('TermsPage'),\n                        helperText: touched.TermsPage && errors.TermsPage,\n                        error: Boolean(errors.TermsPage && touched.TermsPage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'PrivacyPolicyPage ',\n                        label: 'Privacy Policy Page ',\n                        value: values.PrivacyPolicyPage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('PrivacyPolicyPage'),\n                        helperText: touched.PrivacyPolicyPage && errors.PrivacyPolicyPage,\n                        error: Boolean(errors.PrivacyPolicyPage && touched.PrivacyPolicyPage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ContactPage',\n                        label: 'Contact Page',\n                        value: values.ContactPage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ContactPage'),\n                        helperText: touched.ContactPage && errors.ContactPage,\n                        error: Boolean(errors.ContactPage && touched.ContactPage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'PaymentText',\n                        label: 'Payment Text',\n                        value: values.PaymentText,\n                        onBlur: handleBlur,\n                        onChange: handleChange('PaymentText'),\n                        helperText: touched.PaymentText && errors.PaymentText,\n                        error: Boolean(errors.PaymentText && touched.PaymentText),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Privateshop',\n                        label: 'Private shop (for members only) ',\n                        value: values.Privateshop,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Privateshop'),\n                        helperText: touched.Privateshop && errors.Privateshop,\n                        error: Boolean(errors.Privateshop && touched.Privateshop),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Shipping',\n                        label: 'Shipping',\n                        onBlur: handleBlur,\n                        value: values.Shipping,\n                        onChange: handleChange,\n                        helperText: touched.Shipping && errors.Shipping,\n                        error: Boolean(errors.Shipping && touched.Shipping),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Warehouse',\n                        label: 'Warehouse',\n                        value: values.Warehouse,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Warehouse'),\n                        helperText: touched.Warehouse && errors.Warehouse,\n                        error: Boolean(errors.Warehouse && touched.Warehouse),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Biller',\n                        label: 'Biller',\n                        value: values.Biller,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Biller'),\n                        helperText: touched.Biller && errors.Biller,\n                        error: Boolean(errors.Biller && touched.Biller),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'FollowText',\n                        label: 'Follow Text',\n                        onBlur: handleBlur,\n                        value: values.FollowText,\n                        onChange: handleChange,\n                        helperText: touched.FollowText && errors.FollowText,\n                        error: Boolean(errors.FollowText && touched.FollowText),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Facebook',\n                        label: 'Facebook',\n                        onBlur: handleBlur,\n                        value: values.Facebook,\n                        onChange: handleChange,\n                        helperText: touched.Facebook && errors.Facebook,\n                        error: Boolean(errors.Facebook && touched.Facebook),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Twitter',\n                        label: 'Twitter',\n                        onBlur: handleBlur,\n                        value: values.Twitter,\n                        onChange: handleChange,\n                        helperText: touched.Twitter && errors.Twitter,\n                        error: Boolean(errors.Twitter && touched.Twitter),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'GooglePlus',\n                        label: 'Google Plus',\n                        onBlur: handleBlur,\n                        value: values.GooglePlus,\n                        onChange: handleChange,\n                        helperText: touched.GooglePlus && errors.GooglePlus,\n                        error: Boolean(errors.GooglePlus && touched.GooglePlus),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Instgram',\n                        label: 'Instgram',\n                        onBlur: handleBlur,\n                        value: values.Instgram,\n                        onChange: handleChange,\n                        helperText: touched.Instgram && errors.Instgram,\n                        error: Boolean(errors.Instgram && touched.Instgram),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CookieMessage',\n                        label: 'Cookie Message',\n                        onBlur: handleBlur,\n                        value: values.CookieMessage,\n                        onChange: handleChange,\n                        helperText: touched.CookieMessage && errors.CookieMessage,\n                        error: Boolean(errors.CookieMessage && touched.CookieMessage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'CookiePage',\n                        label: 'Cookie Page',\n                        value: values.CookiePage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('CookiePage'),\n                        helperText: touched.CookiePage && errors.CookiePage,\n                        error: Boolean(errors.CookiePage && touched.CookiePage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'HideBrands',\n                        label: 'Hide Brands/Categories with 0 product',\n                        value: values.HideBrands,\n                        onBlur: handleBlur,\n                        onChange: handleChange('HideBrands'),\n                        helperText: touched.HideBrands && errors.HideBrands,\n                        error: Boolean(errors.HideBrands && touched.HideBrands),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Disablecart',\n                        label: 'Disable cart & price',\n                        value: values.Disablecart,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Disablecart'),\n                        helperText: touched.Disablecart && errors.Disablecart,\n                        error: Boolean(errors.Disablecart && touched.Disablecart),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography style={{ padding: '10px 0px' }}>Logo</Typography>\n                    <Singleimage />\n                    <Typography style={{ padding: '20px 0px' }}>\n                      Bank Details (if you want to accept direct bank-in/transfer payments)\n                    </Typography>\n                    <CKEditor\n                      editor={ClassicEditor}\n                      data={note}\n                      onReady={(editor) => {\n                        console.log('Editor is ready to use!', editor);\n                      }}\n                      onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setNote(data);\n                        console.log({ event, editor, data });\n                      }}\n                      onBlur={(event, editor) => {\n                        handleBlur();\n                        console.log('Blur.', editor);\n                      }}\n                      onFocus={(event, editor) => {\n                        console.log('Focus.', editor);\n                      }}\n                    />\n                    <div className=\"content-invalid-feedback\">\n                      {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                    </div>\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Update\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default ShopSettings;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/SuppliersReport.jsx",["2809"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst SuppliersReport = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Suppliers Report\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default SuppliersReport;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/TaxReport.jsx",["2810"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst TaxReport = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Tax Report\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default TaxReport;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PaymentsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProfitLoss.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/DailySales.jsx",["2811"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Calendars from '../../views/material-kit/calenders/Calendars';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst DailySales = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Daily Sales' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Calendars />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default DailySales;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/MonthlySales.jsx",["2812"],"import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Years from '../../views/material-kit/calenders/Years';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst MonthlySales = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Monthly Sales' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Years />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default MonthlySales;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/BrandsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/CategoriesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/AdjustmentsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProductsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/ProductQuantityAlerts.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/BestSellers.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/SalesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/DailyPurchases.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/WarehouseStockChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/OverviewChart.jsx",["2813","2814"],"import React, { useState, useEffect } from 'react';\nimport { Typography } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport StatCards from '../../views/dashboard/shared/StatCards';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddchartIcon from '@mui/icons-material/Addchart';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport AlignVerticalBottomIcon from '@mui/icons-material/AlignVerticalBottom';\nimport DensitySmallIcon from '@mui/icons-material/DensitySmall';\nimport EventNoteIcon from '@mui/icons-material/EventNote';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\nimport StarIcon from '@mui/icons-material/Star';\nimport MoneyIcon from '@mui/icons-material/Money';\nimport PieRechartComponent from './PieRechartComponent';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  box0: {\n    width: '100%',\n    backgroundColor: '#fff',\n    boxShadow: 'none',\n    padding: '15px',\n    marginBottom: '15px',\n  },\n}));\n\nconst OverviewChart = (props) => {\n  const classes = useStyles();\n  const [data5, setdata] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n  }, [props]);\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Overview Chart' }]}\n        />\n      </Box>\n      {/* <div className={classes.box0}> */}\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#2eadd3' }}\n            icon={<AddchartIcon />}\n            title=\"Warehouse Stock Chart\"\n            url=\"/Reports/WarehouseStockChart\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#ad2727' }}\n            icon={<AlignVerticalBottomIcon />}\n            title=\"Product Expiry Alerts\"\n            url=\"/Reports/ProductsReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#303f9f' }}\n            icon={<EventNoteIcon />}\n            title=\"Monthly Sales\"\n            url=\"/Reports/MonthlySales\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#fabb3d' }}\n            icon={<MoneyIcon />}\n            title=\"Profit and/or Loss\"\n            url=\"/Reports/ProfitLoss\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#428BCA' }}\n            icon={<PeopleAltIcon />}\n            title=\"Suppliers Report\"\n            url=\"/Reports/SuppliersReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#428BCA' }}\n            icon={<TrendingUpIcon />}\n            title=\"Best Sellers\"\n            url=\"/Reports/BestSellers\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#78cd51' }}\n            icon={<DensitySmallIcon />}\n            title=\"Products Report\"\n            url=\"/Reports/ProductsReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#7b1fa2' }}\n            icon={<FavoriteBorderIcon />}\n            title=\"Sales Report\"\n            url=\"/Reports/SalesReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#78cd51' }}\n            icon={<StarIcon />}\n            title=\"Purchases Report\"\n            url=\"/Reports/PurchasesReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#428BCA' }}\n            icon={<PeopleAltIcon />}\n            title=\"Staff Report\"\n            url=\"/Reports/StaffReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#ff5454' }}\n            icon={<AlignVerticalBottomIcon />}\n            title=\"Product Quantity Alerts\"\n            url=\"/Reports/ProductQuantityAlerts\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCards\n            style={{ backgroundColor: '#fabb3d' }}\n            icon={<EventNoteIcon />}\n            title=\"Daily Sales\"\n            url=\"/Reports/DailySales\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4} mb={2}>\n          <StatCards\n            style={{ backgroundColor: '#fabb3d' }}\n            icon={<MoneyIcon />}\n            title=\"Payments Report\"\n            url=\"/Reports/PaymentsReport\"\n          />\n        </Grid>\n        <Grid item xs={12} md={4} mb={2}>\n          <StatCards\n            style={{ backgroundColor: '#000' }}\n            icon={<PeopleAltIcon />}\n            title=\"Customers Report\"\n            url=\"/Reports/CustomersReport\"\n          />\n        </Grid>\n      </Grid>\n      {/* </div> */}\n      <SimpleCard>\n        <Typography>\n          Stock Overview Chart including monthly sales with product tax and order tax (columns),\n          purchases (line) and current stock value by cost and price (pie). You can save the graph\n          as jpg, png and pdf.\n        </Typography>\n        <PieRechartComponent />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default OverviewChart;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/RegisterReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Loadable.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Reports/PieRechartComponent.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/Years.jsx",["2815","2816","2817","2818","2819"],"import React, { useState } from 'react';\nimport YearPicker from 'react-single-year-picker';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    '& .MuiTableCell-root': {\n      borderLeft: '1px solid rgba(224, 224, 224, 1)',\n      border: '1px solid rgba(224, 224, 224, 1)',\n    },\n  },\n  box7: {\n    background: '#e5e1e1',\n    justifyContent: 'center',\n    width: '100%',\n    textAlign: 'center',\n    display: 'flex',\n    padding: '9px 0px',\n  },\n});\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nfunction createData(\n  January = '',\n  February = '',\n  March = '',\n  April = '',\n  May = '',\n  June = '',\n  July = '',\n  August = '',\n  September = '',\n  October = '',\n  November = '',\n  December = ''\n) {\n  return {\n    January,\n    February,\n    March,\n    April,\n    May,\n    June,\n    July,\n    August,\n    September,\n    October,\n    November,\n    December,\n  };\n}\n\nconst rows = [createData(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)];\n\nfunction Years() {\n  const [yearSelected, setYear] = useState(1990);\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box className={classes.box7}>\n        <YearPicker\n          yearArray={['2019', '2020']}\n          value={yearSelected}\n          onSelect={(e) => setYear(e)}\n          hideInput={true}\n          // activeIcon={src url}\n          // icon={src url}\n          // leftIcon={src url}\n          // rightIcon={src url}\n          minRange={1000}\n          maxRange={2018}\n        />\n      </Box>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Jan</TableCell>\n            <TableCell align=\"center\">Feb</TableCell>\n            <TableCell align=\"center\">March</TableCell>\n            <TableCell align=\"center\">April</TableCell>\n            <TableCell align=\"center\">May</TableCell>\n            <TableCell align=\"center\">June</TableCell>\n            <TableCell align=\"center\">July</TableCell>\n            <TableCell align=\"center\">August</TableCell>\n            <TableCell align=\"center\">Sept</TableCell>\n            <TableCell align=\"center\">October</TableCell>\n            <TableCell align=\"center\">Nov</TableCell>\n            <TableCell align=\"center\">Dec</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell align=\"center\">{row.January}</TableCell>\n              <TableCell align=\"center\">{row.February}</TableCell>\n              <TableCell align=\"center\">{row.March}</TableCell>\n              <TableCell align=\"center\">{row.April}</TableCell>\n              <TableCell align=\"center\">{row.May}</TableCell>\n              <TableCell align=\"center\">{row.June}</TableCell>\n              <TableCell align=\"center\">{row.July}</TableCell>\n              <TableCell align=\"center\">{row.August}</TableCell>\n              <TableCell align=\"center\">{row.September}</TableCell>\n              <TableCell align=\"center\">{row.October}</TableCell>\n              <TableCell align=\"center\">{row.November}</TableCell>\n              <TableCell align=\"center\">{row.December}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\nexport default Years;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/Calendars.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/SimpleTable.jsx",["2820","2821","2822","2823","2824","2825","2826","2827","2828","2829","2830","2831","2832","2833","2834","2835","2836","2837","2838"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\nimport Label from './Label';\nimport Scrollbar from './Scrollbar';\nimport USERLIST from './User';\nimport SearchNotFound from './SearchNotFound';\nimport UserListHead from './UserListHead';\nimport UserListToolbar from './UserListToolbar';\nimport UserMoreMenu from './UserMoreMenu';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', alignRight: false },\n  { id: 'image', label: 'Image', alignRight: false },\n  { id: 'unit', label: 'Unit', alignRight: false },\n  { id: 'cost', label: 'Cost', alignRight: false },\n  { id: 'price', label: 'Price', alignRight: false },\n  { id: 'code', label: 'Code', alignRight: false },\n  { id: 'brand', label: 'Brand', alignRight: false },\n  { id: 'quantity', label: 'Quantity', alignRight: false },\n  { id: 'category_id', label: 'Category_id', alignRight: false },\n  { id: 'alert_quantity', label: 'Alert_quantity', alignRight: false },\n  { id: 'action', label: 'Action', alignRight: false },\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction SimpleTable(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      <Scrollbar>\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      <TableCell align=\"left\">{image}</TableCell>\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell>\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Container>\n    // </Page>\n  );\n}\nexport default SimpleTable;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Topbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Sidenav.jsx",["2839","2840"],"import React from 'react';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\nimport Brand from '../../Brand';\r\nimport Sidenav from '../../Sidenav';\r\n\r\nconst SidebarNavRoot = styled(Box)(({ theme, width, primaryBg, bgImgURL }) => ({\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  height: '100vh',\r\n  width: width,\r\n  fontFamily: 'Montserrat,sans-serif !important',\r\n  boxShadow: themeShadows[8],\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundPosition: 'top',\r\n  backgroundSize: 'cover',\r\n  zIndex: 111,\r\n  overflow: 'hidden',\r\n  backgroundColor: '#fff',\r\n  color: '#000 !important',\r\n  transition: 'all 250ms ease-in-out',\r\n  boxShadow: 'rgb(0 0 0 / 10%) 0px 10px 50px',\r\n  // backgroundImage: `linear-gradient(45deg,#303f9f,#7b1fa2)!important;`,\r\n  '&:hover': {\r\n    width: sideNavWidth,\r\n    '& .sidenavHoverShow': {\r\n      display: 'block',\r\n      color: '#000 !important',\r\n      // fontFamily: \"Montserrat,sans-serif !important\",\r\n    },\r\n    '& .compactNavItem': {\r\n      width: '100%',\r\n      maxWidth: '100%',\r\n      color: '#000 !important',\r\n      '& .nav-bullet': {\r\n        display: 'block',\r\n        color: '#000 !important',\r\n        // fontFamily: \"Montserrat,sans-serif !important\",\r\n      },\r\n      '& .nav-bullet-text': {\r\n        display: 'none',\r\n        color: '#000 !important',\r\n        // fontFamily: \"Montserrat,sans-serif !important\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavListBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  color: '#000 !important',\r\n}));\r\n\r\nconst Layout1Sidenav = () => {\r\n  const theme = useTheme();\r\n  const { settings, updateSettings } = useSettings();\r\n  const leftSidebar = settings.layout1Settings.leftSidebar;\r\n  const { mode, bgImgURL } = leftSidebar;\r\n\r\n  const getSidenavWidth = () => {\r\n    switch (mode) {\r\n      case 'compact':\r\n        return sidenavCompactWidth;\r\n      default:\r\n        return sideNavWidth;\r\n    }\r\n  };\r\n  const primaryRGB = convertHexToRGB(theme.palette.primary.main);\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    updateSettings({\r\n      layout1Settings: {\r\n        leftSidebar: {\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSidenavToggle = () => {\r\n    updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' });\r\n  };\r\n\r\n  return (\r\n    <SidebarNavRoot bgImgURL={bgImgURL} primaryBg={primaryRGB} width={getSidenavWidth()}>\r\n      <NavListBox>\r\n        <Brand>\r\n          {/* <Hidden smDown>\r\n            <Switch\r\n              onChange={handleSidenavToggle}\r\n              checked={leftSidebar.mode !== 'full'}\r\n              size=\"small\"\r\n            />\r\n          </Hidden> */}\r\n        </Brand>\r\n        <Sidenav />\r\n      </NavListBox>\r\n    </SidebarNavRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(Layout1Sidenav);\r\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebar.jsx",["2841","2842"],"import useSettings from 'app/hooks/useSettings';\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme';\nimport SecondarySidebarContent from './SecondarySidebarContent';\nimport SecondarySidebarToggle from './SecondarySidebarToggle';\n\nconst SecondarySidebar = () => {\n  const { settings } = useSettings();\n  const secondarySidebarTheme = settings.themes[settings.secondarySidebar.theme];\n\n  return (\n    <SecondarySidenavTheme theme={secondarySidebarTheme}>\n      {/* {settings.secondarySidebar.open && <SecondarySidebarContent />} */}\n      {/* <SecondarySidebarToggle /> */}\n    </SecondarySidenavTheme>\n  );\n};\n\nexport default SecondarySidebar;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useAuth.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLoading.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Footer.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/StatCards.jsx",["2843","2844","2845"],"import React from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  box1: {\n    width: '100%',\n    boxShadow: 'rgb(99 99 99 / 20%) 0px 2px 8px 0px',\n    textAlign: 'center',\n    color: '#fff',\n    padding: '15px',\n    justifyItems: 'center',\n    display: 'inline-grid',\n    borderRadius: '5px',\n  },\n}));\n\nconst StatCards = (props) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <NavLink to={props.url} exact>\n        <Box mb={0} className={classes.box1} style={props.style}>\n          {props.icon}\n          {props.title}\n        </Box>\n      </NavLink>\n    </>\n  );\n};\n\nexport default StatCards;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserListHead.jsx",["2846","2847"],"\nimport { useRef, useState,React } from 'react';\nimport PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@mui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nUserListHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function UserListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserMoreMenu.jsx",["2848","2849","2850","2851","2852","2853","2854","2855","2856","2857","2858"],"import { useRef, useState, React } from 'react';\nimport { Icon } from '@iconify/react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport DataSaverOnIcon from '@mui/icons-material/DataSaverOn';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport LocalPrintshopIcon from '@mui/icons-material/LocalPrintshop';\nimport CustomizedDialogs from '../dialog/CustomizedDialog';\nimport face from '../../../../../src/public/assets/images/face.jpg';\n// material\nimport {\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Button,\n  Dialog,\n  Typography,\n} from '@material-ui/core';\n\nimport { withStyles } from '@material-ui/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from 'axios';\n\n// import CloseIcon from '@material-ui/icons/Close';\n// ----------------------------------------------------------------------\n// import { EditForm } from '../../Forms/index';\n\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\n  margin: 0,\n  padding: theme.spacing(2),\n  '& .closeButton': {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\nconst useStyles = makeStyles((theme) => ({\n  new4: {\n    marginBottom: '0px',\n    padding: '0px',\n    marginTop: '0px',\n  },\n  bt6: {\n    padding: '8px !important',\n    background: '#c50912',\n    fontSize: '11px',\n    color: '#fff',\n  },\n  bt7: {\n    padding: '8px !important',\n    background: '#e5e0e0',\n    fontSize: '11px',\n    color: '#000',\n  },\n}));\nconst DialogContent1 = styled(MuiDialogContent)(({ theme }) => ({\n  '&.root': { padding: theme.spacing(2) },\n}));\n\nconst DialogActions1 = styled(MuiDialogActions)(({ theme }) => ({\n  '&.root': { margin: 0, padding: theme.spacing(1) },\n}));\n\nconst DialogTitle1 = (props) => {\n  const { children, onClose } = props;\n  return (\n    <DialogTitleRoot disableTypography>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitleRoot>\n  );\n};\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          {/* <CloseIcon /> */}\n          Close\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function UserMoreMenu(props) {\n  const classes = useStyles();\n  const [premiumContent, setPremiumContent] = useState([]);\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  /// delete popup\n  const [open1, setOpen1] = useState(false);\n  const handleClickOpen1 = () => setOpen1(true);\n  const handleClose1 = () => setOpen1(false);\n  const deleterow = () => {\n    const Livechaturl = `http://3.23.210.57:3000/api/v1/auth/deleteinterviews`;\n    axios\n      .post(Livechaturl, {\n        interview_id: props.id,\n      })\n      .then((response) => {\n        const outlook = response;\n        alert(outlook.data.message);\n        window.location.href = '/dashboard/interview';\n      });\n    setOpen(false);\n  };\n  const editrow = () => {\n    alert(JSON.stringify(props.id));\n  };\n  /// image popup\n  const [open2, setOpen2] = useState(false);\n  const handleClickOpen2 = () => setOpen2(true);\n  const handleClose2 = () => setOpen2(false);\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' },\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem component={RouterLink} to=\"/Product/Productdetail\">\n          <ListItemIcon>\n            <AssignmentIcon width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText\n            className={classes.new4}\n            primary=\"Product Details\"\n            // primaryTypographyProps={{ variant: 'body2' }}\n            // onClick={editrow}\n          />\n        </MenuItem>\n        <MenuItem component={RouterLink} to=\"#\">\n          <ListItemIcon>\n            <DataSaverOnIcon width={24} height={24} onClick={handleClickOpen} />\n          </ListItemIcon>\n          <ListItemText className={classes.new4} primary=\"Duplicate Product\" onClick={editrow} />\n        </MenuItem>\n\n        <MenuItem component={RouterLink} to=\"/Product/Editproduct\" sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} onClick={handleClickOpen} />\n          </ListItemIcon>\n          <ListItemText className={classes.new4} primary=\"Edit Product\" onClick={editrow} />\n        </MenuItem>\n\n        <MenuItem\n          component={RouterLink}\n          to=\"#\"\n          sx={{ color: 'text.secondary' }}\n          onClick={handleClickOpen2}\n        >\n          <ListItemIcon>\n            <AddPhotoAlternateIcon width={24} height={24} onClick={handleClickOpen2} />\n          </ListItemIcon>\n          <ListItemText className={classes.new4} primary=\"View Image\" />\n        </MenuItem>\n\n        <MenuItem\n          component={RouterLink}\n          to=\"/Product/PrintBarcode\"\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <LocalPrintshopIcon width={24} height={24} onClick={handleClickOpen} />\n          </ListItemIcon>\n          <ListItemText className={classes.new4} primary=\"Print Barcode/Label\" onClick={editrow} />\n        </MenuItem>\n\n        <MenuItem component={RouterLink} to=\"#\" sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} onClick={handleClickOpen1} />\n          </ListItemIcon>\n          <ListItemText\n            className={classes.new4}\n            primary=\"Delete Product\"\n            onClick={handleClickOpen1}\n          />\n        </MenuItem>\n      </Menu>\n      <div>\n        {/* /// delete product */}\n\n        <Dialog\n          onClose={handleClose1}\n          open={open1}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MuiDialogTitle id=\"customized-dialog-title\" onClose={handleClose1}>\n            Delete Product\n          </MuiDialogTitle>\n\n          <DialogContent1 dividers>\n            <Typography gutterBottom>Are you sure</Typography>\n          </DialogContent1>\n\n          <DialogActions1>\n            <Button onClick={handleClose1} className={classes.bt6}>\n              Yes I'am Sure\n            </Button>\n            <Button onClick={handleClose1} className={classes.bt7}>\n              No\n            </Button>\n          </DialogActions1>\n        </Dialog>\n        {/* /// end delete product */}\n        {/* /// View image */}\n        <Dialog\n          open={open2}\n          onClose={handleClose2}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <MuiDialogContent>\n            <img src={face} style={{ width: '100%' }} />\n          </MuiDialogContent>\n        </Dialog>\n        {/* /// View image end*/}\n      </div>\n    </>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/UserListToolbar.jsx",["2859","2860","2861"],"import { useRef, useState, React } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\n// import roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\n// import { styled } from '@material-ui/core/styles';\nimport { alpha, styled } from '@mui/material';\n\nimport {\n  Box,\n  Toolbar,\n  Tooltip,\n  IconButton,\n  Typography,\n  OutlinedInput,\n  InputAdornment,\n} from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': { width: 320 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nUserListToolbar.propTypes = {\n  numSelected: PropTypes.number,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n};\n\nexport default function UserListToolbar({ numSelected, filterName, onFilterName }) {\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: 'primary.main',\n          bgcolor: 'primary.lighter',\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={filterName}\n          onChange={onFilterName}\n          placeholder=\"Search interview...\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Icon icon={trash2Fill} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>{/* <Icon icon={roundFilterList} /> */}</IconButton>\n        </Tooltip>\n      )}\n    </RootStyle>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/SearchNotFound.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/User.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/Scrollbar.jsx",["2862","2863"],"import { useRef, useState,React } from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleBarReact from 'simplebar-react';\n// material\nimport { Box,alpha, styled } from \"@mui/material\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')({\n  flexGrow: 1,\n  height: '100%',\n  overflow: 'hidden'\n});\n\nconst SimpleBarStyle = styled(SimpleBarReact)(({ theme }) => ({\n  maxHeight: '100%',\n  '& .simplebar-scrollbar': {\n    '&:before': {\n      backgroundColor: alpha(theme.palette.grey[600], 0.48)\n    },\n    '&.simplebar-visible:before': {\n      opacity: 1\n    }\n  },\n  '& .simplebar-track.simplebar-vertical': {\n    width: 10\n  },\n  '& .simplebar-track.simplebar-horizontal .simplebar-scrollbar': {\n    height: 6\n  },\n  '& .simplebar-mask': {\n    zIndex: 'inherit'\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nScrollbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  sx: PropTypes.object\n};\n\nexport default function Scrollbar({ children, sx, ...other }) {\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n\n  if (isMobile) {\n    return (\n      <Box sx={{ overflowX: 'auto', ...sx }} {...other}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <RootStyle>\n      <SimpleBarStyle timeout={500} clickOnTrack={false} sx={sx} {...other}>\n        {children}\n      </SimpleBarStyle>\n    </RootStyle>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/Label.jsx",["2864"],"import PropTypes from 'prop-types';\n// material\nimport { Box,alpha, styled } from \"@mui/material\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('span')(({ theme, styleprops }) => {\n  const { color, variant } = styleprops;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette[color].main}`\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color].dark,\n    backgroundColor: alpha(theme.palette[color].main, 0.16)\n  });\n\n  return {\n    height: 22,\n    fontWeight: 500,\n    fontSize: \"14px\",\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    // fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    // fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== 'default'\n      ? {\n          ...(variant === 'filled' && { ...styleFilled(color) }),\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\n          ...(variant === 'ghost' && { ...styleGhost(color) })\n        }\n      : {\n          ...(variant === 'outlined' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`\n          }),\n          ...(variant === 'ghost' && {\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.grey[500_16]\n          })\n        })\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\n  return (\n    <RootStyle styleprops={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'default',\n    'primary',\n    'secondary',\n    'info',\n    'success',\n    'warning',\n    'error'\n  ]),\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost'])\n};\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Sidenav.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/utils/constant.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/mockImages.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/navigations.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/CustomizedDialog.jsx",["2865"],"import CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport MuiDialogActions from '@mui/material/DialogActions';\nimport MuiDialogContent from '@mui/material/DialogContent';\nimport MuiDialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/system';\nimport { useState } from 'react';\n\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\n  margin: 0,\n  padding: theme.spacing(2),\n  '& .closeButton': {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst DialogTitle = (props) => {\n  const { children, onClose } = props;\n  return (\n    <DialogTitleRoot disableTypography>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitleRoot>\n  );\n};\n\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\n  '&.root': { padding: theme.spacing(2) },\n}));\n\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\n  '&.root': { margin: 0, padding: theme.spacing(1) },\n}));\n\nconst CustomizedDialogs = () => {\n  const [open1, setOpen1] = useState(false);\n\n  const handleClickOpen1 = () => setOpen1(true);\n\n  const handleClose1 = () => setOpen1(false);\n\n  return (\n    <div>\n      {/* <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Delete product\n      </Button> */}\n\n      <Dialog onClose={handleClose1} open={open1}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose1}>\n          <Typography gutterBottom style={{ fontWeight: '600' }}>\n            Delete Product\n          </Typography>\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <Typography gutterBottom>Are you sure</Typography>\n        </DialogContent>\n\n        <DialogActions>\n          <Button style={{ background: '#1976d2', color: '#fff' }} onClick={handleClose1}>\n            Yes I'am Sure\n          </Button>\n          <Button onClick={handleClose1} color=\"primary\">\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CustomizedDialogs;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebarToggle.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/SecondarySidebar/SecondarySidebarContent.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Brand.jsx",["2866","2867"],"import { Box, styled } from '@mui/material';\nimport { MatxLogo } from 'app/components';\nimport useSettings from 'app/hooks/useSettings';\nimport { Span } from './Typography';\nimport newlogo from '../../../src/public/assets/images/logos/newlogo.png';\n\nconst BrandRoot = styled(Box)(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: '9px 9px 9px 0px',\n  marginBottom: '10px',\n  borderBottom: '1px solid #eeeeef',\n}));\n\nconst StyledSpan = styled(Span)(({ mode }) => ({\n  fontSize: 18,\n  marginLeft: '-21px',\n  fontWeight: '600',\n  display: mode === 'compact' ? 'none' : 'block',\n}));\n\nconst Brand = ({ children }) => {\n  const { settings } = useSettings();\n  const leftSidebar = settings.layout1Settings.leftSidebar;\n  const { mode } = leftSidebar;\n\n  return (\n    <BrandRoot>\n      <Box display=\"flex\" alignItems=\"center\">\n        <img style={{ width: '100px' }} src={newlogo} />\n        <StyledSpan mode={mode} className=\"sidenavHoverShow\">\n          POS\n        </StyledSpan>\n      </Box>\n\n      <Box className=\"sidenavHoverShow\" sx={{ display: mode === 'compact' ? 'none' : 'block' }}>\n        {children || null}\n      </Box>\n    </BrandRoot>\n  );\n};\n\nexport default Brand;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ShoppingCart.jsx",["2868"],"import { Badge, Button, Drawer, Icon, IconButton, ThemeProvider } from '@mui/material';\nimport { Box, styled, useTheme } from '@mui/system';\nimport useAuth from 'app/hooks/useAuth';\nimport useSettings from 'app/hooks/useSettings';\nimport {\n  deleteProductFromCart,\n  getCartList,\n  updateCartAmount,\n} from 'app/redux/actions/EcommerceActions';\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant';\nimport { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { themeShadows } from './MatxTheme/themeColors';\nimport { H6, Small } from './Typography';\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n  '& span': {\n    color: theme.palette.text.primary,\n  },\n  '& #disable': {\n    color: theme.palette.text.disabled,\n  },\n}));\n\nconst MiniCart = styled('div')(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  width: sideNavWidth,\n}));\n\nconst CartBox = styled('div')(() => ({\n  padding: '4px',\n  paddingLeft: '16px',\n  display: 'flex',\n  alignItems: 'center',\n  boxShadow: themeShadows[6],\n  height: topBarHeight,\n  '& h5': {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: '16px',\n    fontWeight: '500',\n  },\n}));\n\nconst ProductBox = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: '8px 8px',\n  transition: 'background 300ms ease',\n  '&:hover': {\n    background: 'rgba(0,0,0,0.01)',\n  },\n}));\n\nconst IMG = styled('img')(() => ({\n  width: 48,\n}));\n\nconst ProductDetails = styled('div')(() => ({\n  marginRight: '8',\n  textAlign: 'center',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  '& h6': {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    display: 'block',\n    width: 120,\n    marginBottom: '4px',\n  },\n}));\n\nlet cartListLoaded = false;\n\nfunction ShoppingCart({ container }) {\n  const [totalCost, setTotalCost] = useState(0);\n  const [panelOpen, setPanelOpen] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { cartList } = useSelector((state) => state.ecommerce);\n  const { settings } = useSettings();\n  const theme = useTheme();\n  const secondary = theme.palette.text.secondary;\n\n  if (!cartListLoaded) {\n    dispatch(getCartList(user.id));\n    cartListLoaded = true;\n  }\n\n  const handleDrawerToggle = () => {\n    setPanelOpen(!panelOpen);\n  };\n\n  const handleCheckoutClick = () => {\n    if (totalCost > 0) {\n      navigate('/ecommerce/checkout');\n      setPanelOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    let total = 0;\n\n    cartList.forEach((product) => {\n      total += product.price * product.amount;\n    });\n    setTotalCost(total);\n  }, [cartList]);\n\n  const { palette } = useTheme();\n  const textColor = palette.text.primary;\n\n  return (\n    <Fragment>\n      <IconButton onClick={handleDrawerToggle}>\n        <Badge color=\"success\" badgeContent={cartList.length}>\n          <Icon sx={{ color: '#fff' }}>shopping_cart</Icon>\n        </Badge>\n      </IconButton>\n\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor={'right'}\n          open={panelOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          <MiniCart>\n            <CartBox>\n              <Icon color=\"primary\">shopping_cart</Icon>\n              <h5>Cart</h5>\n            </CartBox>\n\n            <Box flexGrow={1} overflow=\"auto\">\n              {cartList.map((product) => (\n                <ProductBox key={product.id}>\n                  <Box mr=\"4px\" display=\"flex\" flexDirection=\"column\">\n                    <StyledIconButton\n                      size=\"small\"\n                      onClick={() =>\n                        dispatch(updateCartAmount(user.id, product.id, product.amount + 1))\n                      }\n                    >\n                      <Icon sx={{ cursor: 'pinter' }}>keyboard_arrow_up</Icon>\n                    </StyledIconButton>\n                    <StyledIconButton\n                      disabled={!(product.amount - 1)}\n                      size=\"small\"\n                      onClick={() =>\n                        dispatch(updateCartAmount(user.id, product.id, product.amount - 1))\n                      }\n                    >\n                      <Icon id={!(product.amount - 1) && 'disable'}>keyboard_arrow_down</Icon>\n                    </StyledIconButton>\n                  </Box>\n                  <Box mr={1}>\n                    <IMG src={product.imgUrl} alt={product.title} />\n                  </Box>\n                  <ProductDetails>\n                    <H6>{product.title}</H6>\n                    <Small sx={{ color: secondary }}>\n                      ${product.price} x {product.amount}\n                    </Small>\n                  </ProductDetails>\n                  <StyledIconButton\n                    size=\"small\"\n                    onClick={() => dispatch(deleteProductFromCart(user.userId, product.id))}\n                  >\n                    <Icon fontSize=\"small\">clear</Icon>\n                  </StyledIconButton>\n                </ProductBox>\n              ))}\n            </Box>\n\n            <Button\n              sx={{ width: '100%', borderRadius: 0 }}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleCheckoutClick}\n            >\n              Checkout (${totalCost.toFixed(2)})\n            </Button>\n          </MiniCart>\n        </Drawer>\n      </ThemeProvider>\n    </Fragment>\n  );\n}\n\nexport default ShoppingCart;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/calenders/events.jsx",["2869"],"const now = new Date();\n\nexport default [\n  {\n    id: 0,\n    title: 'All Day Event very long title',\n    allDay: true,\n    start: new Date(2015, 3, 0),\n    end: new Date(2015, 3, 1),\n  },\n  {\n    id: 1,\n    title: 'Long Event',\n    start: new Date(2015, 3, 7),\n    end: new Date(2015, 3, 10),\n  },\n\n  {\n    id: 2,\n    title: 'DTS STARTS',\n    start: new Date(2016, 2, 13, 0, 0, 0),\n    end: new Date(2016, 2, 20, 0, 0, 0),\n  },\n\n  {\n    id: 3,\n    title: 'DTS ENDS',\n    start: new Date(2016, 10, 6, 0, 0, 0),\n    end: new Date(2016, 10, 13, 0, 0, 0),\n  },\n\n  {\n    id: 4,\n    title: 'Some Event',\n    start: new Date(2015, 3, 9, 0, 0, 0),\n    end: new Date(2015, 3, 10, 0, 0, 0),\n  },\n  {\n    id: 5,\n    title: 'Conference',\n    start: new Date(2015, 3, 11),\n    end: new Date(2015, 3, 13),\n    desc: 'Big conference for important people',\n  },\n  {\n    id: 6,\n    title: 'Meeting',\n    start: new Date(2015, 3, 12, 10, 30, 0, 0),\n    end: new Date(2015, 3, 12, 12, 30, 0, 0),\n    desc: 'Pre-meeting meeting, to prepare for the meeting',\n  },\n  {\n    id: 7,\n    title: 'Lunch',\n    start: new Date(2015, 3, 12, 12, 0, 0, 0),\n    end: new Date(2015, 3, 12, 13, 0, 0, 0),\n    desc: 'Power lunch',\n  },\n  {\n    id: 8,\n    title: 'Meeting',\n    start: new Date(2015, 3, 12, 14, 0, 0, 0),\n    end: new Date(2015, 3, 12, 15, 0, 0, 0),\n  },\n  {\n    id: 9,\n    title: 'Happy Hour',\n    start: new Date(2015, 3, 12, 17, 0, 0, 0),\n    end: new Date(2015, 3, 12, 17, 30, 0, 0),\n    desc: 'Most important meal of the day',\n  },\n  {\n    id: 10,\n    title: 'Dinner',\n    start: new Date(2015, 3, 12, 20, 0, 0, 0),\n    end: new Date(2015, 3, 12, 21, 0, 0, 0),\n  },\n  {\n    id: 11,\n    title: 'Planning Meeting with Paige',\n    start: new Date(2015, 3, 13, 8, 0, 0),\n    end: new Date(2015, 3, 13, 10, 30, 0),\n  },\n  {\n    id: 11.1,\n    title: 'Inconvenient Conference Call',\n    start: new Date(2015, 3, 13, 9, 30, 0),\n    end: new Date(2015, 3, 13, 12, 0, 0),\n  },\n  {\n    id: 11.2,\n    title: \"Project Kickoff - Lou's Shoes\",\n    start: new Date(2015, 3, 13, 11, 30, 0),\n    end: new Date(2015, 3, 13, 14, 0, 0),\n  },\n  {\n    id: 11.3,\n    title: 'Quote Follow-up - Tea by Tina',\n    start: new Date(2015, 3, 13, 15, 30, 0),\n    end: new Date(2015, 3, 13, 16, 0, 0),\n  },\n  {\n    id: 12,\n    title: 'Late Night Event',\n    start: new Date(2015, 3, 17, 19, 30, 0),\n    end: new Date(2015, 3, 18, 2, 0, 0),\n  },\n  {\n    id: 12.5,\n    title: 'Late Same Night Event',\n    start: new Date(2015, 3, 17, 19, 30, 0),\n    end: new Date(2015, 3, 17, 23, 30, 0),\n  },\n  {\n    id: 13,\n    title: 'Multi-day Event',\n    start: new Date(2015, 3, 20, 19, 30, 0),\n    end: new Date(2015, 3, 22, 2, 0, 0),\n  },\n  {\n    id: 14,\n    title: 'Today',\n    start: new Date(new Date().setHours(new Date().getHours() - 3)),\n    end: new Date(new Date().setHours(new Date().getHours() + 3)),\n  },\n  {\n    id: 15,\n    title: 'Point in Time Event',\n    start: now,\n    end: now,\n  },\n  {\n    id: 16,\n    title: 'Video Record',\n    start: new Date(2015, 3, 14, 15, 30, 0),\n    end: new Date(2015, 3, 14, 19, 0, 0),\n  },\n  {\n    id: 17,\n    title: 'Dutch Song Producing',\n    start: new Date(2015, 3, 14, 16, 30, 0),\n    end: new Date(2015, 3, 14, 20, 0, 0),\n  },\n  {\n    id: 18,\n    title: 'Itaewon Halloween Meeting',\n    start: new Date(2015, 3, 14, 16, 30, 0),\n    end: new Date(2015, 3, 14, 17, 30, 0),\n  },\n  {\n    id: 19,\n    title: 'Online Coding Test',\n    start: new Date(2015, 3, 14, 17, 30, 0),\n    end: new Date(2015, 3, 14, 20, 30, 0),\n  },\n  {\n    id: 20,\n    title: 'An overlapped Event',\n    start: new Date(2015, 3, 14, 17, 0, 0),\n    end: new Date(2015, 3, 14, 18, 30, 0),\n  },\n  {\n    id: 21,\n    title: 'Phone Interview',\n    start: new Date(2015, 3, 14, 17, 0, 0),\n    end: new Date(2015, 3, 14, 18, 30, 0),\n  },\n  {\n    id: 22,\n    title: 'Cooking Class',\n    start: new Date(2015, 3, 14, 17, 30, 0),\n    end: new Date(2015, 3, 14, 19, 0, 0),\n  },\n  {\n    id: 23,\n    title: 'Go to the gym',\n    start: new Date(2015, 3, 14, 18, 30, 0),\n    end: new Date(2015, 3, 14, 20, 0, 0),\n  },\n];\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/NotificationBar/NotificationBar.jsx",["2870"],"import { Badge, Button, Card, Drawer, Icon, IconButton, ThemeProvider } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport useNotification from 'app/hooks/useNotification';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant';\r\nimport { getTimeDifference } from 'app/utils/utils.js';\r\nimport React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { themeShadows } from '../MatxTheme/themeColors';\r\nimport { Paragraph, Small } from '../Typography';\r\n\r\nconst Notification = styled('div')(() => ({\r\n  padding: '16px',\r\n  marginBottom: '16px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  height: topBarHeight,\r\n  boxShadow: themeShadows[6],\r\n  '& h5': {\r\n    marginLeft: '8px',\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    fontWeight: '500',\r\n  },\r\n}));\r\n\r\nconst NotificationCard = styled(Box)(({ theme }) => ({\r\n  position: 'relative',\r\n  '&:hover': {\r\n    '& .messageTime': {\r\n      display: 'none',\r\n    },\r\n    '& .deleteButton': {\r\n      opacity: '1',\r\n    },\r\n  },\r\n  '& .messageTime': {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  '& .icon': { fontSize: '1.25rem' },\r\n}));\r\n\r\nconst DeleteButton = styled(IconButton)(({ theme }) => ({\r\n  opacity: '0',\r\n  position: 'absolute',\r\n  right: 5,\r\n  marginTop: 9,\r\n  marginRight: '24px',\r\n  background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst CardLeftContent = styled('div')(({ theme }) => ({\r\n  padding: '12px 8px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  background: 'rgba(0, 0, 0, 0.01)',\r\n  '& small': {\r\n    fontWeight: '500',\r\n    marginLeft: '16px',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Heading = styled('span')(({ theme }) => ({\r\n  fontWeight: '500',\r\n  marginLeft: '16px',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst NotificationBar = ({ container }) => {\r\n  const { settings } = useSettings();\r\n  const theme = useTheme();\r\n  const secondary = theme.palette.text.secondary;\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n  const { deleteNotification, clearNotifications, notifications } = useNotification();\r\n\r\n  const handleDrawerToggle = () => {\r\n    setPanelOpen(!panelOpen);\r\n  };\r\n\r\n  const { palette } = useTheme();\r\n  const textColor = palette.text.primary;\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <IconButton onClick={handleDrawerToggle} color=\"inherit\">\r\n        <Badge  color=\"error\" badgeContent={notifications?.length}>\r\n          <Notification />\r\n        </Badge>\r\n      </IconButton> */}\r\n\r\n      <IconButton onClick={handleDrawerToggle} color=\"inherit\">\r\n        <Badge color=\"success\" badgeContent={notifications?.length}>\r\n          <Icon sx={{ color: '#fff' }}>notifications</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n        <Drawer\r\n          width={'100px'}\r\n          container={container}\r\n          variant=\"temporary\"\r\n          anchor={'right'}\r\n          open={panelOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n        >\r\n          <Box sx={{ width: sideNavWidth }}>\r\n            <Notification>\r\n              <Icon color=\"primary\">notifications</Icon>\r\n              <h5>Notifications</h5>\r\n            </Notification>\r\n\r\n            {notifications?.map((notification) => (\r\n              <NotificationCard key={notification.id}>\r\n                <DeleteButton\r\n                  size=\"small\"\r\n                  className=\"deleteButton\"\r\n                  onClick={() => deleteNotification(notification.id)}\r\n                >\r\n                  <Icon className=\"icon\">clear</Icon>\r\n                </DeleteButton>\r\n                <Link\r\n                  to={`/${notification.path}`}\r\n                  onClick={handleDrawerToggle}\r\n                  style={{ textDecoration: 'none' }}\r\n                >\r\n                  <Card sx={{ mx: 2, mb: 3 }} elevation={3}>\r\n                    <CardLeftContent>\r\n                      <Box display=\"flex\">\r\n                        <Icon className=\"icon\" color={notification.icon.color}>\r\n                          {notification.icon.name}\r\n                        </Icon>\r\n                        <Heading>{notification.heading}</Heading>\r\n                      </Box>\r\n                      <Small className=\"messageTime\">\r\n                        {getTimeDifference(new Date(notification.timestamp))}\r\n                        ago\r\n                      </Small>\r\n                    </CardLeftContent>\r\n                    <Box sx={{ px: 2, pt: 1, pb: 2 }}>\r\n                      <Paragraph sx={{ m: 0 }}>{notification.title}</Paragraph>\r\n                      <Small sx={{ color: secondary }}>{notification.subtitle}</Small>\r\n                    </Box>\r\n                  </Card>\r\n                </Link>\r\n              </NotificationCard>\r\n            ))}\r\n            {!!notifications?.length && (\r\n              <Box sx={{ color: secondary }}>\r\n                <Button onClick={clearNotifications}>Clear Notifications</Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Drawer>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotificationBar;\r\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Singleimage.jsx",["2871"],"import { FolderOpenOutlined } from '@ant-design/icons';\nimport { Button, Space, Upload } from 'antd';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  file: {\n    width: '100%',\n    padding: '14px',\n    border: '1px solid #ffffff',\n  },\n}));\n\nconst Singleimage = () => {\n  const classes = useStyles();\n  return (\n    <>\n      {/* <Space\n    direction=\"vertical\"\n    style={{\n      width: '100%',\n    }}\n    size=\"large\"\n  > */}\n      <Upload action=\"\" listType=\"picture\" maxCount={1}>\n        <Button icon={<FolderOpenOutlined />} className={classes.file}>\n          {' '}\n          Single image\n        </Button>\n      </Upload>\n      {/* </Space>\n       */}\n    </>\n  );\n};\n\nexport default Singleimage;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleFormNew.jsx",["2872","2873"],"import { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, styled } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst SimpleFormNew = (props) => {\n  const classes = useStyles();\n  const [data1, setdata] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n  }, [props]);\n\n  return (\n    <>\n      {data1.multiline ? (\n        <>\n          <TextField\n            fullWidth\n            multiline\n            rows={data1.rows}\n            type={data1.type}\n            name={data1.name}\n            label={data1.label}\n            variant=\"outlined\"\n            onBlur={data1.onBlur}\n            value={data1.value}\n            className={classes.main2}\n            onChange={data1.onChange}\n            helperText={data1.helperText}\n            error={data1.error}\n          />\n        </>\n      ) : (\n        <>\n          <TextField\n            fullWidth\n            type={data1.type}\n            name={data1.name}\n            label={data1.label}\n            variant=\"outlined\"\n            onBlur={data1.onBlur}\n            value={data1.value}\n            className={classes.main2}\n            onChange={data1.onChange}\n            helperText={data1.helperText}\n            error={data1.error}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SimpleFormNew;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteComboNew.jsx",["2874","2875","2876","2877","2878","2879","2880","2881"],"import React, { useState, useEffect } from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport { makeStyles } from '@material-ui/styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nconst useStyles = makeStyles((theme) => ({}));\n\n// function AutocompleteCombo(props)\n\nconst AutocompleteComboNew = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = useState([]);\n\n  const [data2, setdata] = useState([]);\n  const [names, setnames] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n    setnames(props.props.names);\n  }, [props]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value\n    );\n  };\n\n  return (\n    <>\n      <FormControl fullWidth className={classes.main3}>\n        {/* <InputLabel id=\"demo-simple-select-helper-label\">{data2.name}</InputLabel> */}\n        {/* <Select\n          //  name={data2.name}\n          label={data2.label}\n          value={data2.value}\n          onChange={handleChange}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select> */}\n        {/* <InputLabel id=\"demo-simple-select-helper-label\">{data2.label}</InputLabel> */}\n        <TextField\n          id={data2.id}\n          label={data2.label}\n          value={data2.value}\n          onBlur={data2.onBlur}\n          onChange={data2.onChange}\n          fullWidth\n          select\n          helperText={data2.helperText}\n          error={data2.error}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </FormControl>\n    </>\n  );\n};\nexport default AutocompleteComboNew;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/utils/utils.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/themeColors.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/NotificationContext.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxCustomizer/MatxCustomizer.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useNotification.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/EcommerceActions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxCustomizer/BadgeSelected.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/mock.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/auth.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/fake-db/db/ecommerce.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSuspense.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/MatxTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/EchartTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxProgressBar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSearchBox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLogo.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ChatHead.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ConfirmationDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/ChatAvatar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Chatbox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/Breadcrumb.jsx",["2882"],"import { Breadcrumbs, Hidden, Icon, styled, useTheme } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\n\nconst BreadcrumbRoot = styled('div')(() => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  fontFamily: 'Montserrat,sans-serif !important',\n}));\n\nconst BreadcrumbName = styled('h4')(() => ({\n  margin: 0,\n  fontSize: '16px',\n  paddingBottom: '1px',\n  verticalAlign: 'middle',\n  textTransform: 'capitalize',\n  fontFamily: 'Montserrat,sans-serif !important',\n}));\n\nconst SubName = styled('span')(({ theme }) => ({\n  textTransform: 'capitalize',\n  fontFamily: 'Montserrat,sans-serif !important',\n  color: theme.palette.text.secondary,\n}));\n\nconst Separator = styled('h4')(({ theme }) => ({\n  margin: 0,\n  marginLeft: 8,\n  paddingBottom: '3px',\n  fontFamily: 'Montserrat,sans-serif !important',\n  color: '#4BB543 !important',\n}));\n\nconst StyledIcon = styled(Icon)(() => ({\n  marginLeft: 8,\n  marginBottom: '4px',\n  verticalAlign: 'middle',\n  color: '#4BB543 !important',\n}));\n\nconst Breadcrumb = ({ routeSegments }) => {\n  const theme = useTheme();\n  const hint = theme.palette.text.hint;\n\n  return (\n    <BreadcrumbRoot>\n      {routeSegments ? (\n        <Hidden xsDown>\n          <BreadcrumbName>{routeSegments[routeSegments.length - 1]['name']}</BreadcrumbName>\n          <Separator>|</Separator>\n        </Hidden>\n      ) : null}\n\n      <Breadcrumbs\n        separator={<Icon sx={{ color: 'success' }}>navigate_next</Icon>}\n        sx={{ display: 'flex', alignItems: 'center', position: 'relative' }}\n      >\n        <NavLink to=\"/\">\n          <StyledIcon color=\"success\">home</StyledIcon>\n        </NavLink>\n\n        {routeSegments\n          ? routeSegments.map((route, index) => {\n              return index !== routeSegments.length - 1 ? (\n                <NavLink key={index} to={route.path}>\n                  <SubName>{route.name}</SubName>\n                </NavLink>\n              ) : (\n                <SubName key={index}>{route.name}</SubName>\n              );\n            })\n          : null}\n      </Breadcrumbs>\n    </BreadcrumbRoot>\n  );\n};\n\nexport default Breadcrumb;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenavContent.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenavContainer.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxSidenav/MatxSidenav.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/icons/GoogleIcon.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/icons/FacebookIcon.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/RootReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Session9Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/MaterialRoutes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/DashboardRoutes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/settings.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Session8Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/Session7Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/Session5Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/Session4Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/session3Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Session2Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/SessionRoutes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/Session6Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Session1Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/NotFound.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/ChartsRoute.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/auth/AuthGuard.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/initThemes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxLayout/Layout1/Layout1Settings.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/auth/authRoles.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AppAutoComplete.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/AppDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/Analytics.jsx",["2883","2884","2885","2886","2887","2888","2889","2890","2891","2892","2893"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Grid, styled, useTheme } from '@mui/material';\nimport { Box } from '@mui/system';\nimport Typography from '@material-ui/core/Typography';\nimport Campaigns from './shared/Campaigns';\nimport DoughnutChart from './shared/Doughnut';\nimport RowCards from './shared/RowCards';\nimport StatCards from './shared/StatCards';\nimport StatCards2 from './shared/StatCards2';\nimport TopSellingTable from './shared/TopSellingTable';\nimport UpgradeCard from './shared/UpgradeCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProductionQuantityLimitsIcon from '@mui/icons-material/ProductionQuantityLimits';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport GroupIcon from '@mui/icons-material/Group';\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';\nimport TransferWithinAStationIcon from '@mui/icons-material/TransferWithinAStation';\nimport ShoppingBasketIcon from '@mui/icons-material/ShoppingBasket';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst Title = styled('span')(() => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  marginRight: '.5rem',\n  textTransform: 'capitalize',\n}));\n\nconst SubTitle = styled('span')(({ theme }) => ({\n  fontSize: '0.875rem',\n  color: theme.palette.text.secondary,\n}));\n\nconst H4 = styled('h4')(({ theme }) => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  marginBottom: '16px',\n  textTransform: 'capitalize',\n  color: theme.palette.text.secondary,\n}));\nconst useStyles = makeStyles((theme) => ({\n  box0: {\n    width: '100%',\n    backgroundColor: '#fff',\n    boxShadow: 'rgb(13 13 13 / 5%) 0px 10px 8px',\n    padding: '30px 30px',\n    marginBottom: '15px',\n    // boxShadow:\n    //   'rgba(240, 46, 170, 0.4) -5px 5px, rgba(240, 46, 170, 0.3) -10px 10px, rgba(240, 46, 170, 0.2)-15px 15px, rgba(240, 46, 170, 0.1) -20px 20px, rgba(240, 46, 170, 0.05) -25px 25px',\n  },\n  profile4: {\n    background: '#fff',\n    color: '#000',\n    margin: '18px 0px',\n    boxShadow: 'rgb(13 13 13 / 5%) 0px 10px 8px',\n  },\n  tab1: {\n    // border: '1px solid #d7cece',\n    // padding: '4px 0px',\n  },\n  tab: {\n    // background: '#fff',\n    background: '#e0e0e07a',\n    border: '1px solid #b5b5b559',\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={2}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst Analytics = () => {\n  const { palette } = useTheme();\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  console.log('value', value);\n\n  const handleChangeButton = (e) => {\n    setValue(e);\n  };\n  return (\n    <>\n      <Container>\n        <div className={classes.box0}>\n          <Grid container spacing={2}>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: '#2eadd3' }}\n                icon={<ProductionQuantityLimitsIcon />}\n                title=\"Products\"\n                url=\"/Product/ListProducts\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(66, 139, 202)' }}\n                icon={<FavoriteIcon />}\n                title=\"Sale\"\n                url=\"/Sales/SalesList\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(255, 84, 84)' }}\n                icon={<FavoriteBorderIcon />}\n                title=\"Quotations\"\n                url=\"/Quotations/Listquotation\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(173, 39, 39)' }}\n                icon={<ShoppingBasketIcon />}\n                title=\"Purchases\"\n                url=\"/Purchases/AddExpense\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(120, 205, 81)' }}\n                icon={<TransferWithinAStationIcon />}\n                title=\"Transfers\"\n                url=\"/Transfers/ListTransfers\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(250, 187, 61)' }}\n                icon={<GroupIcon />}\n                title=\"Customers\"\n                url=\"/People/ListUsers\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(48, 63, 159)' }}\n                icon={<GroupIcon />}\n                title=\"Suppliers\"\n                url=\"/People/ListSuppliers\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(123, 31, 162)' }}\n                icon={<NotificationsActiveIcon />}\n                title=\"Notifications\"\n                url=\"/Notifications/Notifications\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(34, 42, 69)' }}\n                icon={<GroupIcon />}\n                title=\"Users\"\n                url=\"/People/ListUsers'\"\n              />\n            </Grid>\n            <Grid item xs={6} md={6} sm={6} lg={2}>\n              <StatCards\n                style={{ backgroundColor: 'rgb(0, 0, 0)' }}\n                icon={<SettingsIcon />}\n                title=\"Settings\"\n                url=\"/Settings/SystemSettings\"\n              />\n            </Grid>\n          </Grid>\n        </div>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={12} sm={12} lg={12}>\n            <div className={classes.profile4}>\n              {/* <PersonPinIcon /> */}\n              <Tabs\n                className={classes.tab5}\n                value={value}\n                onChange={handleChange}\n                // indicatorColor=\"primary\"\n              >\n                <Tab className={classes.tab} label=\"Sales\" {...a11yProps(0)} />\n                <Tab className={classes.tab} label=\"Quotations\" {...a11yProps(1)} />\n                <Tab className={classes.tab} label=\"Purchases\" {...a11yProps(2)} />\n                <Tab className={classes.tab} label=\"Transfers\" {...a11yProps(3)} />\n                <Tab className={classes.tab} label=\"Customers\" {...a11yProps(4)} />\n                <Tab className={classes.tab} label=\"Suppliers\" {...a11yProps(5)} />\n              </Tabs>\n              <TabPanel className={classes.tab1} value={value} index={0}>\n                <TopSellingTable />\n              </TabPanel>\n              <TabPanel className={classes.tab1} value={value} index={1}>\n                <TopSellingTable />\n              </TabPanel>\n              <TabPanel className={classes.tab1} value={value} index={2}>\n                <TopSellingTable />\n              </TabPanel>\n              <TabPanel className={classes.tab1} value={value} index={3}>\n                <TopSellingTable />\n              </TabPanel>\n              <TabPanel className={classes.tab1} value={value} index={4}>\n                <TopSellingTable />\n              </TabPanel>\n              <TabPanel className={classes.tab1} value={value} index={5}>\n                <TopSellingTable />\n              </TabPanel>\n            </div>\n          </Grid>\n        </Grid>\n        {/* \n        <Grid container spacing={3}>\n          <Grid item lg={8} md={8} sm={12} xs={12}>\n            <TopSellingTable />\n            <StatCards2 />\n\n            <H4>Ongoing Projects</H4>\n            <RowCards />\n          </Grid>\n\n          <Grid item lg={4} md={4} sm={12} xs={12}>\n            <Card sx={{ px: 3, py: 2, mb: 3 }}>\n              <Title>Traffic Sources</Title>\n              <SubTitle>Last 30 days</SubTitle>\n\n              <DoughnutChart\n                height=\"300px\"\n                color={[palette.primary.dark, palette.primary.main, palette.primary.light]}\n              />\n            </Card>\n\n            <UpgradeCard />\n            <Campaigns />\n          </Grid>\n        </Grid> */}\n      </Container>\n    </>\n  );\n};\n\nexport default Analytics;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Appuploadimage.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/AppForm.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/tables/AppTable.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Backups.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/AppExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/AppSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/AppSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/AppSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/AppRadio.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/AppMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/ck/Appeditor.jsx",["2894","2895","2896","2897","2898"],"import { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n    ckt: {\n     height:\"200px\",\n    },\n  }));\n\nexport default function Appeditor() {\n    const classes = useStyles();\n  return (\n    <>\n\n                 <CKEditor\n                  \n                    editor={ ClassicEditor }\n                    data=\"\"\n                    onReady={ editor => {\n                        console.log( 'Editor is ready to use!', editor );\n                    } }\n                    onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n                        console.log( { event, editor, data } );\n                    } }\n                    onBlur={ ( event, editor ) => {\n                        console.log( 'Blur.', editor );\n                    } }\n                    onFocus={ ( event, editor ) => {\n                        console.log( 'Focus.', editor );\n                        \n                    } }\n                />\n    </>\n  );\n};\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/icons/AppIcon.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/AppCheckbox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/AppButton.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Productdetail.jsx",["2899","2900"],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@mui/material/Grid';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport mobile1 from '../../../../src/public/assets/images/mobile1.png';\nimport SimpleTable from '../material-kit/tables/SimpleTable';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport PrintIcon from '@mui/icons-material/Print';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  profilepic: {\n    width: '100%',\n  },\n  product: {\n    color: '#000',\n    padding: '45px 20px',\n  },\n  test07: {\n    textAlign: 'left',\n    paddingBottom: '21px',\n  },\n  test6: {\n    fontSize: '13px',\n  },\n  product1: {\n    margin: '20px 0px',\n    borderTop: '1px solid #e5dfdf',\n    borderBottom: '1px solid #e5dfdf',\n    padding: '16px 0px 10px',\n  },\n  testtt: {\n    fontSize: '15px',\n    fontWeight: '600',\n  },\n  test5: {\n    border: '1px solid#a79797',\n    padding: '9px 5px 0px',\n    borderRadius: '50%',\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nfunction Productdetail() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Product Details' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Box sx={{ border: 1, borderColor: 'divider' }}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"basic tabs example\"\n            sx={{ borderBottom: '1px solid#e1dada' }}\n          >\n            <Tab label=\"Product Details\" {...a11yProps(0)} />\n            <Tab label=\"Chart\" {...a11yProps(1)} />\n            <Tab label=\"Sales\" {...a11yProps(2)} />\n            <Tab label=\"Quotations\" {...a11yProps(3)} />\n            <Tab label=\"Purchases\" {...a11yProps(4)} />\n            <Tab label=\"Transfers\" {...a11yProps(5)} />\n            <Tab label=\"Quantity Adjustments\" {...a11yProps(6)} />\n          </Tabs>\n          <TabPanel value={value} index={0}>\n            <Box className={classes.product}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <img className={classes.profilepic} src={mobile1} alt=\"image\" />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <Typography>Warehouse Quantity</Typography>\n                  <Typography>Warehouse Name</Typography>\n                  <Typography>Quantity (Racks)</Typography>\n                  <div className={classes.product1}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6} sm={3} md={3}>\n                        <NavLink to=\"/Product/PrintBarcode\" className={classes.test5}>\n                          <PrintIcon style={{ color: 'rgb(100 94 94)', fontSize: '18px' }} />\n                        </NavLink>\n                        <Typography>Print</Typography>\n                      </Grid>\n                      <Grid item xs={6} sm={3} md={3}>\n                        <NavLink to=\"#\" className={classes.test5}>\n                          <FileDownloadIcon style={{ color: 'rgb(100 94 94)', fontSize: '18px' }} />\n                        </NavLink>\n                        <Typography>Pdf</Typography>\n                      </Grid>\n                      <Grid item xs={6} sm={3} md={3}>\n                        <NavLink to=\"/Product/Editproduct\" className={classes.test5}>\n                          <EditIcon style={{ color: 'rgb(100 94 94)', fontSize: '18px' }} />\n                        </NavLink>\n                        <Typography>Edit</Typography>\n                      </Grid>\n                      <Grid item xs={6} sm={3} md={3}>\n                        <NavLink to=\"/\" className={classes.test5}>\n                          <DeleteIcon style={{ color: 'rgb(100 94 94)', fontSize: '18px' }} />\n                        </NavLink>\n                        <Typography>Delete</Typography>\n                      </Grid>\n                    </Grid>\n                  </div>\n                  <Grid container spacing={2}>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Title</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Standard</Typography>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Name</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Test 03</Typography>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Code</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>0312</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Brand</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Apple</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Category</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Apple Products</Typography>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Sub Category</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>iPhone</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Unit</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Pcs (Piece)</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Cost</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>admin@stock.com150.00</Typography>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Price</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>admin@stock.com150.00</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Tax Rate</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>SGST</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.testtt}>Tax Method</Typography>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6}>\n                      <Typography className={classes.test6}>Inclusive</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <SimpleTable />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <SimpleTable />\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <SimpleTable />\n          </TabPanel>\n          <TabPanel value={value} index={4}>\n            <SimpleTable />\n          </TabPanel>\n          <TabPanel value={value} index={5}>\n            <SimpleTable />\n          </TabPanel>\n          <TabPanel value={value} index={6}>\n            <SimpleTable />\n          </TabPanel>\n        </Box>\n      </SimpleCard>\n    </Container>\n  );\n}\nexport default Productdetail;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Editproduct.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Stockdetails.jsx",["2901","2902","2903"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { Button } from '@material-ui/core';\nimport Typography from '@mui/material/Typography';\nimport Appeditor from '../material-kit/ck/Appeditor';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Label from '../material-kit/tables/Label';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  text3: {\n    fontSize: '14px',\n    textAlign: 'left',\n    paddingBottom: '5px',\n  },\n  text4: {\n    border: '1px solid #dbcdcd',\n    width: '100%',\n    padding: '10px',\n    fontWeight: '600',\n  },\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  box2: {\n    border: '1px solid #dbcdcd',\n    padding: '14px',\n    marginBottom: '15px',\n    width: '100%',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: '#ab043a',\n    margin: '0px 10px',\n  },\n}));\nconst Stockdetails = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState('ForBoth');\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  const handleChange1 = (event) => {};\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Notification' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Typography className={classes.text3}>\n              Please fill in the information below. The field labels marked with * are required\n              input fields.\n            </Typography>\n          </Grid>\n\n          <Typography className={classes.text4}> Stock Count</Typography>\n          <Box className={classes.box2}>\n            <Grid container spacing={1}>\n              <Grid item xs={6} md={6}>\n                <Typography>Warehouse</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>Impetrosys ( WH1 )</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>Date</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>18/11/2020 12:34</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>Reference</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography></Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>Type</Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6}>\n                <Typography>Full</Typography>\n              </Grid>\n            </Grid>\n          </Box>\n\n          <Grid item xs={12}>\n            <Box className={classes.box2}>\n              <Typography>\n                The first line in downloaded csv file should remain as it is. Please do not change\n                the order of columns. The correct column order is (Product Code, Product Name,\n                Variant, Expected, Counted) & you must follow this. Please make sure the csv file is\n                UTF-8 encoded and not saved with byte order mark (BOM). You just need to update the\n                COUNTED column in the downloaded csv file.\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Fileattachment\n              props={{\n                label: 'Upload File',\n              }}\n            />\n          </Grid>\n          <Label sx={{ mt: 1 }}>Note</Label>\n          <Grid item xs={12}>\n            <Appeditor />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button type=\"submit\" className={classes.btn2}>\n              Submit\n            </Button>\n            <Button type=\"submit\" className={classes.btn3}>\n              Reset\n            </Button>\n          </Grid>\n        </Grid>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Stockdetails;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Profile.jsx",["2904","2905","2906","2907","2908","2909","2910","2911","2912","2913","2914","2915","2916","2917","2918","2919","2920"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleRadio from '../material-kit/radio/SimpleRadio';\nimport SimpleRadioNew from '../material-kit/radio/SimpleRadioNew';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport CreateIcon from '@mui/icons-material/Create';\nimport KeyIcon from '@mui/icons-material/Key';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport SimpleForms from '../material-kit/forms/SimpleForms';\nimport Typography from '@material-ui/core/Typography';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport Label from '../material-kit/tables/Label';\nimport face from '../../../../src/public/assets/images/face.jpg';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { FolderOpenOutlined } from '@ant-design/icons';\nimport { Button as Buttonimage, Space, Upload } from 'antd';\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  file: {\n    width: '100%',\n    padding: '14px',\n    border: '1px solid #ffffff',\n  },\n  profile0: {\n    boxShadow: 'rgb(0 0 0 / 10%) 0px 10px 50px',\n    backgroundColor: 'rgba(255,255,255,0.7);',\n    backdropFilter: 'blur(20px)',\n    borderStyle: 'solid',\n    borderColor: '#f5f5f5',\n    borderBottomwidth: 'thin',\n    marginBottom: '1px',\n    padding: '0px 14px',\n  },\n  profile04: {\n    padding: '0px 0px !important',\n  },\n  profile01: {\n    boxShadow: 'rgb(0 0 0 / 10%) 0px 10px 50px',\n    backgroundColor: 'rgba(255,255,255,0.7)',\n    textAlign: 'center',\n    color: '#000',\n    borderRadius: '0px',\n    padding: '20px 0px',\n  },\n  profilepic: {\n    borderRadius: '50%',\n    width: '150px',\n    boxShadow: 'rgb(0 0 0 / 10%) 0px 10px 50px',\n    border: '2px solid #d9c9c9',\n    padding: '12px',\n  },\n  ty: {\n    fontSize: '17px',\n    fontWeight: '700',\n    padding: '0px 12px',\n    // textAlign: 'start',\n  },\n  ty1: {\n    fontSize: '15px',\n    padding: '10px 12px',\n    width: '100%',\n  },\n  ty0: {\n    // backgroundImage: 'linear-gradient(to right, #8e2de2, #4a00e0)',\n    backgroundImage: 'linear-gradient(to right, rgb(10 37 64), #094e0d)',\n    boxShadow: 'rgb(17 12 46 / 15%) 0px 48px 100px 0px',\n    color: '#fff',\n    borderRadius: '50%',\n    padding: '10px 10px 3px',\n    textAlign: 'center',\n  },\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\n\n\nconst initialValuestab2 = {\n  Oldpassword: '',\n  Newpassword: '',\n  Confirmpassword: '',\n  // Gender: 'male'\n  // AttachDocument: '',\n  // Note: ''\n};\n\nconst initialValuestab3 = {};\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Fname: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n  Lname: Yup.string()\n    .min(6, 'Category must be 6 character length')\n    .required('Category is required!'),\n  Company: Yup.string()\n    .min(6, 'Amount must be 6 character length')\n    .required('Amount is required!'),\n  Mobile: Yup.string()\n    .min(6, 'Amount must be 6 character length')\n    .required('Amount is required!'),\n});\n\nconst validationSchematab2 = Yup.object().shape({\n  Oldpassword: Yup.string()\n    .required('Old Password is required')\n    .min(6, 'Password must be at least 6 characters'),\n  Newpassword: Yup.string()\n    .required('Password is required')\n    .min(6, 'New Password must be at least 6 characters'),\n  Confirmpassword: Yup.string()\n    .required('Confirm New Password is required')\n    .oneOf([Yup.ref('Newpassword')], 'Passwords must match'),\n});\n\nconst validationSchematab3 = Yup.object().shape({});\nconst Profile = () => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState();\n  const [gender, setgender] = useState('male');\n  const [image, setimage] = useState('');\n  const props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text',\n    },\n\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n        setimage(info.file, info.fileList[0].originFileObj);\n      }\n\n      if (info.file.status === 'done') {\n        setimage(info.file, info.fileList[0].originFileObj);\n        console.log(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        console.log(`${info.file.name} file upload failed.`);\n      }\n    },\n  };\n  const initialValues = {\n    Fname: 'OWNER',\n    Lname: 'Company',\n    Company: 'Impretosys',\n    Mobile: '9713254069',\n    // Gender: 'male'\n    // AttachDocument: '',\n    // Note: ''\n  };\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handleChange1 = (event) => {\n    setgender(event.target.value);\n  };\n  const handleimage = (event, image) => {\n    console.log(image);\n  };\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values, gender);\n    // setLoading(true);\n\n    // try {\n    //   register(values.email, values.username, values.password);\n    //   navigate('/');\n    //   setLoading(false);\n    // } catch (e) {\n    //   console.log(e);\n    //   setLoading(false);\n    // }\n  };\n\n  const handleFormSubmittab2 = (values) => {\n    console.log(values);\n    // setLoading(true);\n\n    // try {\n    //   register(values.email, values.username, values.password);\n    //   navigate('/');\n    //   setLoading(false);\n    // } catch (e) {\n    //   console.log(e);\n    //   setLoading(false);\n    // }\n  };\n\n  const handleFormSubmittab3 = (values) => {\n    console.log(image);\n    // setLoading(true);\n\n    // try {\n    //   register(values.email, values.username, values.password);\n    //   navigate('/');\n    //   setLoading(false);\n    // } catch (e) {\n    //   console.log(e);\n    //   setLoading(false);\n    // }\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Users Profile' }]}\n        />\n      </Box>\n      <div>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Box className={classes.profile01}>\n              <Typography className={classes.ty}>User Profile</Typography>\n              <AccordionSummary style={{ display: ' grid' }} className={classes.profile04}>\n                <Typography className={classes.ty0}>\n                  <img className={classes.profilepic} src={face} alt=\"image\" />\n                </Typography>\n              </AccordionSummary>\n              {/* <img className={classes.profilepic} src={face} alt=\"image\" /> */}\n              <Typography>Login Email</Typography>\n              <Typography>admin@stock.com</Typography>\n            </Box>\n          </Grid>\n        </Grid>\n        <Accordion\n          expanded={expanded === 'panel1'}\n          onChange={handleChange('panel1')}\n          className={classes.profile0}\n        >\n          <AccordionSummary\n            expandIcon={<ArrowForwardIosSharpIcon style={{ fontSize: '15px' }} />}\n            aria-controls=\"panel1bh-content\"\n            id=\"panel1bh-header\"\n            className={classes.profile04}\n          >\n            <Typography className={classes.ty0}>\n              <CreateIcon />\n            </Typography>\n            <Typography className={classes.ty1}>Edit</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Formik\n              onSubmit={handleFormSubmit}\n              initialValues={initialValues}\n              validationSchema={validationSchema}\n            >\n              {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <SimpleFormNew\n                        props={{\n                          type: 'text',\n                          name: 'Fname',\n                          label: 'First Name',\n                          onBlur: handleBlur,\n                          value: values.Fname,\n                          onChange: handleChange,\n                          helperText: touched.Fname && errors.Fname,\n                          error: Boolean(errors.Fname && touched.Fname),\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      {/* <SimpleForms\n                      props={{\n                        type: 'text',\n                        name: 'First Name',\n                        label: 'First Name',\n                        variant: 'outlined',\n                        defaultValue: 'Owner',\n                        value: 'Owner',\n                      }}\n                    /> */}\n                      {/* <SimpleForms\n                      props={{\n                        type: 'text',\n                        name: 'Last Name',\n                        label: 'Last Name',\n                        variant: 'outlined',\n                        defaultValue: 'Owner',\n                        value: 'Owner',\n                      }}\n                    /> */}\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <SimpleFormNew\n                        props={{\n                          type: 'text',\n                          name: 'Lname',\n                          label: 'Last Name',\n                          onBlur: handleBlur,\n                          value: values.Lname,\n                          onChange: handleChange,\n                          helperText: touched.Lname && errors.Lname,\n                          error: Boolean(errors.Lname && touched.Lname),\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <SimpleFormNew\n                        props={{\n                          type: 'text',\n                          name: 'Company',\n                          label: 'Company',\n                          onBlur: handleBlur,\n                          value: values.Company,\n                          onChange: handleChange,\n                          helperText: touched.Company && errors.Company,\n                          error: Boolean(errors.Company && touched.Company),\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <SimpleFormNew\n                        props={{\n                          type: 'text',\n                          name: 'Mobile',\n                          label: 'Phone Number',\n                          onBlur: handleBlur,\n                          value: values.Mobile,\n                          onChange: handleChange,\n                          helperText: touched.Mobile && errors.Mobile,\n                          error: Boolean(errors.Mobile && touched.Mobile),\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <SimpleRadioNew\n                        props={{\n                          Lable: 'Gender',\n                          Value: gender,\n                          Name: 'Gender',\n                          Arealable: 'Gender',\n                          Change: handleChange1,\n                          Radiobutton: [\n                            { name: 'Male', value: 'male' },\n                            { name: 'Female', value: 'female' },\n                            { name: 'Other', value: 'other' },\n                          ],\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        type=\"submit\"\n                        loading={loading}\n                        className={classes.btn2}\n                      >\n                        Update Details\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </form>\n              )}\n            </Formik>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion\n          expanded={expanded === 'panel2'}\n          onChange={handleChange('panel2')}\n          className={classes.profile0}\n        >\n          <AccordionSummary\n            expandIcon={<ArrowForwardIosSharpIcon style={{ fontSize: '15px' }} />}\n            aria-controls=\"panel2bh-content\"\n            id=\"panel2bh-header\"\n            className={classes.profile04}\n          >\n            <Typography className={classes.ty0}>\n              <KeyIcon />\n            </Typography>\n            <Typography className={classes.ty1}>Change Password</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Formik\n              onSubmit={handleFormSubmittab2}\n              initialValues={initialValuestab2}\n              validationSchema={validationSchematab2}\n            >\n              {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={12} lg={12}>\n                      {/* <SimpleForms\n                        props={{\n                          type: 'text',\n                          name: 'Old Password',\n                          label: 'Old Password',\n                          variant: 'outlined',\n                          defaultValue: '',\n                          value: '',\n                        }}\n                      /> */}\n                      <SimpleFormNew\n                        props={{\n                          type: 'password',\n                          name: 'Oldpassword',\n                          label: 'Old Password',\n                          onBlur: handleBlur,\n                          value: values.Oldpassword,\n                          onChange: handleChange,\n                          helperText: touched.Oldpassword && errors.Oldpassword,\n                          error: Boolean(errors.Oldpassword && touched.Oldpassword),\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                      {/* <SimpleForms\n                        props={{\n                          type: 'text',\n                          name: 'New Password',\n                          label: 'New Password ',\n                          variant: 'outlined',\n                          defaultValue: '',\n                          value: '',\n                        }}\n                      /> */}\n                      <SimpleFormNew\n                        props={{\n                          type: 'password',\n                          name: 'Newpassword',\n                          label: 'New Password',\n                          onBlur: handleBlur,\n                          value: values.Newpassword,\n                          onChange: handleChange,\n                          helperText: touched.Newpassword && errors.Newpassword,\n                          error: Boolean(errors.Newpassword && touched.Newpassword),\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      {/* <SimpleForms\n                        props={{\n                          type: 'text',\n                          name: 'Confirm Password ',\n                          label: 'Confirm Password ',\n                          variant: 'outlined',\n                          defaultValue: '',\n                          value: '',\n                        }}\n                      /> */}\n                      <SimpleFormNew\n                        props={{\n                          type: 'password',\n                          name: 'Confirmpassword',\n                          label: 'Confirm Password',\n                          onBlur: handleBlur,\n                          value: values.Confirmpassword,\n                          onChange: handleChange,\n                          helperText: touched.Confirmpassword && errors.Confirmpassword,\n                          error: Boolean(errors.Confirmpassword && touched.Confirmpassword),\n                        }}\n                      />\n                      {/* <Button type=\"submit\" className={classes.btn22}>\n                Change Cassword\n              </Button> */}\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        type=\"submit\"\n                        loading={loading}\n                        className={classes.btn2}\n                      >\n                        Change Password\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </form>\n              )}\n            </Formik>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion\n          expanded={expanded === 'panel3'}\n          onChange={handleChange('panel3')}\n          className={classes.profile0}\n        >\n          <AccordionSummary\n            expandIcon={<ArrowForwardIosSharpIcon style={{ fontSize: '15px' }} />}\n            aria-controls=\"panel3bh-content\"\n            id=\"panel3bh-header\"\n            className={classes.profile04}\n          >\n            <Typography className={classes.ty0}>\n              <PersonPinIcon />\n            </Typography>\n            <Typography className={classes.ty1}>Avater</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Formik\n              onSubmit={handleFormSubmittab3}\n              initialValues={initialValuestab3}\n              validationSchema={validationSchematab3}\n            >\n              {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                  <Label style={{ marginBottom: '10px' }}>Change Avatar</Label>\n\n                  <Upload action=\"\" listType=\"picture\" maxCount={1} {...props}>\n                    <Buttonimage icon={<FolderOpenOutlined />} className={classes.file}>\n                      {' '}\n                      Single image\n                    </Buttonimage>\n                  </Upload>\n                  {/* <Button type=\"submit\" style={{ marginTop: '20px' }} className={classes.btn2}>\n                    Update Avater\n              </Button> */}\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    style={{ marginTop: '20px' }}\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Update Avater\n                  </LoadingButton>\n                </form>\n              )}\n            </Formik>\n          </AccordionDetails>\n        </Accordion>\n      </div>\n    </Container>\n  );\n};\n\nexport default Profile;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/Conutstock.jsx",["2921","2922","2923","2924","2925","2926","2927","2928"],"import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport Countstack from '../material-kit/radio/Countstack';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  Reference: '',\n  Warehouse: '',\n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n});\n\nconst Conutstock = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Conut stock' }]}\n        />\n      </Box>\n\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference',\n                      // onChange:{handleChange},\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Label style={{ margin: '5px 0px 10px 0px' }}>type</Label>\n              <Countstack />\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Add Biller\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Conutstock;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/StockCounts.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/AddAdjustment.jsx",["2929","2930","2931","2932","2933","2934"],"import React, { useState } from 'react';\nimport Grid from '@mui/material/Grid';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Date from '../material-kit/forms/Date';\nimport { makeStyles } from '@material-ui/styles';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n// inital login credentials\nconst initialValues = {\n  Reference: '',\n  Warehouse: '',\n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n});\n\nconst AddAdjustment = () => {\n  const handleChange = (event) => {\n    console.log(event);\n  };\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Adjustment' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Label style={{ marginTop: '10px' }}>Products *</Label>\n                  <Searchtable />\n                  <Label style={{ margin: '15px 0px' }}>Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Add Biller\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddAdjustment;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/QuantityAdjustments.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/ImportProducts.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/PrintBarcode.jsx",["2935","2936","2937","2938","2939"],"import React from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Typography from '@mui/material/Typography';\nimport LabelledCheckbox from '../material-kit/checkbox/LabelledCheckbox';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@mui/material/Grid';\nimport { Button } from '@mui/material';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  Style: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Style: Yup.string()\n    .min(6, 'Style must be 6 character length')\n    .required('Style is required!'),\n});\nconst PrintBarcode = () => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    // setLoading(true);\n\n    // try {\n    //   register(values.email, values.username, values.password);\n    //   navigate('/');\n    //   setLoading(false);\n    // } catch (e) {\n    //   console.log(e);\n    //   setLoading(false);\n    // }\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Print Barcode' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <Typography variant=\"subtitle1\">Add Product</Typography>\n                  <Searchtable />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      id: 'Category',\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Style',\n                      label: 'Style',\n                      value: values.Style,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Style'),\n                      helperText: touched.Style && errors.Style,\n                      error: Boolean(errors.Style && touched.Style),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <LabelledCheckbox />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Update\n                  </LoadingButton>\n                  <Button variant=\"contained\" className={classes.btn3}>\n                    Reset\n                  </Button>\n                </Grid>\n                {/* <Typography variant=\"subtitle1\" sx={{ mt: 1, mb: 1 }}>\n          <Button variant=\"contained\" className={classes.btn2}>\n            Update\n          </Button>\n          <Button variant=\"contained\" className={classes.btn3}>\n            Reset\n          </Button>\n        </Typography> */}\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default PrintBarcode;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/ListProducts.jsx",["2940"],"import { useState, useEffect } from 'react';\nimport axios from 'axios.js';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleTable from '../material-kit/tables/SimpleTable';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst ListProducts = () => {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setPosts(data.data.ListstockproductResponce));\n  }, []);\n\n  // console.log(posts, 'kkkk');\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'List Products' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <SimpleTable\n          props={{\n            productlist: posts,\n          }}\n        />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default ListProducts;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/AddReturn.jsx",["2941","2942","2943","2944"],"import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  OrderDiscount: '',\n  Shipping: '',\n  Customer: '',\n  Reference: '',\n  Biller: '',\n  Supplier: '',\n  Warehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  OrderDiscount: Yup.string()\n    .min(6, 'OrderDiscount must be 6 character length')\n    .required('Order Discount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\n\nconst AddReturn = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Return' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'OrderDiscount',\n                      label: 'Order Discount',\n                      onBlur: handleBlur,\n                      value: values.OrderDiscount,\n                      onChange: handleChange,\n                      helperText: touched.OrderDiscount && errors.OrderDiscount,\n                      error: Boolean(errors.OrderDiscount && touched.OrderDiscount),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Biller',\n                      label: 'Biller',\n                      value: values.Biller,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Biller'),\n                      helperText: touched.Biller && errors.Biller,\n                      error: Boolean(errors.Biller && touched.Biller),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Customer',\n                      label: 'Customer',\n                      value: values.Customer,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Customer'),\n                      helperText: touched.Customer && errors.Customer,\n                      error: Boolean(errors.Customer && touched.Customer),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label> Order Items *</Label>\n                  <Searchtable />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <Label style={{ margin: '0px 0px 10px' }}>Return Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Label style={{ margin: '0px 0px 10px' }}>Staff Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n                {/* <DDbutton /> */}\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddReturn;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Product/AddProduct.jsx",["2945","2946","2947","2948","2949","2950","2951","2952","2953","2954"],"import React, { useState, useEffect } from 'react';\nimport { Box } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport AutocompleteComboWithIdValue from '../material-kit/auto-complete/AutocompleteComboWithIdValue';\nimport Showhideformcheckbox from '../material-kit/checkbox/Showhideformcheckbox';\nimport SearchwithAadtable from '../material-kit/checkbox/SearchwithAadtable';\nimport SimpleCheckbox from '../material-kit/checkbox/SimpleCheckbox';\nimport FormGroupCheckbox from '../material-kit/checkbox/FormGroupCheckbox';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport Multipleimage from '../material-kit/uploadimage/Multipleimage';\nimport Addfeild from '../material-kit/forms/Addfeild';\nimport { Grid, styled } from '@mui/material';\nimport Label from '../material-kit/tables/Label';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport axios from 'axios.js'\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\nimport useBrand from 'app/hooks/useBrand';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  text1: {\n    // bottom: \"10px\",\n    margin: '0px 0px 8px 0px',\n  },\n  btn2: {\n    // marginTop: '14px',\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\n\n// inital login credentials\nconst initialValues = {\n  ProductName: '',\n  SecondaryName: '',\n  BarcodeSymbology: '',\n  ProductCost: '',\n  ProductUnit: '',\n  Category: '',\n  DefaultSaleUnit: '',\n  ProductTax: '',\n  ProductCode: '',\n  ProductType: '',\n  Slug: '',\n  Weight: '',\n  ProductPrice: '',\n  HSNCode: '',\n  SubCategory: '',\n  DefaultPurchaseUnit: '',\n  TaxMethod: '',\n  AlertQuantity: '',\n  Brand: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  ProductName: Yup.string()\n    .min(6, 'ProductName must be 6 character length')\n    .required('Product Name is required!'),\n\n  SecondaryName: Yup.string()\n    .min(6, 'SecondaryName must be 6 character length')\n    .required('Secondary Name is required!'),\n\n  BarcodeSymbology: Yup.string()\n    .min(6, 'BarcodeSymbology must be 6 character length')\n    .required('Barcode is required!'),\n\n  ProductCost: Yup.string()\n    .min(6, 'ProductCost must be 6 character length')\n    .required('Product Cost is required!'),\n\n  ProductUnit: Yup.string()\n    .min(6, 'ProductUnit must be 6 character length')\n    .required('Product Unit is required!'),\n\n  Category: Yup.string()\n    .min(6, 'Category must be 6 character length')\n    .required('Category is required!'),\n\n  DefaultSaleUnit: Yup.string()\n    .min(6, 'DefaultSaleUnit must be 6 character length')\n    .required('Default Sale Unit  is required!'),\n\n  ProductTax: Yup.string()\n    .min(6, 'ProductTax must be 6 character length')\n    .required('Product Tax  is required!'),\n\n  ProductCode: Yup.string()\n    .min(6, 'ProductCode must be 6 character length')\n    .required('Product Code is required!'),\n\n  ProductType: Yup.string()\n    .min(6, 'ProductType must be 6 character length')\n    .required('Product Type is required!'),\n\n  Slug: Yup.string()\n    .min(6, 'Slug must be 6 character length')\n    .required('Slug is required!'),\n\n  Weight: Yup.string()\n    .min(6, 'Weight must be 6 character length')\n    .required('Weight is required!'),\n\n  ProductPrice: Yup.string()\n    .min(6, 'ProductPrice must be 6 character length')\n    .required('Product Price is required!'),\n\n  HSNCode: Yup.string()\n    .min(6, 'HSNCode must be 6 character length')\n    .required('HSN Code  is required!'),\n\n  SubCategory: Yup.string()\n    .min(6, 'SubCategory must be 6 character length')\n    .required('Sub Category  is required!'),\n\n  DefaultPurchaseUnit: Yup.string()\n    .min(6, 'DefaultPurchaseUnit must be 6 character length')\n    .required('Default Purchase Unit  is required!'),\n\n  TaxMethod: Yup.string()\n    .min(6, 'TaxMethod must be 6 character length')\n    .required('Tax Method  is required!'),\n\n  AlertQuantity: Yup.string()\n    .min(6, 'AlertQuantity must be 6 character length')\n    .required('Alert Quantity is required!'),\n\n  Brand: Yup.string()\n    .min(6, 'Brand must be 6 character length')\n    .required('Brand is required!'),\n});\nconst AddProduct = () => {\n  const { getBrands, brands } = useBrand();\n\n\n  const classes = useStyles();\n  const handleChange = (event) => {\n    console.log(event);\n  };\n  const handleChange1 = (event) => { };\n  const handleChange2 = (event) => { };\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  useEffect(() => {\n    getBrands()\n    // const response = axios.post('http://localhost:3000/api/admin/listbrand')\n    // console.log(response)\n    // axios.post('http://localhost:3000/api/admin/listbrand')\n    //   .then((response) => {\n    //     const outlook = response\n    //     console.log(outlook.data.data.ListstockbrandsResponce)\n    //     // if((outlook.data.status===400) || (outlook.data.status===401) || (outlook.data.status===403)){\n    //     //     navigate('/login', { replace: true });\n    //     //     localStorage.setItem(\"token\", \"\");\n    //     //     localStorage.setItem(\"userid\", '0');\n    //     //     localStorage.setItem(\"email\", '');\n    //     //     toast.warning(outlook.data.message)\n    //     // }\n    //     // else{\n    //     // setPremiumContent(outlook.data.data.rows);\n    //     // }\n    //   })\n  }, [])\n  console.log(brands)\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Product' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'ProductName',\n                      label: 'Product Name',\n                      onBlur: handleBlur,\n                      value: values.ProductName,\n                      onChange: handleChange,\n                      helperText: touched.ProductName && errors.ProductName,\n                      error: Boolean(errors.ProductName && touched.ProductName),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'SecondaryName',\n                      label: 'Secondary Name',\n                      onBlur: handleBlur,\n                      value: values.SecondaryName,\n                      onChange: handleChange,\n                      helperText: touched.SecondaryName && errors.SecondaryName,\n                      error: Boolean(errors.SecondaryName && touched.SecondaryName),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboWithIdValue\n                    props={{\n                      names: [\n                        { id: 'Code25', value: 'Code25' },\n                        { id: 'Code39', value: 'Code39' },\n                        { id: 'Code128', value: 'Code128' },\n                        { id: 'EAN8', value: 'EAN8' },\n                        { id: 'EAN13', value: 'EAN13' },\n                        { id: 'UPC-A', value: 'UPC-A' },\n                        { id: 'UPC-E', value: 'UPC-E' }\n                      ],\n                      name: 'BarcodeSymbology',\n                      label: 'Barcode Symbology',\n                      value: values.BarcodeSymbology,\n                      onBlur: handleBlur,\n                      onChange: handleChange('BarcodeSymbology'),\n                      helperText: touched.BarcodeSymbology && errors.BarcodeSymbology,\n                      error: Boolean(errors.BarcodeSymbology && touched.BarcodeSymbology),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'ProductCost',\n                      label: 'Product Cost',\n                      onBlur: handleBlur,\n                      value: values.ProductCost,\n                      onChange: handleChange,\n                      helperText: touched.ProductCost && errors.ProductCost,\n                      error: Boolean(errors.ProductCost && touched.ProductCost),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'ProductUnit',\n                      label: 'Product Unit',\n                      value: values.ProductUnit,\n                      onBlur: handleBlur,\n                      onChange: handleChange('ProductUnit'),\n                      helperText: touched.ProductUnit && errors.ProductUnit,\n                      error: Boolean(errors.ProductUnit && touched.ProductUnit),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Category',\n                      label: 'Category',\n                      value: values.Category,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Category'),\n                      helperText: touched.Category && errors.Category,\n                      error: Boolean(errors.Category && touched.Category),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'DefaultSaleUnit',\n                      label: 'Default Sale Unit',\n                      value: values.DefaultSaleUnit,\n                      onBlur: handleBlur,\n                      onChange: handleChange('DefaultSaleUnit'),\n                      helperText: touched.DefaultSaleUnit && errors.DefaultSaleUnit,\n                      error: Boolean(errors.DefaultSaleUnit && touched.DefaultSaleUnit),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'ProductTax',\n                      label: 'Product Tax',\n                      value: values.ProductTax,\n                      onBlur: handleBlur,\n                      onChange: handleChange('ProductTax'),\n                      helperText: touched.ProductTax && errors.ProductTax,\n                      error: Boolean(errors.ProductTax && touched.ProductTax),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    type=\"text\"\n                    name=\"Product Code\"\n                    label=\"Product Code\"\n                    variant=\"outlined\"\n                    onBlur={handleBlur}\n                    value={values.ProductCode}\n                    className={classes.main2}\n                    onChange={handleChange}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment>\n                          <ShuffleIcon />\n                        </InputAdornment>\n                      ),\n                    }}\n                    helperText={touched.ProductCode && errors.ProductCode}\n                    error={Boolean(errors.ProductCode && touched.ProductCode)}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Standard',\n                        'Digital',\n                        'Combo',\n                        'Service'\n                      ],\n                      name: 'ProductType',\n                      label: 'Product Type',\n                      value: values.ProductType,\n                      onBlur: handleBlur,\n                      onChange: handleChange('ProductType'),\n                      helperText: touched.ProductType && errors.ProductType,\n                      error: Boolean(errors.ProductType && touched.ProductType),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Slug',\n                      label: 'Slug',\n                      onBlur: handleBlur,\n                      value: values.Slug,\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Weight',\n                      label: 'Weight',\n                      onBlur: handleBlur,\n                      value: values.Weight,\n                      onChange: handleChange,\n                      helperText: touched.Weight && errors.Weight,\n                      error: Boolean(errors.Weight && touched.Weight),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'ProductPrice',\n                      label: 'Product Price',\n                      onBlur: handleBlur,\n                      value: values.ProductPrice,\n                      onChange: handleChange,\n                      helperText: touched.ProductPrice && errors.ProductPrice,\n                      error: Boolean(errors.ProductPrice && touched.ProductPrice),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'HSNCode',\n                      label: 'HSN Code',\n                      onBlur: handleBlur,\n                      value: values.HSNCode,\n                      onChange: handleChange,\n                      helperText: touched.HSNCode && errors.HSNCode,\n                      error: Boolean(errors.HSNCode && touched.HSNCode),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'SubCategory',\n                      label: 'Sub Category',\n                      value: values.SubCategory,\n                      onBlur: handleBlur,\n                      onChange: handleChange('SubCategory'),\n                      helperText: touched.SubCategory && errors.SubCategory,\n                      error: Boolean(errors.SubCategory && touched.SubCategory),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'DefaultPurchaseUnit',\n                      label: 'Default Purchase Unit',\n                      value: values.DefaultPurchaseUnit,\n                      onBlur: handleBlur,\n                      onChange: handleChange('DefaultPurchaseUnit'),\n                      helperText: touched.DefaultPurchaseUnit && errors.DefaultPurchaseUnit,\n                      error: Boolean(errors.DefaultPurchaseUnit && touched.DefaultPurchaseUnit),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'TaxMethod',\n                      label: 'Tax Method',\n                      value: values.TaxMethod,\n                      onBlur: handleBlur,\n                      onChange: handleChange('TaxMethod'),\n                      helperText: touched.TaxMethod && errors.TaxMethod,\n                      error: Boolean(errors.TaxMethod && touched.TaxMethod),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SimpleCheckbox />\n                </Grid>\n                <Grid item lg={12} xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Brand',\n                      label: 'Brand',\n                      value: values.Brand,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Brand'),\n                      helperText: touched.Brand && errors.Brand,\n                      error: Boolean(errors.Brand && touched.Brand),\n                    }}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <Singleimage />\n                </Grid>\n\n                <Grid item lg={6} xs={12}>\n                  <Multipleimage />\n                </Grid>\n                <Grid item lg={12} xs={12}>\n                  <FormGroupCheckbox />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  {' '}\n                  <SearchwithAadtable />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <Showhideformcheckbox />\n                </Grid>\n\n                <Grid item lg={12} xs={12}>\n                  <Addfeild />\n                </Grid>\n                {/* <Grid item lg={12} xs={12}>\n            <FormGroupCheckbox />\n          </Grid> */}\n                <Grid item lg={6} xs={12}>\n                  <Label className={classes.text1}>Product Details</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <Label className={classes.text1}>Product details for invoice</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item lg={12}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Add Product\n                  </LoadingButton>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddProduct;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Return/ListReturns.jsx",["2955"],"import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleTable from '../material-kit/tables/SimpleTable';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst ListReturns = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'List Returns' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <SimpleTable />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default ListReturns;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/AppEchart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/JwtRegister.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/ForgotPassword.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/sessions/JwtLogin.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/GiftCards.jsx",["2956"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst GiftCards = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \" List Gift Cards\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default GiftCards;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Deliveries.jsx",["2957"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst Deliveries = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Deliveries\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default Deliveries;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/PosSales.jsx",["2958"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst PosSales = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Pos Sales\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default PosSales;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Addsalecsv.jsx",["2959","2960","2961","2962"],"import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Paper from '@mui/material/Paper';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport Pdfdownloadbutton from '../material-kit/buttons/Pdfdownloadbutton';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n// inital login credentials\nconst initialValues = {\n  OrderDiscount: '',\n  Shipping: '',\n  Biller: '',\n  Reference: '',\n  Customer: '',\n  Warehouse: '',\n  SaleStatus: '',\n  Status: '',\n  PaymentTerm: '',\n  PaymentStatus: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  OrderDiscount: Yup.string()\n    .min(6, 'OrderDiscount must be 6 character length')\n    .required('Order Discount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n  Reference: Yup.number()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  SaleStatus: Yup.string()\n    .min(6, 'SaleStatus must be 6 character length')\n    .required('SaleStatus is required!'),\n\n  PaymentTerm: Yup.string()\n    .min(6, 'PaymentTerm must be 6 character length')\n    .required('Payment Term is required!'),\n\n  PaymentStatus: Yup.string()\n    .min(6, 'PaymentStatus must be 6 character length')\n    .required('Payment Statusis required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst Addsalecsv = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add sale csv' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'OrderDiscount',\n                      label: 'Order Discount',\n                      onBlur: handleBlur,\n                      value: values.OrderDiscount,\n                      onChange: handleChange,\n                      helperText: touched.OrderDiscount && errors.OrderDiscount,\n                      error: Boolean(errors.OrderDiscount && touched.OrderDiscount),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      onBlur: handleBlur,\n                      value: values.Warehouse,\n                      onChange: handleChange,\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'SaleStatus ',\n                      label: 'Sale Status ',\n                      onBlur: handleBlur,\n                      value: values.SaleStatus,\n                      onChange: handleChange,\n                      helperText: touched.SaleStatus && errors.SaleStatus,\n                      error: Boolean(errors.SaleStatus && touched.SaleStatus),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Biller',\n                      label: 'Biller',\n                      onBlur: handleBlur,\n                      value: values.Biller,\n                      onChange: handleChange,\n                      helperText: touched.Biller && errors.Biller,\n                      error: Boolean(errors.Biller && touched.Biller),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'PaymentTerm',\n                      label: 'Payment Term',\n                      onBlur: handleBlur,\n                      value: values.PaymentTerm,\n                      onChange: handleChange,\n                      helperText: touched.PaymentTerm && errors.PaymentTerm,\n                      error: Boolean(errors.PaymentTerm && touched.PaymentTerm),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'PaymentStatus',\n                      label: 'Payment Status',\n                      onBlur: handleBlur,\n                      value: values.PaymentStatus,\n                      onChange: handleChange,\n                      helperText: touched.PaymentStatus && errors.PaymentStatus,\n                      error: Boolean(errors.PaymentStatus && touched.PaymentStatus),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Customer',\n                      label: 'Customer',\n                      onBlur: handleBlur,\n                      value: values.Customer,\n                      onChange: handleChange,\n                      helperText: touched.Customer && errors.Customer,\n                      error: Boolean(errors.Customer && touched.Customer),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Fileattachment\n                    props={{\n                      label: 'CSV File',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Label style={{ marginTop: '10px' }}>Sale Note</Label>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Paper\n                    style={{\n                      boxShadow: 'none',\n                      border: '1px solid rgb(229 217 217)',\n                      padding: '14px',\n                    }}\n                  >\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" style={{ fontSize: '12px' }}>\n                          The first line in downloaded csv file should remain as it is. Please do\n                          not change the order of columns. The correct column order is (Name, Code,\n                          Barcode Symbology, Brand, Category Code, Unit Code, Sale Unit Code,\n                          Purchase Unit Code, Cost, Price, Alert Quantity, Tax, Tax Method, Image,\n                          Sub category Code, Product Variants separated by vertical bar | , Product\n                          Custom Field 1, Product Custom Field 2, Product Custom Field 3, Product\n                          Custom Field 4, Product Custom Field 5, Product Custom Field 6, HSN Code,\n                          Secondary Name, Supplier Name, Supplier Part No., Supplier Price ) & you\n                          must follow this. Please make sure the csv file is UTF-8 encoded and not\n                          saved with byte order mark (BOM). The images should be uploaded in\n                          assets/uploads/ folder and thumbnails with same name as csv to\n                          assets/uploads/thumbs/ System will check if the code belong to any product\n                          then will update that product otherwise will add new product.\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Pdfdownloadbutton />\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                  <Label> Order Items *</Label>\n                  <Searchtable />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Label>Sale Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Label>Staff Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Addsalecsv;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/Addsales.jsx",["2963","2964","2965","2966","2967","2968"],"import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport DDbutton from '../material-kit/buttons/DDbutton';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport Appeditor from '../material-kit/ck/Appeditor';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  OrderDiscount: '',\n  Shipping: '',\n  Biller: '',\n  Reference: '',\n  Customer: '',\n  Warehouse: '',\n  SaleStatus: '',\n  Status: '',\n  PaymentTerm: '',\n  PaymentStatus: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  OrderDiscount: Yup.string()\n    .min(6, 'OrderDiscount must be 6 character length')\n    .required('Order Discount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  SaleStatus: Yup.string()\n    .min(6, 'SaleStatus must be 6 character length')\n    .required('SaleStatus is required!'),\n\n  PaymentTerm: Yup.string()\n    .min(6, 'PaymentTerm must be 6 character length')\n    .required('Payment Term is required!'),\n\n  PaymentStatus: Yup.string()\n    .min(6, 'PaymentStatus must be 6 character length')\n    .required('Payment Statusis required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst Addsales = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Sales' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'OrderDiscount',\n                      label: 'Order Discount',\n                      onBlur: handleBlur,\n                      value: values.OrderDiscount,\n                      onChange: handleChange,\n                      helperText: touched.OrderDiscount && errors.OrderDiscount,\n                      error: Boolean(errors.OrderDiscount && touched.OrderDiscount),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'SaleStatus ',\n                      label: 'Sale Status ',\n                      value: values.SaleStatus,\n                      onBlur: handleBlur,\n                      onChange: handleChange('SaleStatus'),\n                      helperText: touched.SaleStatus && errors.SaleStatus,\n                      error: Boolean(errors.SaleStatus && touched.SaleStatus),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Biller',\n                      label: 'Biller',\n                      value: values.Biller,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Biller'),\n                      helperText: touched.Biller && errors.Biller,\n                      error: Boolean(errors.Biller && touched.Biller),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'PaymentTerm',\n                      label: 'Payment Term',\n                      onBlur: handleBlur,\n                      value: values.PaymentTerm,\n                      onChange: handleChange,\n                      helperText: touched.PaymentTerm && errors.PaymentTerm,\n                      error: Boolean(errors.PaymentTerm && touched.PaymentTerm),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'PaymentStatus',\n                      label: 'Payment Status',\n                      value: values.PaymentStatus,\n                      onBlur: handleBlur,\n                      onChange: handleChange('PaymentStatus'),\n                      helperText: touched.PaymentStatus && errors.PaymentStatus,\n                      error: Boolean(errors.PaymentStatus && touched.PaymentStatus),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Customer',\n                      label: 'Customer',\n                      value: values.Customer,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Customer'),\n                      helperText: touched.Customer && errors.Customer,\n                      error: Boolean(errors.Customer && touched.Customer),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              {/* <Label style={{margin:\"10px 0px\"}}>Sale Note</Label> */}\n              <Grid item xs={12}>\n                <Label style={{ margin: '5px 0px 0px 0px' }}> Order Items *</Label>\n                <Searchtable />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Label style={{ margin: '10px 0px' }}>Sale Note</Label>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={note}\n                  onReady={(editor) => {\n                    console.log('Editor is ready to use!', editor);\n                  }}\n                  onChange={(event, editor) => {\n                    const data = editor.getData();\n                    setNote(data);\n                    console.log({ event, editor, data });\n                  }}\n                  onBlur={(event, editor) => {\n                    handleBlur();\n                    console.log('Blur.', editor);\n                  }}\n                  onFocus={(event, editor) => {\n                    console.log('Focus.', editor);\n                  }}\n                />\n                <div className=\"content-invalid-feedback\">\n                  {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                </div>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Label style={{ margin: '10px 0px' }}>Staff Note</Label>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={note}\n                  onReady={(editor) => {\n                    console.log('Editor is ready to use!', editor);\n                  }}\n                  onChange={(event, editor) => {\n                    const data = editor.getData();\n                    setNote(data);\n                    console.log({ event, editor, data });\n                  }}\n                  onBlur={(event, editor) => {\n                    handleBlur();\n                    console.log('Blur.', editor);\n                  }}\n                  onFocus={(event, editor) => {\n                    console.log('Focus.', editor);\n                  }}\n                />\n                <div className=\"content-invalid-feedback\">\n                  {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                </div>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Addsales;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Sales/SalesList.jsx",["2969"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst SalesList = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"List Sales\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default SalesList;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/Addquotation.jsx",["2970","2971","2972","2973"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Button } from '@mui/material';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  OrderDiscount: '',\n  Shipping: '',\n  Biller: '',\n  Reference: '',\n  Customer: '',\n  Supplier: '',\n  Warehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  OrderDiscount: Yup.string()\n    .min(6, 'OrderDiscount must be 6 character length')\n    .required('OrderDiscount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst Addquotation = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Quotation' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'OrderDiscount',\n                      label: 'Order Discount',\n                      onBlur: handleBlur,\n                      value: values.OrderDiscount,\n                      onChange: handleChange,\n                      helperText: touched.OrderDiscount && errors.OrderDiscount,\n                      error: Boolean(errors.OrderDiscount && touched.OrderDiscount),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Biller',\n                      label: 'Biller',\n                      value: values.Biller,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Biller'),\n                      helperText: touched.Biller && errors.Biller,\n                      error: Boolean(errors.Biller && touched.Biller),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Supplier',\n                      label: 'Supplier',\n                      value: values.Supplier,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Supplier'),\n                      helperText: touched.Supplier && errors.Supplier,\n                      error: Boolean(errors.Supplier && touched.Supplier),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Customer',\n                      label: 'Customer',\n                      value: values.Customer,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Customer'),\n                      helperText: touched.Customer && errors.Customer,\n                      error: Boolean(errors.Customer && touched.Customer),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: ' Status ',\n                      label: 'Status ',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label style={{ margin: '0px 0px 0px 0px' }}> Order Items *</Label>\n                  <Searchtable />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label style={{ margin: '0px 0px 5px' }}>Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  {/* <DDbutton /> */}\n\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Submit\n                  </LoadingButton>\n                  <Button variant=\"contained\" className={classes.btn3}>\n                    Reset\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Addquotation;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/themeOptions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/ListPurchases.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Quotations/Listquotation.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/ListExpenses.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddPurchase.jsx",["2974","2975","2976","2977","2978","2979"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Checkbox } from '@mui/material';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SearchtableNew from '../material-kit/checkbox/SearchtableNew';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n// inital login credentials\nconst initialValues = {\n  Discount: '',\n  Shipping: '',\n  Payment: '',\n  Reference: '',\n  OrderTax: '',\n  Supplier: '',\n  Warehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Discount: Yup.string()\n    .min(6, 'Discount must be 6 character length')\n    .required('Discount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Payment: Yup.string()\n    .min(6, 'Payment must be 6 character length')\n    .required('Payment is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  OrderTax: Yup.string()\n    .min(6, 'OrderTax must be 6 character length')\n    .required('OrderTax is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\n\nconst handleChange = (event) => {\n  console.log(event);\n};\nconst AddPurchase = (props) => {\n  const [show, toggleShow] = useState(true);\n  const [hide, togglehide] = useState(false);\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Purchase' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Supplier',\n                      label: 'Supplier',\n                      value: values.Supplier,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Supplier'),\n                      helperText: touched.Supplier && errors.Supplier,\n                      error: Boolean(errors.Supplier && touched.Supplier),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: ' Status ',\n                      label: 'Status ',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label style={{ margin: '0px 0px 0px 0px' }}> Order Items *</Label>\n                  <SearchtableNew />\n\n                  <div style={{ margin: '0px 0px 0px 0px' }}>\n                    <Checkbox onClick={() => toggleShow(!show)} value=\"checkedA\" defaultChecked />\n                    <Label>More Options</Label>\n                    <div>\n                      {show && (\n                        <div>\n                          <Grid container spacing={2}>\n                            <Grid item lg={6} md={6} sm={12} xs={12}>\n                              <AutocompleteComboNew\n                                props={{\n                                  names: [\n                                    'Oliver Hansen',\n                                    'Van Henry',\n                                    'April Tucker',\n                                    'Ralph Hubbard',\n                                    'Omar Alexander',\n                                    'Carlos Abbott',\n                                    'Miriam Wagner',\n                                    'Bradley Wilkerson',\n                                    'Virginia Andrews',\n                                    'Kelly Snyder',\n                                  ],\n                                  name: 'OrderTax',\n                                  label: 'OrderTax',\n                                  value: values.OrderTax,\n                                  onBlur: handleBlur,\n                                  onChange: handleChange('OrderTax'),\n                                  helperText: touched.OrderTax && errors.OrderTax,\n                                  error: Boolean(errors.OrderTax && touched.OrderTax),\n                                }}\n                              />\n                            </Grid>\n                            <Grid item lg={6} md={6} sm={12} xs={12}>\n                              <SimpleFormNew\n                                props={{\n                                  type: 'text',\n                                  name: 'Payment',\n                                  label: 'Payment',\n                                  onBlur: handleBlur,\n                                  value: values.Payment,\n                                  onChange: handleChange,\n                                  helperText: touched.Payment && errors.Payment,\n                                  error: Boolean(errors.Payment && touched.Payment),\n                                }}\n                              />\n                            </Grid>\n                            <Grid item lg={6} md={6} sm={12} xs={12}>\n                              <SimpleFormNew\n                                props={{\n                                  type: 'text',\n                                  name: 'Shipping',\n                                  label: 'Shipping',\n                                  onBlur: handleBlur,\n                                  value: values.Shipping,\n                                  onChange: handleChange,\n                                  helperText: touched.Shipping && errors.Shipping,\n                                  error: Boolean(errors.Shipping && touched.Shipping),\n                                }}\n                              />\n                            </Grid>\n                            <Grid item lg={6} md={6} sm={12} xs={12}>\n                              <SimpleFormNew\n                                props={{\n                                  type: 'text',\n                                  name: 'Discount',\n                                  label: 'Discount',\n                                  onBlur: handleBlur,\n                                  value: values.Discount,\n                                  onChange: handleChange,\n                                  helperText: touched.Discount && errors.Discount,\n                                  error: Boolean(errors.Discount && touched.Discount),\n                                }}\n                              />\n                            </Grid>\n                          </Grid>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <Label>Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Add Purchase\n                  </LoadingButton>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPurchase;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddPurchaseCSV.jsx",["2980","2981","2982","2983"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport Paper from '@mui/material/Paper';\nimport { Checkbox } from '@mui/material';\nimport Pdfdownloadbutton from '../material-kit/buttons/Pdfdownloadbutton';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n// inital login credentials\nconst initialValues = {\n  Discount: '',\n  Shipping: '',\n  Payment: '',\n  Reference: '',\n  OrderTax: '',\n  Supplier: '',\n  Warehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Discount: Yup.string()\n    .min(6, 'Discount must be 6 character length')\n    .required('Discount is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Payment: Yup.string()\n    .min(6, 'Payment must be 6 character length')\n    .required('Payment is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  OrderTax: Yup.string()\n    .min(6, 'OrderTax must be 6 character length')\n    .required('OrderTax is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst AddPurchaseCSV = (props) => {\n  const classes = useStyles();\n  const [show, toggleShow] = useState(true);\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Purchase CSV' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Supplier',\n                      label: 'Supplier',\n                      value: values.Supplier,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Supplier'),\n                      helperText: touched.Supplier && errors.Supplier,\n                      error: Boolean(errors.Supplier && touched.Supplier),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: ' Status ',\n                      label: 'Status ',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'CSV File',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Paper\n                style={{\n                  marginTop: '10px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '14px',\n                }}\n              >\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h6\" style={{ fontSize: '12px' }}>\n                      The first line in downloaded csv file should remain as it is. Please do not\n                      change the order of columns. The correct column order is (Name, Code, Barcode\n                      Symbology, Brand, Category Code, Unit Code, Sale Unit Code, Purchase Unit\n                      Code, Cost, Price, Alert Quantity, Tax, Tax Method, Image, Sub category Code,\n                      Product Variants separated by vertical bar | , Product Custom Field 1, Product\n                      Custom Field 2, Product Custom Field 3, Product Custom Field 4, Product Custom\n                      Field 5, Product Custom Field 6, HSN Code, Secondary Name, Supplier Name,\n                      Supplier Part No., Supplier Price ) & you must follow this. Please make sure\n                      the csv file is UTF-8 encoded and not saved with byte order mark (BOM). The\n                      images should be uploaded in assets/uploads/ folder and thumbnails with same\n                      name as csv to assets/uploads/thumbs/ System will check if the code belong to\n                      any product then will update that product otherwise will add new product.\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Pdfdownloadbutton />\n                  </Grid>\n                </Grid>\n              </Paper>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <div style={{ margin: '0px 0px 0px 0px' }}>\n                    <Checkbox onClick={() => toggleShow(!show)} value=\"checkedA\" defaultChecked />\n                    <Label>More Options</Label>\n                    <div>\n                      {show && (\n                        <div>\n                          <Grid container spacing={3}>\n                            <Grid item xs={12} md={4}>\n                              <AutocompleteComboNew\n                                props={{\n                                  names: [\n                                    'Oliver Hansen',\n                                    'Van Henry',\n                                    'April Tucker',\n                                    'Ralph Hubbard',\n                                    'Omar Alexander',\n                                    'Carlos Abbott',\n                                    'Miriam Wagner',\n                                    'Bradley Wilkerson',\n                                    'Virginia Andrews',\n                                    'Kelly Snyder',\n                                  ],\n                                  name: 'OrderTax',\n                                  label: 'OrderTax',\n                                  value: values.OrderTax,\n                                  onBlur: handleBlur,\n                                  onChange: handleChange('OrderTax'),\n                                  helperText: touched.OrderTax && errors.OrderTax,\n                                  error: Boolean(errors.OrderTax && touched.OrderTax),\n                                }}\n                              />\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                              <SimpleFormNew\n                                props={{\n                                  type: 'text',\n                                  name: 'Shipping',\n                                  label: 'Shipping',\n                                  onBlur: handleBlur,\n                                  value: values.Shipping,\n                                  onChange: handleChange,\n                                  helperText: touched.Shipping && errors.Shipping,\n                                  error: Boolean(errors.Shipping && touched.Shipping),\n                                }}\n                              />\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                              <SimpleFormNew\n                                props={{\n                                  type: 'text',\n                                  name: 'Discount',\n                                  label: 'Discount',\n                                  onBlur: handleBlur,\n                                  value: values.Discount,\n                                  onChange: handleChange,\n                                  helperText: touched.Discount && errors.Discount,\n                                  error: Boolean(errors.Discount && touched.Discount),\n                                }}\n                              />\n                            </Grid>\n                          </Grid>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <Label style={{ margin: '10px 0px' }}>Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                  {/* <Appeditor /> */}\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n                {/* <Sumitbtn /> */}\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPurchaseCSV;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Purchases/AddExpense.jsx",["2984","2985","2986","2987"],"import { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  Reference: '',\n  Category: '',\n  Amount: '',\n  Warehouse: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n  Category: Yup.string()\n    .min(6, 'Category must be 6 character length')\n    .required('Category is required!'),\n  Amount: Yup.string()\n    .min(6, 'Amount must be 6 character length')\n    .required('Amount is required!'),\n  Warehouse: Yup.string()\n    .min(6, 'Warehouse must be 6 character length')\n    .required('Warehouse is required!'),\n});\n\nconst AddExpense = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    // setLoading(true);\n\n    // try {\n    //   register(values.email, values.username, values.password);\n    //   navigate('/');\n    //   setLoading(false);\n    // } catch (e) {\n    //   console.log(e);\n    //   setLoading(false);\n    // }\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Expense' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                {/* <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid> */}\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      id: 'Category',\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Category',\n                      label: 'Category',\n                      value: values.Category,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Category'),\n                      helperText: touched.Category && errors.Category,\n                      error: Boolean(errors.Category && touched.Category),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Amount',\n                      label: 'Amount',\n                      onBlur: handleBlur,\n                      value: values.Amount,\n                      onChange: handleChange,\n                      helperText: touched.Amount && errors.Amount,\n                      error: Boolean(errors.Amount && touched.Amount),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      id: 'Warehouse',\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Warehouse',\n                      label: 'Warehouse',\n                      value: values.Warehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Warehouse'),\n                      helperText: touched.Warehouse && errors.Warehouse,\n                      error: Boolean(errors.Warehouse && touched.Warehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label>Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    className={classes.btn2}\n                  >\n                    Add Expense\n                  </LoadingButton>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddExpense;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleForm.jsx",["2988","2989"],"import { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, styled } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst SimpleForm = (props) => {\n  const classes = useStyles();\n  const [data1, setdata] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n  }, [props]);\n\n  return (\n    <>\n      <TextField\n        fullWidth\n        type={data1.type}\n        name={data1.name}\n        label={data1.label}\n        onChange={data1.onChange}\n        className={classes.main2}\n      />\n    </>\n  );\n};\n\nexport default SimpleForm;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Multipleimage.jsx",["2990"],"import { FolderOpenOutlined } from '@ant-design/icons';\nimport { Button, Space, Upload } from 'antd';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  file: {\n    width: '100%',\n    padding: '14px',\n    border: '1px solid #ffffff',\n  },\n}));\n\nconst Multipleimage = () => {\n  const classes = useStyles();\n  return (\n    <>\n      {/* <Space\n    direction=\"vertical\"\n    style={{\n      width: '100%',\n    }}\n    size=\"large\"\n  > */}\n      <Upload action=\"\" listType=\"picture\" maxCount={3} multiple>\n        <Button icon={<FolderOpenOutlined />} className={classes.file}>\n          {' '}\n          Multiple image\n        </Button>\n      </Upload>\n      {/* </Space>\n       */}\n    </>\n  );\n};\n\nexport default Multipleimage;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/Addfeild.jsx",["2991","2992","2993"],"import React, { useMemo, useState } from 'react';\nimport Link from '@mui/material/Link';\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  ListSubheader,\n  InputAdornment,\n} from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/styles';\nimport AddIcon from '@mui/icons-material/Add';\n// import AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Grid } from '@mui/material';\nconst useStyles = makeStyles((theme) => ({\n  btn10: {\n    background: 'rgb(10 37 64)',\n    color: '#fff',\n    borderRadius: '3',\n    padding: '4px 10px',\n    textDecoration: 'none',\n    fontSize: '19px',\n  },\n  aditing: {\n    border: '1px solid #d7cdcd',\n    padding: '20px',\n  },\n}));\n\nconst displayedOptions = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nconst allOptions = [];\nconst containsText = (text, searchText) =>\n  text.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n\nconst Addfeild = () => {\n  // selectbox with searchbar\n  const [selectedOption, setSelectedOption] = useState(allOptions[0]);\n  const [searchText, setSearchText] = useState('');\n\n  const displayedOptions = useMemo(\n    () => allOptions.filter((option) => containsText(option, searchText)),\n    [searchText]\n  );\n\n  // end selectbox with searchbar\n  const classes = useStyles();\n\n  const [inputFields, setInputFields] = useState([{ firstName: '', lastName: '' }]);\n\n  const handleChangeInput = (index, event) => {\n    const values = [...inputFields];\n    values[index][event.target.name] = event.target.value;\n    setInputFields(values);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { firstName: '', lastName: '' }]);\n  };\n\n  return (\n    <>\n      <div className={classes.aditing}>\n        <Link href=\"#\" onClick={() => handleAddFields()} className={classes.btn10}>\n          +\n        </Link>\n        {inputFields.map((inputField, index) => (\n          <div key={index}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} lg={12} mt={2}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"search-select-label\">Options</InputLabel>\n                  <Select\n                    fullWidth\n                    defaultValue=\"new\"\n                    MenuProps={{ autoFocus: false }}\n                    labelId=\"search-select-label\"\n                    id=\"search-select\"\n                    value={selectedOption}\n                    label=\"Options\"\n                    onChange={(e) => setSelectedOption(e.target.value)}\n                    onClose={() => setSearchText('')}\n                    renderValue={() => selectedOption}\n                  >\n                    <ListSubheader>\n                      <TextField\n                        placeholder=\"Type to search...\"\n                        fullWidth\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <SearchIcon />\n                            </InputAdornment>\n                          ),\n                        }}\n                        onChange={(e) => setSearchText(e.target.value)}\n                        onKeyDown={(e) => {\n                          if (e.key !== 'Escape') {\n                            e.stopPropagation();\n                          }\n                        }}\n                      />\n                    </ListSubheader>\n                    {displayedOptions.map((option, i) => (\n                      <MenuItem key={i} value={option}>\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              <Grid item lg={6} mb={1}>\n                <TextField\n                  fullWidth\n                  name=\"Supplier Part No.\"\n                  label=\"Supplier Part No\"\n                  variant=\"outlined\"\n                  value={inputField.firstName}\n                  onChange={(event) => handleChangeInput(index, event)}\n                />\n              </Grid>\n              <Grid item lg={6}>\n                <TextField\n                  fullWidth\n                  name=\"Supplier Price\"\n                  label=\"Supplier Price\"\n                  variant=\"outlined\"\n                  value={inputField.lastName}\n                  onChange={(event) => handleChangeInput(index, event)}\n                />\n              </Grid>\n            </Grid>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Addfeild;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/Date.jsx",["2994","2995","2996","2997","2998","2999","3000","3001"],"import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Icon,\n  Radio,\n  RadioGroup,\n  styled,\n} from \"@mui/material\";\n\n\n\nconst Date = () => {\n\n  return (\n    <>\n     \n     <TextField\n        id=\"date\"\n        label=\"Date\"\n        type=\"date\"\n        defaultValue=\"2017-05-24\"\n       fullWidth\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n        \n    </>\n  );\n};\n\nexport default Date;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/UpgradeCard.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/TopSellingTable.jsx",["3002","3003","3004","3005","3006","3007"],"import {\n  Avatar,\n  Box,\n  Card,\n  Icon,\n  IconButton,\n  MenuItem,\n  Select,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  useTheme,\n} from '@mui/material';\nimport { Grid } from '@mui/material';\nimport { Paragraph } from 'app/components/Typography';\n\nconst CardHeader = styled(Box)(() => ({\n  display: 'flex',\n  paddingLeft: '24px',\n  paddingRight: '24px',\n  marginBottom: '12px',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n}));\n\nconst Title = styled('span')(() => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  textTransform: 'capitalize',\n}));\n\nconst ProductTable = styled(Table)(() => ({\n  whiteSpace: 'pre',\n  '& small': {\n    width: '100%',\n    height: 15,\n    borderRadius: 500,\n    boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\n  },\n  '& td': { borderBottom: 'none' },\n  '& td:first-of-type': { paddingLeft: '5px !important' },\n}));\n\nconst Small = styled('small')(({ bgcolor }) => ({\n  width: '100%',\n  color: '#fff',\n  padding: '2px 8px',\n  borderRadius: '4px',\n  overflow: 'hidden',\n  background: bgcolor,\n  boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\n}));\n\nconst TopSellingTable = () => {\n  const { palette } = useTheme();\n  const bgError = palette.error.main;\n  const bgPrimary = palette.primary.main;\n  const bgSecondary = palette.secondary.main;\n\n  return (\n    <>\n      {/* <Card elevation={3} sx={{ pt: '20px', mb: 3 }}> */}\n      {/* <CardHeader>\n        <Title>top selling products</Title>\n        <Select size=\"small\" defaultValue=\"this_month\">\n          <MenuItem value=\"this_month\">This Month</MenuItem>\n          <MenuItem value=\"last_month\">Last Month</MenuItem>\n        </Select>\n      </CardHeader> */}\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Box overflow=\"auto\">\n            <ProductTable>\n              <TableHead>\n                <TableRow>\n                  <TableCell colSpan={2} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Date\n                  </TableCell>\n                  <TableCell colSpan={3} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Reference No\n                  </TableCell>\n                  <TableCell colSpan={3} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Customer\n                  </TableCell>\n                  <TableCell colSpan={2} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Total\n                  </TableCell>\n                  <TableCell colSpan={3} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Payment Status\n                  </TableCell>\n                  <TableCell colSpan={2} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    paid\n                  </TableCell>\n                  <TableCell colSpan={3} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Status\n                  </TableCell>\n                  <TableCell colSpan={2} style={{ fontSize: '15px', fontWeight: '600' }}>\n                    Action\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {productList.map((product, index) => (\n                  <TableRow key={index} hover>\n                    <TableCell colSpan={2}>\n                      <Paragraph>{product.date}</Paragraph>\n                    </TableCell>\n                    <TableCell colSpan={3}>\n                      <Paragraph>{product.referencenumber}</Paragraph>\n                    </TableCell>\n                    <TableCell colSpan={3}>\n                      <Paragraph>{product.customer}</Paragraph>\n                    </TableCell>\n                    <TableCell colSpan={2}>\n                      <Paragraph>{product.total}</Paragraph>\n                    </TableCell>\n                    <TableCell colSpan={3}>\n                      <Paragraph>{product.paymentstutas}</Paragraph>\n                    </TableCell>\n                    <TableCell align=\"left\" colSpan={2} sx={{ px: 0, textTransform: 'capitalize' }}>\n                      $\n                      {product.price > 999\n                        ? (product.price / 1000).toFixed(1) + 'k'\n                        : product.price}\n                    </TableCell>\n                    <TableCell colSpan={3}>\n                      {product.stutas ? (\n                        product.stutas < 20 ? (\n                          <Small bgcolor={bgSecondary}>{product.stutas} available</Small>\n                        ) : (\n                          <Small bgcolor={bgPrimary}>in stock</Small>\n                        )\n                      ) : (\n                        <Small bgcolor={bgError}>out of stock</Small>\n                      )}\n                    </TableCell>\n\n                    {/* <TableCell colSpan={2}>\n                  <Paragraph>{product.referencenumber}</Paragraph>\n                </TableCell> */}\n                    <TableCell colSpan={2}>\n                      <IconButton>\n                        <Icon color=\"primary\">edit</Icon>\n                      </IconButton>\n                    </TableCell>\n\n                    {/**/}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </ProductTable>\n          </Box>\n        </Grid>\n      </Grid>\n      {/* </Card> */}\n    </>\n  );\n};\n\nconst productList = [\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n  {\n    // imgUrl: '/assets/images/products/headphone-2.jpg',\n    date: '12/0/12',\n    referencenumber: '001',\n    customer: 'earphone',\n    total: 'Total',\n    paymentstutas: 'paid',\n    price: 100,\n    stutas: 15,\n  },\n];\n\nexport default TopSellingTable;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/uploadimage/Fileattachment.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/SimpleRadioNew.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/forms/SimpleForms.jsx",["3008","3009"],"import { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, styled } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  main2: {\n    marginBottom: '0px',\n  },\n}));\n\nconst SimpleForms = (props) => {\n  const classes = useStyles();\n  const [data3, setdata] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n  }, [props]);\n\n  return (\n    <>\n      <TextField\n        fullWidth\n        type={data3.type}\n        name={data3.name}\n        label={data3.label}\n        className={classes.main2}\n        onChange={data3.onChange}\n        defaultValue={data3.defaultValue}\n        variant={data3.outlined}\n        value={data3.value}\n      />\n      {/* <TextField\n    fullWidth\n      type={data1.type}\n      name={data1.name}\n      label={data1.label}\n      onChange={data1.onChange}\n     className={classes.main2}\n    /> */}\n    </>\n  );\n};\n\nexport default SimpleForms;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/SimpleRadio.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/Pdfdownloadbutton.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/FormGroupCheckbox.jsx",["3010","3011","3012","3013","3014","3015","3016","3017","3018","3019","3020","3021","3022","3023","3024"],"import React, { useState } from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Grid } from '@mui/material';\nimport SimpleFormNew from '../forms/SimpleFormNew';\n// import SimpleFormNewNew from '../material-kit/forms/SimpleFormNewNew';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { makeStyles } from '@material-ui/styles';\nimport { useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    // marginTop: '14px',\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: 'rgb(10 37 64)',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  Product1: '',\n  Product2: '',\n  Product3: '',\n  Product4: '',\n  Product5: '',\n  Product6: '',\n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Product1: Yup.string()\n    .min(6, 'Product1 must be 6 character length')\n    .required('required!'),\n\n  Product2: Yup.string()\n    .min(6, 'Product2 must be 6 character length')\n    .required('required!'),\n\n  Product3: Yup.string()\n    .min(6, 'Product3 must be 6 character length')\n    .required('required!'),\n\n  Product4: Yup.string()\n    .min(6, 'Product4 must be 6 character length')\n    .required('required!'),\n\n  Product5: Yup.string()\n    .min(6, 'Product5 must be 6 character length')\n    .required('required!'),\n\n  Product6: Yup.string()\n    .min(6, 'Product6 must be 6 character length')\n    .required('required!'),\n});\n\nfunction FormGroupCheckbox() {\n  const [checked, setChecked] = React.useState(true);\n  const [show, toggleShow] = useState(false);\n  const classes = useStyles();\n  const handleChange = (event) => {\n    console.log(event);\n  };\n  const handleChange1 = (event) => { };\n  const handleChange2 = (event) => { };\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <>\n      <FormGroup>\n        <FormControlLabel\n          control={<Checkbox defaultChecked />}\n          label=\"Featured (Shop homepage listing)\"\n        />\n        <FormControlLabel control={<Checkbox />} label=\"Hide in POS Module\" />\n        <FormControlLabel control={<Checkbox />} label=\"Hide in Shop Module\" />\n\n        <div style={{ margin: '0px 0px 0px 0px' }}>\n          <FormControlLabel\n            control={<Checkbox />}\n            onClick={() => toggleShow(!show)}\n            label=\"Custom Fields\"\n          />\n          {/* <FormControlLabel\n             \n              value=\"checkedA\"\n              control={<Radio />}\n              label=\"Custom Fields\"\n            /> */}\n\n          <div>\n            {show && (\n              <div>\n                <Formik\n                  onSubmit={handleFormSubmit}\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                >\n                  {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                    <form onSubmit={handleSubmit}>\n                      <Grid container spacing={3}>\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product1',\n                              label: 'Product Custom Field 1',\n                              onBlur: handleBlur,\n                              value: values.Product1,\n                              onChange: handleChange,\n                              helperText: touched.Product1 && errors.Product1,\n                              error: Boolean(errors.Product1 && touched.Product1),\n                            }}\n                          />\n                        </Grid>\n\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product2',\n                              label: 'Product Custom Field 2',\n                              onBlur: handleBlur,\n                              value: values.Product2,\n                              onChange: handleChange,\n                              helperText: touched.Product2 && errors.Product2,\n                              error: Boolean(errors.Product2 && touched.Product2),\n                            }}\n                          />\n                        </Grid>\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product3',\n                              label: 'Product Custom Field 3',\n                              onBlur: handleBlur,\n                              value: values.Product3,\n                              onChange: handleChange,\n                              helperText: touched.Product3 && errors.Product3,\n                              error: Boolean(errors.Product3 && touched.Product3),\n                            }}\n                          />\n                        </Grid>\n\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product4',\n                              label: 'Product Custom Field 4',\n                              onBlur: handleBlur,\n                              value: values.Product4,\n                              onChange: handleChange,\n                              helperText: touched.Product4 && errors.Product4,\n                              error: Boolean(errors.Product4 && touched.Product4),\n                            }}\n                          />\n                        </Grid>\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product5',\n                              label: 'Product Custom Field 5',\n                              onBlur: handleBlur,\n                              value: values.Product5,\n                              onChange: handleChange,\n                              helperText: touched.Product5 && errors.Product5,\n                              error: Boolean(errors.Product5 && touched.Product5),\n                            }}\n                          />\n                        </Grid>\n\n                        <Grid item lg={4} xs={12}>\n                          <SimpleFormNew\n                            props={{\n                              type: 'text',\n                              name: 'Product6',\n                              label: 'Product Custom Field 6',\n                              onBlur: handleBlur,\n                              value: values.Product6,\n                              onChange: handleChange,\n                              helperText: touched.Product6 && errors.Product6,\n                              error: Boolean(errors.Product6 && touched.Product6),\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </form>\n                  )}\n                </Formik>\n              </div>\n            )}\n          </div>\n        </div>\n      </FormGroup>\n    </>\n  );\n}\nexport default FormGroupCheckbox;\n\n\n\n\n\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SimpleCheckbox.jsx",["3025","3026"],"import React from 'react';\nimport { Box, Checkbox } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@mui/material/Grid';\nfunction SimpleCheckbox() {\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <InputAdornment>\n                  <Checkbox\n                    style={{\n                      borderRadius: '0px',\n                      borderLeft: '1px solid #ddc5c5',\n                      padding: '14px',\n                      marginRight: '-13px',\n                    }}\n                  />\n                </InputAdornment>\n              ),\n            }}\n            label=\"Alert Quantity\"\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nexport default SimpleCheckbox;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/LineChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/Doughnut.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/components/MatxTheme/components.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/DDbutton.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/ComparisonChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/Searchtable.jsx",["3027","3028","3029","3030","3031"],"import React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { makeStyles } from '@material-ui/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport { Grid } from '@mui/material';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    // background: \"linear-gradient(130deg,#152dc7,#820eb3)\",\n    background: '#092a4a',\n    border: '1px solid #978f8f',\n    // justifyContent: \"left\",\n    padding: '10px 5px',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  main: {\n    padding: '7px 0px',\n    textAlign: 'center',\n    borderLeft: '1px solid #e1d6d6',\n    borderTop: '1px solid #000',\n  },\n}));\n\nconst options = [\n  {\n    name: '46771898 - Metal Rings',\n    Variant: '1',\n    Type: '',\n    Quantity: '1',\n    SerialNumber: '',\n    value: 1,\n  },\n  { name: 'two', Variant: '2', Type: '', Quantity: '1', SerialNumber: '', value: 2 },\n  { name: 'three', Variant: '3', Type: '', Quantity: '1', SerialNumber: '', value: 3 },\n  { name: 'four', Variant: '4', Type: '', Quantity: '1', SerialNumber: '', value: 4 },\n];\n\nfunction Searchtable() {\n  const classes = useStyles();\n  const [showtable, setshowtable] = useState(false);\n\n  const [values, setValues] = useState([]);\n  const [dynamictable, setdynamictable] = useState([]);\n\n  const onChange = (_, value) => {\n    console.log(value);\n    // setValues(value);\n\n    // console.log(values[index])\n    setdynamictable((previous) => [\n      ...previous,\n      {\n        name: value.name,\n        Variant: value.Variant,\n        Type: value.Type,\n        Quantity: value.Quantity,\n        SerialNumber: value.SerialNumber,\n        value: value.value,\n      },\n    ]);\n    if (dynamictable.length) {\n      setshowtable(true);\n    } else {\n      setshowtable(false);\n    }\n  };\n\n  const adddata = () => {\n    for (let index = 0; index < values.length; index++) {\n      // console.log(values[index])\n      setdynamictable((previous) => [\n        ...previous,\n        {\n          name: values[index].name,\n          warehouse: values[index].warehouse,\n          priceaddtion: values[index].priceaddtion,\n          value: values[index].value,\n        },\n      ]);\n    }\n    if (values.length) {\n      setshowtable(true);\n    } else {\n      setshowtable(false);\n    }\n  };\n  console.log(dynamictable);\n\n  const handleclick = (e) => {\n    console.log(e.target.value);\n    var index = dynamictable.findIndex((x) => (x.name = e.target.value));\n    if (index != -1) {\n      dynamictable.splice(index, 1);\n      setdynamictable([...dynamictable]);\n    } else {\n      console.log('Item not found ');\n    }\n    console.log(dynamictable);\n  };\n\n  const allhandleclick = () => {\n    setdynamictable([]);\n    setshowtable(true);\n  };\n  //  const handleChange = (event) => {\n  //   setAge(event.target.value );\n  // };\n  const [value, setValue] = React.useState('fruit');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  return (\n    <Box>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Autocomplete\n            single\n            freeSolo\n            options={options}\n            getOptionLabel={(option) => option.name}\n            onChange={onChange}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                // onClick={adddata}\n                variant=\"outlined\"\n                label=\"Please add products to order list\"\n                margin=\"normal\"\n                fullWidth\n              />\n            )}\n          />\n          <Paper style={{ marginTop: '10px', boxShadow: 'none' }}>\n            {/* <TableContainer> */}\n            <Table>\n              <TableHead className={classes.header}>\n                <TableRow>\n                  <TableCell style={{ color: '#fff' }}>Product Name (Product Code)</TableCell>\n                  <TableCell style={{ color: '#fff' }}>Variant</TableCell>\n                  <TableCell style={{ color: '#fff' }}>Type</TableCell>\n                  <TableCell style={{ color: '#fff' }}>Quantity</TableCell>\n                  <TableCell style={{ color: '#fff' }}>Serial Number</TableCell>\n                  <TableCell style={{ color: '#fff' }}>\n                    <button onClick={allhandleclick}>x</button>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody style={{ border: '1px solid #d3b5b5' }}>\n                {dynamictable.map((myList, index) => (\n                  <TableRow key={index}>\n                    <TableCell className={classes.main}>{myList.name}</TableCell>\n                    <TableCell className={classes.main}>{myList.Variant}</TableCell>\n                    <TableCell className={classes.main}>\n                      {myList.Type}\n                      <Select style={{ width: '150px' }} value={value} onChange={handleChange}>\n                        <MenuItem value={10}>Addition</MenuItem>\n                        <MenuItem value={20}>Subtraction</MenuItem>\n                      </Select>\n                    </TableCell>\n                    <TableCell className={classes.main}>{myList.Quantity}</TableCell>\n                    <TableCell className={classes.main}>\n                      {myList.SerialNumber}\n                      <TextField id=\"outlined-basic\" variant=\"outlined\" />\n                    </TableCell>\n                    <TableCell className={classes.main}>\n                      <button value={myList.name} onClick={handleclick}>\n                        x\n                      </button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n            {/* </TableContainer> */}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\nexport default Searchtable;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/hooks/useBrand.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/charts/echarts/AreaChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/Showhideformcheckbox.jsx",["3032"],"import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Checkbox, Grid } from '@mui/material';\nimport Label from '../tables/Label';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nfunction Showhideformcheckbox() {\n  const [show, toggleShow] = useState(false);\n  return (\n    <>\n      <div style={{ margin: '0px 0px 0px 0px' }}>\n        <FormControlLabel\n          control={<Checkbox />}\n          onClick={() => toggleShow(!show)}\n          label=\"Promotion\"\n        />\n\n\n        <div>\n          {show && (\n            <div>\n              <Grid container spacing={3}>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <TextField fullWidth type=\"text\" name=\"Promotion Price\" label=\"Promotion Price\" />\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <TextField\n                    id=\"date\"\n                    label=\"Start date\"\n                    type=\"date\"\n                    fullWidth\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"date\"\n                    label=\"End date\"\n                    type=\"date\"\n                    fullWidth\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Showhideformcheckbox;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SearchwithAadtable.jsx",["3033","3034"],"import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/styles';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { Checkbox, Grid } from '@mui/material';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Label from '../tables/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    border: '1px solid #978f8f',\n    backgroundColor: 'rgb(10 37 64)',\n    padding: '10px 5px',\n    fontWeight: 'bold',\n  },\n  main: {\n    borderTop: '1px solid #000',\n    textAlign: 'center',\n    borderLeft: '1px solid #d3b5b5',\n  },\n}));\nconst options = [\n  { name: 'one', warehouse: '1', priceaddtion: '1000', value: 1 },\n  { name: 'two', warehouse: '2', priceaddtion: '1000', value: 2 },\n  { name: 'three', warehouse: '3', priceaddtion: '1000', value: 3 },\n  { name: 'four', warehouse: '4', priceaddtion: '1000', value: 4 },\n];\n\nexport default function SearchwithAadtable() {\n  const classes = useStyles();\n  const [show, toggleShow] = useState(false);\n  const [showtable, setshowtable] = useState(false);\n\n  const [values, setValues] = useState([]);\n  const [dynamictable, setdynamictable] = useState([]);\n\n  const onChange = (_, value) => {\n    console.log(value);\n    setValues(value);\n  };\n\n  const adddata = () => {\n    for (let index = 0; index < values.length; index++) {\n      // console.log(values[index])\n      setdynamictable((previous) => [\n        ...previous,\n        {\n          name: values[index].name,\n          warehouse: values[index].warehouse,\n          priceaddtion: values[index].priceaddtion,\n          value: values[index].value,\n        },\n      ]);\n    }\n    if (values.length) {\n      setshowtable(true);\n    } else {\n      setshowtable(false);\n    }\n  };\n  console.log(dynamictable);\n\n  const handleclick = (e) => {\n    console.log(e.target.value);\n    var index = dynamictable.findIndex((x) => (x.name = e.target.value));\n    if (index != -1) {\n      dynamictable.splice(index, 1);\n      setdynamictable([...dynamictable]);\n    } else {\n      console.log('Item not found ');\n    }\n    console.log(dynamictable);\n  };\n  const allhandleclick = () => {\n    setdynamictable([]);\n    setshowtable(false);\n  };\n  return (\n    <>\n      <div className={classes.maincheck}>\n        <FormControlLabel\n          control={<Checkbox />}\n          onClick={() => toggleShow(!show)}\n          label=\"This product has multiple variants \"\n        />\n\n        <div>\n          {show && (\n            <div>\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <Autocomplete\n                    style={{ marginTop: '10px' }}\n                    multiple\n                    freeSolo\n                    disablePortal\n                    id=\"combo-box-demo\"\n                    options={options}\n                    getOptionLabel={(option) => option.name}\n                    onChange={onChange}\n                    renderInput={(params) => {\n                      return (\n                        <TextField\n                          {...params}\n                          InputProps={{\n                            ...params.InputProps,\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton onClick={adddata}>\n                                  <AddIcon />\n                                </IconButton>\n                              </InputAdornment>\n                            ),\n                          }}\n                          label=\"Enter variants\"\n                        />\n                      );\n                    }}\n                  />\n                  <Paper style={{ marginTop: '10px', boxShadow: 'none' }}>\n                    <TableContainer>\n                      <Table>\n                        <TableHead className={classes.header}>\n                          <TableRow\n                            style={\n                              showtable === true\n                                ? {\n                                  display: '',\n                                }\n                                : {\n                                  display: 'none',\n                                }\n                            }\n                          >\n                            <TableCell style={{ color: '#fff', textAlign: 'center' }}>\n                              Name\n                            </TableCell>\n                            <TableCell style={{ color: '#fff', textAlign: 'center' }}>\n                              Warehouse\n                            </TableCell>\n                            <TableCell style={{ color: '#fff', textAlign: 'center' }}>\n                              Price Addition\n                            </TableCell>\n                            <TableCell style={{ color: '#fff', textAlign: 'center' }}>\n                              <button onClick={allhandleclick}>x</button>\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody style={{ border: '1px solid #d3b5b5' }}>\n                          {dynamictable.map((myList, index) => (\n                            <TableRow key={index}>\n                              <TableCell className={classes.main}>{myList.name}</TableCell>\n                              <TableCell className={classes.main}>{myList.warehouse}</TableCell>\n                              <TableCell className={classes.main}>{myList.priceaddtion}</TableCell>\n                              <TableCell className={classes.main}>\n                                <button value={myList.name} onClick={handleclick}>\n                                  x\n                                </button>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteComboWithIdValue.jsx",["3035","3036","3037","3038","3039","3040","3041","3042"],"import React, { useState, useEffect } from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport { makeStyles } from '@material-ui/styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nconst useStyles = makeStyles((theme) => ({}));\n\n// function AutocompleteCombo(props)\n\nconst AutocompleteComboWithIdValue = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = useState([]);\n\n  const [data2, setdata] = useState([]);\n  const [keyvalue, setkeyvalue] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n    setkeyvalue(props.props.names);\n  }, [props]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value\n    );\n  };\n\n  return (\n    <>\n      <FormControl fullWidth className={classes.main3}>\n        {/* <InputLabel id=\"demo-simple-select-helper-label\">{data2.name}</InputLabel> */}\n        {/* <Select\n          //  name={data2.name}\n          label={data2.label}\n          value={data2.value}\n          onChange={handleChange}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select> */}\n        {/* <InputLabel id=\"demo-simple-select-helper-label\">{data2.label}</InputLabel> */}\n        <TextField\n          id={data2.id}\n          label={data2.label}\n          value={data2.value}\n          onBlur={data2.onBlur}\n          onChange={data2.onChange}\n          fullWidth\n          select\n          helperText={data2.helperText}\n          error={data2.error}\n        >\n          {keyvalue.map((name) => (\n            <MenuItem key={name.id} value={name.id}>\n              {name.value}\n            </MenuItem>\n          ))}\n        </TextField>\n      </FormControl>\n    </>\n  );\n};\nexport default AutocompleteComboWithIdValue;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/LabelledCheckbox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/buttons/Dbutton.jsx",["3043","3044","3045","3046","3047"],"import { Box, Button, Fab, Icon, IconButton, styled } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n    btn2: {\n      padding:\"8px 25px\",\n      border: \"none\",\n      fontSize: \"15px\",\n      color: \"#fff\",\n      background: \"#303f9f\",\n    },\n  }));\n\nexport default function Dbutton() {\n    const classes = useStyles();\n  return (\n    <>\n     <Grid container spacing={2}>\n        <Grid item xs={12} sx={{ mt:2}}>\n        <Button variant=\"contained\"color=\"inherit\"\n        className={classes.btn2}\n        >\n          Import\n        </Button>\n        </Grid>\n      </Grid>\n      \n    </>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/Countstack.jsx",["3048"],"import { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Radio from '@mui/material/Radio';\nimport { green } from '@mui/material/colors';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { Grid, styled } from '@mui/material';\n\nconst GreenRadio = styled(Radio)(() => ({\n  color: green[400],\n  '&$checked': { color: green[600] },\n}));\n\nconst options = [\n  { name: 'one', value: 1 },\n  { name: 'two', value: 2 },\n  { name: 'three', value: 3 },\n  { name: 'four', value: 4 },\n];\nconst Countstack = () => {\n  const [value2, setValue2] = useState('no');\n  return (\n    <>\n      <Paper variant=\"outlined\" style={{ padding: '10px 10px' }}>\n        <Radio\n          type=\"radio\"\n          name=\"radio1\"\n          value=\"no\"\n          checked={value2 === 'no'}\n          onChange={(e) => setValue2(e.currentTarget.value)}\n        />\n        <label className=\"form-check-label\">Full</label>\n        <Radio\n          type=\"radio\"\n          value=\"si\"\n          name=\"radio1\"\n          checked={value2 === 'si'}\n          onChange={(e) => setValue2(e.currentTarget.value)}\n        />\n        <label className=\"form-check-label\">Partial</label>\n      </Paper>\n      <div style={{ marginTop: '10px' }}>\n        {value2 === 'si' && (\n          <Paper variant=\"outlined\" style={{ padding: '10px 10px' }}>\n            <Grid container spacing={2}>\n              <Grid item sm={6} xs={12}>\n                <Autocomplete\n                  multiple\n                  freeSolo\n                  options={options}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" label=\"Brands\" fullWidth />\n                  )}\n                />\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <Autocomplete\n                  multiple\n                  freeSolo\n                  options={options}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" label=\"Categories\" fullWidth />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Countstack;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/AutocompleteCombo.jsx",["3049","3050","3051","3052"],"import React, { useState, useEffect } from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport { makeStyles } from '@material-ui/styles';\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nconst useStyles = makeStyles((theme) => ({}));\n\n// function AutocompleteCombo(props)\n\nconst AutocompleteCombo = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = useState([]);\n\n  const [data2, setdata] = useState([]);\n  const [names, setnames] = useState([]);\n\n  useEffect(() => {\n    setdata(props.props);\n    setnames(props.props.names);\n  }, [props]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value\n    );\n  };\n\n  return (\n    <>\n      <FormControl fullWidth className={classes.main3}>\n        <InputLabel id=\"demo-simple-select-helper-label\">{data2.name}</InputLabel>\n        <Select\n          //  name={data2.name}\n          label={data2.label}\n          value={data2.value}\n          onChange={handleChange}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n};\nexport default AutocompleteCombo;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/SimpleMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/SelectedMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/MaxHeightMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/checkbox/SearchtableNew.jsx",["3053","3054","3055","3056"],"import React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { makeStyles } from '@material-ui/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport { Grid } from '@mui/material';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    // background: \"linear-gradient(130deg,#152dc7,#820eb3)\",\n    background: '#092a4a',\n    border: '1px solid #978f8f',\n    // justifyContent: \"left\",\n    padding: '10px 5px',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  main: {\n    padding: '7px 0px',\n    textAlign: 'center',\n    borderLeft: '1px solid #e1d6d6',\n    borderTop: '1px solid #000',\n  },\n}));\n\nconst options = [\n  {\n    name: '46771898 - Metal Rings',\n    Variant: '1',\n    Type: '',\n    Quantity: '1',\n    SerialNumber: '',\n    value: 1,\n  },\n  { name: 'two', Variant: '2', Type: '', Quantity: '1', SerialNumber: '', value: 2 },\n  { name: 'three', Variant: '3', Type: '', Quantity: '1', SerialNumber: '', value: 3 },\n  { name: 'four', Variant: '4', Type: '', Quantity: '1', SerialNumber: '', value: 4 },\n];\n\nexport default function SearchtableNew() {\n  const classes = useStyles();\n  const [showtable, setshowtable] = useState(false);\n\n  const [values, setValues] = useState([]);\n  const [dynamictable, setdynamictable] = useState([]);\n\n  const onChange = (_, value) => {\n    console.log(value);\n    // setValues(value);\n\n    // console.log(values[index])\n    setdynamictable((previous) => [\n      ...previous,\n      {\n        name: value.name,\n        Variant: value.Variant,\n        Type: value.Type,\n        Quantity: value.Quantity,\n        SerialNumber: value.SerialNumber,\n        value: value.value,\n      },\n    ]);\n    if (dynamictable.length) {\n      setshowtable(true);\n    } else {\n      setshowtable(false);\n    }\n  };\n\n  const adddata = () => {\n    for (let index = 0; index < values.length; index++) {\n      // console.log(values[index])\n      setdynamictable((previous) => [\n        ...previous,\n        {\n          name: values[index].name,\n          warehouse: values[index].warehouse,\n          priceaddtion: values[index].priceaddtion,\n          value: values[index].value,\n        },\n      ]);\n    }\n    if (values.length) {\n      setshowtable(true);\n    } else {\n      setshowtable(false);\n    }\n  };\n  console.log(dynamictable);\n\n  const handleclick = (e) => {\n    console.log(e.target.value);\n    var index = dynamictable.findIndex((x) => (x.name = e.target.value));\n    if (index != -1) {\n      dynamictable.splice(index, 1);\n      setdynamictable([...dynamictable]);\n    } else {\n      console.log('Item not found ');\n    }\n    console.log(dynamictable);\n  };\n\n  const allhandleclick = () => {\n    setdynamictable([]);\n    setshowtable(true);\n  };\n  //  const handleChange = (event) => {\n  //   setAge(event.target.value );\n  // };\n  const [value, setValue] = React.useState('fruit');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  return (\n    <Box>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Autocomplete\n            single\n            freeSolo\n            options={options}\n            getOptionLabel={(option) => option.name}\n            onChange={onChange}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                // onClick={adddata}\n                variant=\"outlined\"\n                label=\"Please add products to order list\"\n                margin=\"normal\"\n                fullWidth\n              />\n            )}\n          />\n          <Paper style={{ marginTop: '10px', boxShadow: 'none' }}>\n            <TableContainer>\n              <Table>\n                <TableHead className={classes.header}>\n                  <TableRow>\n                    <TableCell style={{ color: '#fff' }}>Product Name (Product Code)</TableCell>\n                    <TableCell style={{ color: '#fff' }}>Variant</TableCell>\n                    <TableCell style={{ color: '#fff' }}>Type</TableCell>\n                    <TableCell style={{ color: '#fff' }}>Quantity</TableCell>\n                    <TableCell style={{ color: '#fff' }}>Serial Number</TableCell>\n                    <TableCell style={{ color: '#fff' }}>\n                      <button onClick={allhandleclick}>x</button>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody style={{ border: '1px solid #d3b5b5' }}>\n                  {dynamictable.map((myList, index) => (\n                    <TableRow key={index}>\n                      <TableCell className={classes.main}>{myList.name}</TableCell>\n                      <TableCell className={classes.main}>{myList.Variant}</TableCell>\n                      <TableCell className={classes.main}>\n                        {myList.Type}\n                        <Select style={{ width: '150px' }} value={value} onChange={handleChange}>\n                          <MenuItem value={10}>Addition</MenuItem>\n                          <MenuItem value={20}>Subtraction</MenuItem>\n                        </Select>\n                      </TableCell>\n                      <TableCell className={classes.main}>{myList.Quantity}</TableCell>\n                      <TableCell className={classes.main}>\n                        {myList.SerialNumber}\n                        <TextField id=\"outlined-basic\" variant=\"outlined\" />\n                      </TableCell>\n                      <TableCell className={classes.main}>\n                        <button value={myList.name} onClick={handleclick}>\n                          x\n                        </button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/StandaloneRadio.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/SijmpleSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/radio/PlacingRadioLabel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/PlacingSwitchLabel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/LabelledSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/FormGroupSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/switch/CustomizedSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/VerticalSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/menu/CustomizedMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/InputSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/ContinuousSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/RangeSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/TransitionSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/slider/DiscreteSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/SimpleSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/StackedSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/DirectionSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/PositionedSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/LongLengthSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/CustomizedSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/SimpleExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/DetailedExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/ControlledAccordion.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/RowCards.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/expansion-panel/CustomizedExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/StatCards2.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/Doughnut.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/dashboard/shared/Campaigns.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/SimpleDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/SimpleAlerts.jsx",["3057","3058"],"import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState } from 'react';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Image View\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">View Image </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <img\n              src=\"https://i.pinimg.com/736x/8b/16/7a/8b167af653c2399dd93b952a48740620.jpg\"\n              style={{ width: '100%' }}\n            />\n          </DialogContentText>\n        </DialogContent>\n        {/* \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions> */}\n      </Dialog>\n    </Box>\n  );\n}\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/ResponsiveDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/OptimalSizeDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/FullScreenDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/FormDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/DialogTransition.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/dialog/ConfirmationDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/material-kit/auto-complete/BadgeAutocomplete.jsx",["3059"],"import { Autocomplete, Chip, TextField } from '@mui/material';\nimport { Box, useTheme } from '@mui/system';\n\nconst BadgeAutocomplete = () => {\n  const theme = useTheme();\n\n  return (\n    <Box\n      sx={{\n        width: 500,\n        '& > * + *': {\n          marginTop: theme.spacing(3),\n        },\n      }}\n    >\n      <Autocomplete\n        multiple\n        id=\"tags-outlined\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        filterSelectedOptions\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            label=\"filterSelectedOptions\"\n            placeholder=\"Favorites\"\n            fullWidth\n          />\n        )}\n      />\n   \n    </Box>\n  );\n};\n\nexport default BadgeAutocomplete;\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'Léon: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL·E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Amélie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/AddTransferCSV.jsx",["3060","3061","3062","3063"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport Pdfdownloadbutton from '../material-kit/buttons/Pdfdownloadbutton';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  fromwarehouse: '',\n  Shipping: '',\n  Biller: '',\n  Reference: '',\n  Customer: '',\n  Supplier: '',\n  toWarehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  fromwarehouse: Yup.string()\n    .min(6, 'fromwarehouse must be 6 character length')\n    .required('fromwarehouse is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  toWarehouse: Yup.string()\n    .min(6, 'toWarehouse must be 6 character length')\n    .required('toWarehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst AddTransferCSV = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Transfer' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: ' toWarehouse',\n                      label: ' To warehouse',\n                      value: values.toWarehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('toWarehouse'),\n                      helperText: touched.toWarehouse && errors.toWarehouse,\n                      error: Boolean(errors.toWarehouse && touched.toWarehouse),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Status ',\n                      label: ' Status ',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'fromwarehouse',\n                      label: 'from warehouse',\n                      value: values.fromwarehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('fromwarehouse'),\n                      helperText: touched.fromwarehouse && errors.fromwarehouse,\n                      error: Boolean(errors.fromwarehouse && touched.fromwarehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Cvs file',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Paper\n                    style={{\n                      marginTop: '20px',\n                      boxShadow: 'none',\n                      border: '1px solid rgb(229 217 217)',\n                      padding: '14px',\n                    }}\n                  >\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" style={{ fontSize: '12px' }}>\n                          The first line in downloaded csv file should remain as it is. Please do\n                          not change the order of columns. The correct column order is (Name, Code,\n                          Barcode Symbology, Brand, Category Code, Unit Code, Sale Unit Code,\n                          Purchase Unit Code, Cost, Price, Alert Quantity, Tax, Tax Method, Image,\n                          Sub category Code, Product Variants separated by vertical bar | , Product\n                          Custom Field 1, Product Custom Field 2, Product Custom Field 3, Product\n                          Custom Field 4, Product Custom Field 5, Product Custom Field 6, HSN Code,\n                          Secondary Name, Supplier Name, Supplier Part No., Supplier Price ) & you\n                          must follow this. Please make sure the csv file is UTF-8 encoded and not\n                          saved with byte order mark (BOM). The images should be uploaded in\n                          assets/uploads/ folder and thumbnails with same name as csv to\n                          assets/uploads/thumbs/ System will check if the code belong to any product\n                          then will update that product otherwise will add new product.\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Pdfdownloadbutton />\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                  <Label> Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n\n                {/* <DDbutton /> */}\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddTransferCSV;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/AddTransfer.jsx",["3064","3065","3066","3067"],"import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Date from '../material-kit/forms/Date';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport Searchtable from '../material-kit/checkbox/Searchtable';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  btn3: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    marginLeft: '10px',\n    color: '#fff',\n    background: '#7b1fa2',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  fromwarehouse: '',\n  Shipping: '',\n  Biller: '',\n  Reference: '',\n  Customer: '',\n  Supplier: '',\n  toWarehouse: '',\n  Status: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  fromwarehouse: Yup.string()\n    .min(6, 'fromwarehouse must be 6 character length')\n    .required('fromwarehouse is required!'),\n  Shipping: Yup.string()\n    .min(6, 'Shipping must be 6 character length')\n    .required('Shipping is required!'),\n  Biller: Yup.string()\n    .min(6, 'Biller must be 6 character length')\n    .required('Biller is required!'),\n  Reference: Yup.string()\n    .min(6, 'Reference must be 6 character length')\n    .required('Reference is required!'),\n\n  Customer: Yup.string()\n    .min(6, 'Customer must be 6 character length')\n    .required('Customer is required!'),\n\n  Supplier: Yup.string()\n    .min(6, 'Supplier must be 6 character length')\n    .required('Supplier is required!'),\n\n  toWarehouse: Yup.string()\n    .min(6, 'toWarehouse must be 6 character length')\n    .required('toWarehouse is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n});\nconst handleChange = (event) => {\n  console.log(event);\n};\n\nconst AddTransfer = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Transfer' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Date />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: ' toWarehouse',\n                      label: ' To warehouse',\n                      value: values.toWarehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('toWarehouse'),\n                      helperText: touched.toWarehouse && errors.toWarehouse,\n                      error: Boolean(errors.toWarehouse && touched.toWarehouse),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Reference',\n                      label: 'Reference No',\n                      onBlur: handleBlur,\n                      value: values.Reference,\n                      onChange: handleChange,\n                      helperText: touched.Reference && errors.Reference,\n                      error: Boolean(errors.Reference && touched.Reference),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Shipping',\n                      label: 'Shipping',\n                      onBlur: handleBlur,\n                      value: values.Shipping,\n                      onChange: handleChange,\n                      helperText: touched.Shipping && errors.Shipping,\n                      error: Boolean(errors.Shipping && touched.Shipping),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Status ',\n                      label: ' Status ',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'fromwarehouse',\n                      label: 'from warehouse',\n                      value: values.fromwarehouse,\n                      onBlur: handleBlur,\n                      onChange: handleChange('fromwarehouse'),\n                      helperText: touched.fromwarehouse && errors.fromwarehouse,\n                      error: Boolean(errors.fromwarehouse && touched.fromwarehouse),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Fileattachment\n                    props={{\n                      label: 'Attach Document',\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label> Order Items *</Label>\n                  <Searchtable />\n                </Grid>\n                <Grid item xs={12}>\n                  <Label> Note</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Submit\n                </LoadingButton>\n                <Button variant=\"contained\" className={classes.btn3}>\n                  Reset\n                </Button>\n                {/* <DDbutton /> */}\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddTransfer;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Transfers/ListTransfers.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListSuppliers.jsx",["3068"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst ListSuppliers = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"List Suppliers\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default ListSuppliers;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddSupplier.jsx",["3069","3070","3071","3072","3073","3074","3075","3076"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  Country: '',\n  PostalCode: '',\n  Company: '',\n  Email: '',\n  Phone: '',\n  Address: '',\n  City: '',\n  State: '',\n  GST: '',\n  VAT: '',\n  Supplier1: '',\n  Supplier2: '',\n  Supplier3: '',\n  Supplier4: '',\n  Supplier5: '',\n  Supplier6: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n  PostalCode: Yup.string()\n    .min(6, 'PostalCode must be 6 character length')\n    .required('PostalCode is required!'),\n\n  Address: Yup.string()\n    .min(6, 'Address must be 6 character length')\n    .required('Address is required!'),\n\n  GST: Yup.number()\n    .min(6, 'GST must be 6 character length')\n    .required('GST is required!'),\n\n  VAT: Yup.number()\n    .min(6, 'VAT must be 6 character length')\n    .required('VAT is required!'),\n\n  Email: Yup.string()\n    .email()\n    .required('Email is required!'),\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('Phone is required!'),\n  Company: Yup.string()\n    .min(6, 'Company must be 6 character length')\n    .required('Company is required!'),\n\n  Supplier1: Yup.string()\n    .min(6, 'Supplier1 must be 6 character length')\n    .required('Supplier1 is required!'),\n  Supplier2: Yup.string()\n    .min(6, 'Supplier2 must be 6 character length')\n    .required('Supplier2 is required!'),\n\n  Supplier3: Yup.string()\n    .min(6, 'Supplier3 must be 6 character length')\n    .required('Supplier3 is required!'),\n\n  Supplier4: Yup.string()\n    .min(6, 'Supplier4 must be 6 character length')\n    .required('Supplier4 is required!'),\n\n  Supplier5: Yup.string()\n    .min(6, 'Supplier5 must be 6 character length')\n    .required('Supplier5 is required!'),\n\n  Supplier6: Yup.string()\n    .min(6, 'Supplier6 must be 6 character length')\n    .required('Supplier6 is required!'),\n\n  State: Yup.string().required('State is required!'),\n\n  City: Yup.string().required('City is required!'),\n\n  Country: Yup.string().required('Country is required!'),\n});\n\nconst AddSupplier = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Biller' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Company',\n                      label: 'Company',\n                      onBlur: handleBlur,\n                      value: values.Company,\n                      onChange: handleChange,\n                      helperText: touched.Company && errors.Company,\n                      error: Boolean(errors.Company && touched.Company),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Email',\n                      label: 'Email Address ',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'VAT',\n                      label: 'VAT Number',\n                      onBlur: handleBlur,\n                      value: values.VAT,\n                      onChange: handleChange,\n                      helperText: touched.VAT && errors.VAT,\n                      error: Boolean(errors.VAT && touched.VAT),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Address',\n                      label: 'Address',\n                      onBlur: handleBlur,\n                      value: values.Address,\n                      onChange: handleChange,\n                      helperText: touched.Address && errors.Address,\n                      error: Boolean(errors.Address && touched.Address),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'PostalCode',\n                      label: 'Postal Code',\n                      onBlur: handleBlur,\n                      value: values.PostalCode,\n                      onChange: handleChange,\n                      helperText: touched.PostalCode && errors.PostalCode,\n                      error: Boolean(errors.PostalCode && touched.PostalCode),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'GST',\n                      label: 'GST Number',\n                      onBlur: handleBlur,\n                      value: values.GST,\n                      onChange: handleChange,\n                      helperText: touched.GST && errors.GST,\n                      error: Boolean(errors.GST && touched.GST),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'City',\n                      label: 'City',\n                      value: values.City,\n                      onBlur: handleBlur,\n                      onChange: handleChange('City'),\n                      helperText: touched.City && errors.City,\n                      error: Boolean(errors.City && touched.City),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Country',\n                      label: 'Country',\n                      onBlur: handleBlur,\n                      value: values.Country,\n                      onChange: handleChange,\n                      helperText: touched.Country && errors.Country,\n                      error: Boolean(errors.Country && touched.Country),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'State',\n                      label: 'State',\n                      value: values.State,\n                      onBlur: handleBlur,\n                      onChange: handleChange('State'),\n                      helperText: touched.State && errors.State,\n                      error: Boolean(errors.State && touched.State),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier1',\n                      label: 'Supplier Custom Field 1',\n                      onBlur: handleBlur,\n                      value: values.Supplier1,\n                      onChange: handleChange,\n                      helperText: touched.Supplier1 && errors.Supplier1,\n                      error: Boolean(errors.Supplier1 && touched.Supplier1),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier2',\n                      label: 'Supplier Custom Field 2',\n                      onBlur: handleBlur,\n                      value: values.Supplier2,\n                      onChange: handleChange,\n                      helperText: touched.Supplier2 && errors.Supplier2,\n                      error: Boolean(errors.Supplier2 && touched.Supplier2),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier3',\n                      label: 'Supplier Custom Field 3',\n                      onBlur: handleBlur,\n                      value: values.Supplier3,\n                      onChange: handleChange,\n                      helperText: touched.Supplier3 && errors.Supplier3,\n                      error: Boolean(errors.Supplier3 && touched.Supplier3),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier4',\n                      label: 'Supplier Custom Field 4',\n                      onBlur: handleBlur,\n                      value: values.Supplier4,\n                      onChange: handleChange,\n                      helperText: touched.Supplier4 && errors.Supplier4,\n                      error: Boolean(errors.Supplier4 && touched.Supplier4),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier5',\n                      label: 'Supplier Custom Field 5',\n                      onBlur: handleBlur,\n                      value: values.Supplier5,\n                      onChange: handleChange,\n                      helperText: touched.Supplier5 && errors.Supplier5,\n                      error: Boolean(errors.Supplier5 && touched.Supplier5),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Supplier6',\n                      label: 'Supplier Custom Field 6',\n                      onBlur: handleBlur,\n                      value: values.Biller6,\n                      onChange: handleChange,\n                      helperText: touched.Supplier6 && errors.Supplier6,\n                      error: Boolean(errors.Supplier6 && touched.Supplier6),\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Biller\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddSupplier;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListCustomers.jsx",["3077"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst ListCustomers = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"List Customers\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default ListCustomers;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddBiller.jsx",["3078","3079","3080","3081","3082","3083","3084","3085"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  Country: '',\n  PostalCode: '',\n  Company: '',\n  Email: '',\n  Phone: '',\n  Address: '',\n  City: '',\n  State: '',\n  Invoice: '',\n  GST: '',\n  VAT: '',\n  Logo: '',\n  Biller1: '',\n  Biller2: '',\n  Biller3: '',\n  Biller4: '',\n  Biller5: '',\n  Biller6: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n  PostalCode: Yup.string()\n    .min(6, 'PostalCode must be 6 character length')\n    .required('PostalCode is required!'),\n\n  Logo: Yup.string()\n    .min(6, 'Logo must be 6 character length')\n    .required('Logo is required!'),\n\n  Invoice: Yup.string()\n    .min(6, 'Invoice must be 6 character length')\n    .required('Invoice is required!'),\n\n  Address: Yup.string()\n    .min(6, 'Address must be 6 character length')\n    .required('Address is required!'),\n\n  GST: Yup.number()\n    .min(6, 'GST must be 6 character length')\n    .required('GST is required!'),\n\n  VAT: Yup.number()\n    .min(6, 'VAT must be 6 character length')\n    .required('VAT is required!'),\n\n  Email: Yup.string()\n    .email()\n    .required('Email is required!'),\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('Phone is required!'),\n  Company: Yup.string()\n    .min(6, 'Company must be 6 character length')\n    .required('Company is required!'),\n\n  Biller1: Yup.string()\n    .min(6, 'Biller1 must be 6 character length')\n    .required('Biller1 is required!'),\n  Biller2: Yup.string()\n    .min(6, 'Biller2 must be 6 character length')\n    .required('Biller2 is required!'),\n\n  Biller3: Yup.string()\n    .min(6, 'Biller3 must be 6 character length')\n    .required('Biller3 is required!'),\n\n  Biller4: Yup.string()\n    .min(6, 'Biller4 must be 6 character length')\n    .required('Biller4 is required!'),\n\n  Biller5: Yup.string()\n    .min(6, 'Biller5 must be 6 character length')\n    .required('Biller5 is required!'),\n\n  Biller6: Yup.string()\n    .min(6, 'Biller6 must be 6 character length')\n    .required('Biller6 is required!'),\n\n  State: Yup.string().required('State is required!'),\n\n  City: Yup.string().required('City is required!'),\n\n  Country: Yup.string().required('Country is required!'),\n});\n\nconst AddBiller = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Biller' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Email',\n                      label: 'Email Address ',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Company',\n                      label: 'Company',\n                      onBlur: handleBlur,\n                      value: values.Company,\n                      onChange: handleChange,\n                      helperText: touched.Company && errors.Company,\n                      error: Boolean(errors.Company && touched.Company),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'VAT',\n                      label: 'VAT Number',\n                      onBlur: handleBlur,\n                      value: values.VAT,\n                      onChange: handleChange,\n                      helperText: touched.VAT && errors.VAT,\n                      error: Boolean(errors.VAT && touched.VAT),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'GST',\n                      label: 'GST Number',\n                      onBlur: handleBlur,\n                      value: values.GST,\n                      onChange: handleChange,\n                      helperText: touched.GST && errors.GST,\n                      error: Boolean(errors.GST && touched.GST),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Address',\n                      label: 'Address',\n                      onBlur: handleBlur,\n                      value: values.Address,\n                      onChange: handleChange,\n                      helperText: touched.Address && errors.Address,\n                      error: Boolean(errors.Address && touched.Address),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'PostalCode',\n                      label: 'Postal Code',\n                      onBlur: handleBlur,\n                      value: values.PostalCode,\n                      onChange: handleChange,\n                      helperText: touched.PostalCode && errors.PostalCode,\n                      error: Boolean(errors.PostalCode && touched.PostalCode),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'City',\n                      label: 'City',\n                      value: values.City,\n                      onBlur: handleBlur,\n                      onChange: handleChange('City'),\n                      helperText: touched.City && errors.City,\n                      error: Boolean(errors.City && touched.City),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Country',\n                      label: 'Country',\n                      onBlur: handleBlur,\n                      value: values.Country,\n                      onChange: handleChange,\n                      helperText: touched.Country && errors.Country,\n                      error: Boolean(errors.Country && touched.Country),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'State',\n                      label: 'State',\n                      value: values.State,\n                      onBlur: handleBlur,\n                      onChange: handleChange('State'),\n                      helperText: touched.State && errors.State,\n                      error: Boolean(errors.State && touched.State),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller1',\n                      label: 'Biller Custom Field 1',\n                      onBlur: handleBlur,\n                      value: values.Biller1,\n                      onChange: handleChange,\n                      helperText: touched.Biller1 && errors.Biller1,\n                      error: Boolean(errors.Biller1 && touched.Biller1),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller2',\n                      label: 'Biller Custom Field 2',\n                      onBlur: handleBlur,\n                      value: values.Biller2,\n                      onChange: handleChange,\n                      helperText: touched.Biller2 && errors.Biller2,\n                      error: Boolean(errors.Biller2 && touched.Biller2),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller3',\n                      label: 'Biller Custom Field 3',\n                      onBlur: handleBlur,\n                      value: values.Biller3,\n                      onChange: handleChange,\n                      helperText: touched.Biller3 && errors.Biller3,\n                      error: Boolean(errors.Biller3 && touched.Biller3),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller4',\n                      label: 'Biller Custom Field 4',\n                      onBlur: handleBlur,\n                      value: values.Biller4,\n                      onChange: handleChange,\n                      helperText: touched.Biller4 && errors.Biller4,\n                      error: Boolean(errors.Biller4 && touched.Biller4),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller5',\n                      label: 'Biller Custom Field 5',\n                      onBlur: handleBlur,\n                      value: values.Biller5,\n                      onChange: handleChange,\n                      helperText: touched.Biller5 && errors.Biller5,\n                      error: Boolean(errors.Biller5 && touched.Biller5),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Biller6',\n                      label: 'Biller Custom Field 6',\n                      onBlur: handleBlur,\n                      value: values.Biller6,\n                      onChange: handleChange,\n                      helperText: touched.Biller6 && errors.Biller6,\n                      error: Boolean(errors.Biller6 && touched.Biller6),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Logo',\n                      label: 'Logo',\n                      value: values.Logo,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Logo'),\n                      helperText: touched.Logo && errors.Logo,\n                      error: Boolean(errors.Logo && touched.Logo),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      rows: 4,\n                      multiline: true,\n                      name: 'Invoice',\n                      label: 'Invoice Footer',\n                      onBlur: handleBlur,\n                      value: values.Invoice,\n                      onChange: handleChange,\n                      helperText: touched.Invoice && errors.Invoice,\n                      error: Boolean(errors.Invoice && touched.Invoice),\n                    }}\n                  />\n\n                  {/* <TextField\n              fullWidth\n              id=\"outlined-multiline-flexible\"\n              label=\"Invoice Footer\"\n              multiline\n              rows={4}\n              onChange={handleChange}\n              \n            /> */}\n                </Grid>\n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Biller\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddBiller;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddCustomer.jsx",["3086","3087","3088","3089","3090","3091","3092","3093"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  Country: '',\n  PostalCode: '',\n  Company: '',\n  Email: '',\n  Phone: '',\n  Address: '',\n  City: '',\n  State: '',\n  CustomerGroup: '',\n  GST: '',\n  VAT: '',\n  PriceGroup: '',\n  Customer1: '',\n  Customer2: '',\n  Customer3: '',\n  Customer4: '',\n  Customer5: '',\n  Customer6: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n  PostalCode: Yup.string()\n    .min(6, 'PostalCode must be 6 character length')\n    .required('PostalCode is required!'),\n\n  PriceGroup: Yup.string()\n    .min(6, 'PriceGroup must be 6 character length')\n    .required('PriceGroup is required!'),\n\n  CustomerGroup: Yup.string()\n    .min(6, 'CustomerGroup must be 6 character length')\n    .required('Customer Group is required!'),\n\n  Address: Yup.string()\n    .min(6, 'Address must be 6 character length')\n    .required('Address is required!'),\n\n  GST: Yup.number()\n    .min(6, 'GST must be 6 character length')\n    .required('GST is required!'),\n\n  VAT: Yup.number()\n    .min(6, 'VAT must be 6 character length')\n    .required('VAT is required!'),\n\n  Email: Yup.string()\n    .email()\n    .required('Email is required!'),\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('Phone is required!'),\n  Company: Yup.string()\n    .min(6, 'Company must be 6 character length')\n    .required('Company is required!'),\n\n  Customer1: Yup.string()\n    .min(6, 'Customer1 must be 6 character length')\n    .required('Customer1 is required!'),\n  Customer2: Yup.string()\n    .min(6, 'Customer2 must be 6 character length')\n    .required('Customer2 is required!'),\n\n  Customer3: Yup.string()\n    .min(6, 'Customer3 must be 6 character length')\n    .required('Customer3 is required!'),\n\n  Customer4: Yup.string()\n    .min(6, 'Customer4 must be 6 character length')\n    .required('Customer4 is required!'),\n\n  Customer5: Yup.string()\n    .min(6, 'Customer5 must be 6 character length')\n    .required('Customer5 is required!'),\n\n  Customer6: Yup.string()\n    .min(6, 'Customer6 must be 6 character length')\n    .required('Customer6 is required!'),\n\n  State: Yup.string().required('State is required!'),\n\n  City: Yup.string().required('City is required!'),\n\n  Country: Yup.string().required('Country is required!'),\n});\n\nconst AddCustomer = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Biller' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Company',\n                      label: 'Company',\n                      onBlur: handleBlur,\n                      value: values.Company,\n                      onChange: handleChange,\n                      helperText: touched.Company && errors.Company,\n                      error: Boolean(errors.Company && touched.Company),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Email',\n                      label: 'Email Address ',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Address',\n                      label: 'Address',\n                      onBlur: handleBlur,\n                      value: values.Address,\n                      onChange: handleChange,\n                      helperText: touched.Address && errors.Address,\n                      error: Boolean(errors.Address && touched.Address),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'PostalCode',\n                      label: 'Postal Code',\n                      onBlur: handleBlur,\n                      value: values.PostalCode,\n                      onChange: handleChange,\n                      helperText: touched.PostalCode && errors.PostalCode,\n                      error: Boolean(errors.PostalCode && touched.PostalCode),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'VAT',\n                      label: 'VAT Number',\n                      onBlur: handleBlur,\n                      value: values.VAT,\n                      onChange: handleChange,\n                      helperText: touched.VAT && errors.VAT,\n                      error: Boolean(errors.VAT && touched.VAT),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'GST',\n                      label: 'GST Number',\n                      onBlur: handleBlur,\n                      value: values.GST,\n                      onChange: handleChange,\n                      helperText: touched.GST && errors.GST,\n                      error: Boolean(errors.GST && touched.GST),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'PriceGroup',\n                      label: 'Price Group',\n                      value: values.PriceGroup,\n                      onBlur: handleBlur,\n                      onChange: handleChange('PriceGroup'),\n                      helperText: touched.PriceGroup && errors.PriceGroup,\n                      error: Boolean(errors.PriceGroup && touched.PriceGroup),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'City',\n                      label: 'City',\n                      value: values.City,\n                      onBlur: handleBlur,\n                      onChange: handleChange('City'),\n                      helperText: touched.City && errors.City,\n                      error: Boolean(errors.City && touched.City),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Country',\n                      label: 'Country',\n                      onBlur: handleBlur,\n                      value: values.Country,\n                      onChange: handleChange,\n                      helperText: touched.Country && errors.Country,\n                      error: Boolean(errors.Country && touched.Country),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'State',\n                      label: 'State',\n                      value: values.State,\n                      onBlur: handleBlur,\n                      onChange: handleChange('State'),\n                      helperText: touched.State && errors.State,\n                      error: Boolean(errors.State && touched.State),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer1',\n                      label: 'Customer Custom Field 1',\n                      onBlur: handleBlur,\n                      value: values.Customer1,\n                      onChange: handleChange,\n                      helperText: touched.Customer1 && errors.Customer1,\n                      error: Boolean(errors.Customer1 && touched.Customer1),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer2',\n                      label: 'Customer Custom Field 2',\n                      onBlur: handleBlur,\n                      value: values.Customer2,\n                      onChange: handleChange,\n                      helperText: touched.Customer2 && errors.Customer2,\n                      error: Boolean(errors.Customer2 && touched.Customer2),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer3',\n                      label: 'Customer Custom Field 3',\n                      onBlur: handleBlur,\n                      value: values.Customer3,\n                      onChange: handleChange,\n                      helperText: touched.Customer3 && errors.Customer3,\n                      error: Boolean(errors.Customer3 && touched.Customer3),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer4',\n                      label: 'Customer Custom Field 4',\n                      onBlur: handleBlur,\n                      value: values.Customer4,\n                      onChange: handleChange,\n                      helperText: touched.Customer4 && errors.Customer4,\n                      error: Boolean(errors.Customer4 && touched.Customer4),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer5',\n                      label: 'Customer Custom Field 5',\n                      onBlur: handleBlur,\n                      value: values.Customer5,\n                      onChange: handleChange,\n                      helperText: touched.Customer5 && errors.Customer5,\n                      error: Boolean(errors.Customer5 && touched.Customer5),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Customer6',\n                      label: 'Customer Custom Field 6',\n                      onBlur: handleBlur,\n                      value: values.Biller6,\n                      onChange: handleChange,\n                      helperText: touched.Customer6 && errors.Customer6,\n                      error: Boolean(errors.Customer6 && touched.Customer6),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'CustomerGroup',\n                      label: 'Customer Group',\n                      value: values.CustomerGroup,\n                      onBlur: handleBlur,\n                      onChange: handleChange('CustomerGroup'),\n                      helperText: touched.CustomerGroup && errors.CustomerGroup,\n                      error: Boolean(errors.CustomerGroup && touched.CustomerGroup),\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Biller\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddCustomer;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListUsers.jsx",["3094"],"import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleTable from '../material-kit/tables/SimpleTable';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst ListUsers = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'List Users' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <SimpleTable />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default ListUsers;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/AddUser.jsx",["3095","3096","3097","3098","3099","3100"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Checkbox } from '@mui/material';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  FirstName: '',\n  Username: '',\n  LastName: '',\n  Company: '',\n  Status: '',\n  Group: '',\n  Gender: '',\n  Phone: '',\n  Email: '',\n  Password: '',\n  ConfirmPassword: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  FirstName: Yup.string()\n    .min(6, 'FirstName must be 6 character length')\n    .required('First Name is required!'),\n  Username: Yup.string()\n    .min(6, 'Username must be 6 character length')\n    .required('User name is required!'),\n  Email: Yup.string()\n    .email()\n    .required('Email is required!'),\n  LastName: Yup.string()\n    .min(6, 'LastName must be 6 character length')\n    .required('Last Name is required!'),\n  Company: Yup.string()\n    .min(6, 'Company must be 6 character length')\n    .required('Company is required!'),\n\n  Status: Yup.string()\n    .min(6, 'Status must be 6 character length')\n    .required('Status is required!'),\n\n  Group: Yup.string()\n    .min(6, 'Group must be 6 character length')\n    .required('Group is required!'),\n\n  Gender: Yup.string()\n    .min(6, 'Gender must be 6 character length')\n    .required('Gender is required!'),\n\n  Password: Yup.string()\n    .required('No password provided.')\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(/(?=.*[0-9])/, 'Password must contain a number.'),\n\n  ConfirmPassword: Yup.string()\n    .required('Confirm Password not  provided.')\n    .oneOf([Yup.ref('Password')], 'Passwords must match'),\n\n  Phone: Yup.number()\n    .min(6, 'Phone must be 6 character length')\n    .required('number is required!'),\n});\n\nconst AddUser = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add User' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'FirstName',\n                      label: 'First Name',\n                      onBlur: handleBlur,\n                      value: values.FirstName,\n                      onChange: handleChange,\n                      helperText: touched.FirstName && errors.FirstName,\n                      error: Boolean(errors.FirstName && touched.FirstName),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'LastName',\n                      label: 'Last Name',\n                      onBlur: handleBlur,\n                      value: values.LastName,\n                      onChange: handleChange,\n                      helperText: touched.LastName && errors.LastName,\n                      error: Boolean(errors.LastName && touched.LastName),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'number',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Username',\n                      label: 'Username',\n                      onBlur: handleBlur,\n                      value: values.Username,\n                      onChange: handleChange,\n                      helperText: touched.Username && errors.Username,\n                      error: Boolean(errors.Username && touched.Username),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Company',\n                      label: 'Company',\n                      onBlur: handleBlur,\n                      value: values.Company,\n                      onChange: handleChange,\n                      helperText: touched.Company && errors.Company,\n                      error: Boolean(errors.Company && touched.Company),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Email',\n                      label: 'Email',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Gender',\n                      label: 'Gender',\n                      value: values.Gender,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Gender'),\n                      helperText: touched.Gender && errors.Gender,\n                      error: Boolean(errors.Gender && touched.Gender),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Group',\n                      label: 'Group',\n                      value: values.Group,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Group'),\n                      helperText: touched.Group && errors.Group,\n                      error: Boolean(errors.Group && touched.Group),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'Password',\n                      name: 'Password',\n                      label: 'Password',\n                      onBlur: handleBlur,\n                      value: values.Password,\n                      onChange: handleChange,\n                      helperText: touched.Password && errors.Password,\n                      error: Boolean(errors.Password && touched.Password),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'Password',\n                      name: 'ConfirmPassword',\n                      label: 'Confirm Password',\n                      onBlur: handleBlur,\n                      value: values.ConfirmPassword,\n                      onChange: handleChange,\n                      helperText: touched.ConfirmPassword && errors.ConfirmPassword,\n                      error: Boolean(errors.ConfirmPassword && touched.ConfirmPassword),\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Status',\n                      label: 'Status',\n                      value: values.Status,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Status'),\n                      helperText: touched.Status && errors.Status,\n                      error: Boolean(errors.Status && touched.Status),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Checkbox value=\"checkedA\" defaultChecked />\n                  <Label> Notify User by Email</Label>\n                </Grid>\n              </Grid>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                <LoadingButton\n                  variant=\"contained\"\n                  type=\"submit\"\n                  loading={loading}\n                  className={classes.btn2}\n                >\n                  Add user\n                </LoadingButton>\n              </Typography>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddUser;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/People/ListBillers.jsx",["3101"],"import { Stack } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport SimpleTable from \"../material-kit/tables/SimpleTable\";\n\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst ListBillers = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"List Billers\" }]} />\n      </Box>\n      <SimpleCard>\n    <SimpleTable/>\n      </SimpleCard>\n   </Container>\n  );\n};\n\nexport default ListBillers;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Notifications.jsx",["3102"],"import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport SimpleTable from '../material-kit/tables/SimpleTable';\nimport Typography from '@mui/material/Typography';\nimport { NavLink } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  boxt1: {\n    border: '1px solid #000',\n  },\n  text3: {\n    fontSize: '13px',\n    textAlign: 'center',\n  },\n}));\n\nconst Notifications = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Notifications' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Grid container spacing={3}>\n          <Grid item xs={10}>\n            <Typography className={classes.text3}>\n              Please use the table below to navigate or filter the results. You can download the\n              table as excel and pdf.\n            </Typography>\n          </Grid>\n          <Grid item xs={2}>\n            <NavLink to=\"/Notifications/Addnotification\">\n              <AddIcon />\n            </NavLink>\n          </Grid>\n        </Grid>\n        <SimpleTable />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Notifications;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Notifications/Addnotification.jsx",["3103","3104","3105"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport { Button } from '@material-ui/core';\nimport Typography from '@mui/material/Typography';\nimport Appeditor from '../material-kit/ck/Appeditor';\nimport SimpleForm from '../material-kit/forms/SimpleForm';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Label from '../material-kit/tables/Label';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormLabel from '@mui/material/FormLabel';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\nconst RadioRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  '& .formControl': {\n    marginRight: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n  },\n  '& .group': { margin: theme.spacing(1, 0), flexDirection: 'row' },\n}));\nconst useStyles = makeStyles((theme) => ({\n  text3: {\n    fontSize: '13px',\n    textAlign: 'left',\n    paddingBottom: '10px',\n  },\n  btn2: {\n    padding: '7px 23px',\n    border: 'none',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\nconst Addnotification = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState('ForBoth');\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  const handleChange1 = (event) => {};\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Notification' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Typography className={classes.text3}>\n              Please fill in the information below. The field labels marked with * are required\n              input fields.\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <SimpleForm\n              props={{\n                type: 'text',\n                name: 'From',\n                label: 'From',\n                onChange: { handleChange1 },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <SimpleForm\n              props={{\n                type: 'text',\n                name: 'till',\n                label: 'Till',\n                onChange: { handleChange1 },\n              }}\n            />\n          </Grid>\n          <Label sx={{ mt: 2 }}>comment</Label>\n          <Grid item xs={12}>\n            <Appeditor />\n          </Grid>\n          <Grid item xs={12}>\n            <RadioGroup\n              row\n              aria-labelledby=\"demo-row-radio-buttons-group-label\"\n              name=\"row-radio-buttons-group\"\n              value={value}\n              className=\"group\"\n              aria-label=\"Gender\"\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value=\"female\"\n                name=\"gender1\"\n                control={<Radio />}\n                label=\"For Customers only\"\n              />\n              <FormControlLabel\n                value=\"male\"\n                name=\"gender1\"\n                control={<Radio />}\n                label=\"For Staff only\"\n              />\n              <FormControlLabel\n                value=\"ForBoth\"\n                name=\"gender1\"\n                control={<Radio />}\n                label=\"For Both\"\n              />\n            </RadioGroup>\n          </Grid>\n          <Grid item xs={12}>\n            <Button type=\"submit\" className={classes.btn2}>\n              Add Notification\n            </Button>\n          </Grid>\n        </Grid>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default Addnotification;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/GroupPermissions.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EmailTemplates.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Warehouses.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/TaxRates.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Brands.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Variants.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ExpenseCategories.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Units.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/PriceGroups.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Categories.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/CustomerGroups.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Currencies.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ChangeLogo.jsx",["3106"],"import { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport Label from '../material-kit/tables/Label';\nimport { Button } from '@mui/material';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from 'antd';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  textnew2: {\n    paddingTop: '10px',\n    paddingBottom: '10px',\n  },\n}));\nconst ChangeLogo = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Change Logo' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Typography className={classes.textnew2}>Site Logo</Typography>\n\n        <Singleimage />\n\n        <Typography className={classes.textnew2}>Login Logo</Typography>\n\n        <Singleimage />\n\n        <Typography className={classes.textnew2}>Login Logo</Typography>\n        <Singleimage />\n\n        <Button type=\"submit\" variant=\"contained\" className={classes.btn2}>\n          Update Setting\n        </Button>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default ChangeLogo;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPrinters.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/Promos.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPrinter.jsx",["3107","3108","3109","3110","3111","3112","3113","3114"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Title: '',\n  Type: '',\n  port: '',\n  Charactersperline: '',\n  IPAddress: '',\n  Profile: '',\n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Title: Yup.string()\n    .min(6, 'Title must be 6 character length')\n    .required('Title is required!'),\n\n  Type: Yup.string()\n    .min(6, 'Type must be 6 character length')\n    .required('Type is required!'),\n\n  port: Yup.string()\n    .max(4, 'port must be 4 character length')\n    .required('port is required!')\n    .matches(/^[0-9]+$/, \"Must be only digits\"),\n\n  Charactersperline: Yup.string()\n    .min(6, 'Charactersperline must be 6 character length')\n    .required('Characters per line is required!'),\n\n  IPAddress: Yup.string()\n    .min(6, 'IPAddress must be 6 character length')\n    .matches(/(^(\\d{1,3}\\.){3}(\\d{1,3})$)/, {\n      message: 'Invalid IP address',\n      excludeEmptyString: true\n    })\n    .required('IPAddress per line is required!'),\n\n  Profile: Yup.string()\n    .min(6, 'Profile must be 6 character length')\n    .required('Profile per line is required!'),\n});\n\nconst AddPrinter = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Printer' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Title',\n                      label: 'Title',\n                      onBlur: handleBlur,\n                      value: values.Title,\n                      onChange: handleChange,\n                      helperText: touched.Title && errors.Title,\n                      error: Boolean(errors.Title && touched.Title),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Profile',\n                      label: 'Profile',\n                      value: values.Profile,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Profile'),\n                      helperText: touched.Profile && errors.Profile,\n                      error: Boolean(errors.Profile && touched.Profile),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Charactersperline',\n                      label: 'Characters per line',\n                      onBlur: handleBlur,\n                      value: values.Charactersperline,\n                      onChange: handleChange,\n                      helperText: touched.Charactersperline && errors.Charactersperline,\n                      error: Boolean(errors.Charactersperline && touched.Charactersperline),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'IPAddress',\n                      label: 'IP Address',\n                      onBlur: handleBlur,\n                      value: values.IPAddress,\n                      onChange: handleChange,\n                      helperText: touched.IPAddress && errors.IPAddress,\n                      error: Boolean(errors.IPAddress && touched.IPAddress),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'port',\n                      label: 'Port',\n                      onBlur: handleBlur,\n                      value: values.port,\n                      onChange: handleChange,\n                      helperText: touched.port && errors.port,\n                      error: Boolean(errors.port && touched.port),\n                    }}\n                  /> \n                        {/* <span>Most printers are open on port <b>9100</b></span> */}\n               \n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Printer\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPrinter;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/POSSettings.jsx",["3115","3116","3117","3118","3119","3120","3121","3122","3123"],"import React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\n// import AutocompleteComboNew from '../material-kit/forms/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  textnew1: {\n    fontSize: '15px',\n    fontWeight: '600',\n    paddingBottom: '20px',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  DisplayProducts: '',\n  DefaultBiller: '',\n  OnScreenKeyboard: '',\n  Rounding: '',\n  DisplayCustomer: '',\n  POSPinCode: '',\n  DefaultCustomer: '',\n  ProductButtonColor: '',\n  ItemOrder: '',\n  DefaultCategory: '',\n  DisplayTime: '',\n  Tooltips: '',\n  AfterSalePage: '',\n  Printing: '',\n  Custom1: 'GST Reg',\n  Custom2: 'VAT Reg',\n  CustomValue: '123456789',\n  CustomValue1: '987654321',\n  FocusAddItemInput: 'Ctrl+F3',\n  AddCustomer: 'Ctrl+Shift+A',\n  ToggleBrandsSlider: '',\n  Printitemslist: 'F9',\n  OpenSuspendedSales: 'Ctrl+F2',\n  AddManualItemtoSale: 'Ctrl+Shift+M',\n  ToggleCategoriesSlider: 'Ctrl+F11',\n  CancelSale: 'F4',\n  FinalizeSale: 'F8',\n  CloseRegister: 'Ctrl+F10',\n  CustomerInput: 'Ctrl+Shift+C',\n  ToggleSubcategoriesSlider: 'Ctrl+F12',\n  SuspendSale: 'F7',\n  TodaysSale: 'Ctrl+F1',\n  Authorizenet: '',\n  PaypalPro: '',\n  Stripe: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  DisplayProducts: Yup.string()\n    .min(6, 'DisplayProducts must be 6 character length')\n    .required('Display Products is required!'),\n  DefaultBiller: Yup.string()\n    .min(6, 'DefaultBiller must be 6 character length')\n    .required('Default Biller is required!'),\n  OnScreenKeyboard: Yup.string()\n    .min(6, 'OnScreenKeyboard must be 6 character length')\n    .required('On Screen Keyboard is required!'),\n\n  Rounding: Yup.string()\n    .min(6, 'Rounding must be 6 character length')\n    .required('Rounding is required!'),\n  DisplayCustomer: Yup.string()\n    .min(6, 'DisplayCustomer must be 6 character length')\n    .required('Display Customer is required!'),\n\n  POSPinCode: Yup.number()\n    .min(6, 'POSPinCode must be 6 character length')\n    .required('POS Pin Code is required!'),\n\n  DefaultCustomer: Yup.string()\n    .min(6, 'DefaultCustomer must be 6 character length')\n    .required('Default Customer is required!'),\n\n  ProductButtonColor: Yup.string()\n    .min(6, 'ProductButtonColor must be 6 character length')\n    .required('Product Button Color is required!'),\n\n  ItemOrder: Yup.string()\n    .min(6, 'ItemOrder must be 6 character length')\n    .required('Item Order is required!'),\n\n  DefaultCategory: Yup.string()\n    .min(6, 'DefaultCategory must be 6 character length')\n    .required('Default Category is required!'),\n\n  DisplayTime: Yup.string()\n    .min(6, 'DisplayTime must be 6 character length')\n    .required('Display Time is required!'),\n  Tooltips: Yup.string()\n    .min(6, 'Tooltips must be 6 character length')\n    .required('Tool tips is required!'),\n\n  AfterSalePage: Yup.string()\n    .min(6, 'AfterSalePage must be 6 character length')\n    .required('After SalePage is required!'),\n\n  Printing: Yup.string()\n    .min(6, 'Printing must be 6 character length')\n    .required('Printing is required!'),\n\n  Custom1: Yup.string()\n    .min(6, 'Custom1 must be 6 character length')\n    .required('Custom1 is required!'),\n\n  Custom2: Yup.string()\n    .min(6, 'Custom2 must be 6 character length')\n    .required('Custom2 is required!'),\n\n  CustomValue: Yup.string()\n    .min(6, 'CustomValue must be 6 character length')\n    .required('CustomValue is required!'),\n\n  CustomValue1: Yup.string()\n    .min(6, 'CustomValue1 must be 6 character length')\n    .required('CustomValue1 is required!'),\n\n  FocusAddItemInput: Yup.string()\n    .min(6, 'FocusAddItemInput must be 6 character length')\n    .required('FocusAddItemInput is required!'),\n  AddCustomer: Yup.string()\n    .min(6, 'AddCustomer must be 6 character length')\n    .required('AddCustomer is required!'),\n  ToggleBrandsSlider: Yup.string()\n    .min(6, 'ToggleBrandsSlider must be 6 character length')\n    .required('Toggle Brands Slider is required!'),\n\n  Printitemslist: Yup.string()\n    .min(6, 'Printitemslist must be 6 character length')\n    .required('Print items list is required!'),\n\n  OpenSuspendedSales: Yup.string()\n    .min(6, 'OpenSuspendedSales must be 6 character length')\n    .required('Open Suspended Sales is required!'),\n  AddManualItemtoSale: Yup.string()\n    .min(6, 'AddManualItemtoSale must be 6 character length')\n    .required('Add Manual Item to Sale is required!'),\n\n  ToggleCategoriesSlider: Yup.string()\n    .min(6, 'ToggleCategoriesSlider must be 6 character length')\n    .required('Toggle Categories Slider is required!'),\n\n  CancelSale: Yup.string()\n    .min(6, 'CancelSale must be 6 character length')\n    .required('Cancel Sale is required!'),\n  FinalizeSale: Yup.string()\n    .min(6, 'FinalizeSale must be 6 character length')\n    .required('FinalizeSale is required!'),\n  CloseRegister: Yup.string()\n    .min(6, 'CloseRegister must be 6 character length')\n    .required('Close Register is required!'),\n\n  CustomerInput: Yup.string()\n    .min(6, 'CustomerInput must be 6 character length')\n    .required('Customer Input is required!'),\n\n  ToggleSubcategoriesSlider: Yup.string()\n    .min(6, 'ToggleSubcategoriesSlider must be 6 character length')\n    .required('Toggle Subcategories Slider is required!'),\n\n  SuspendSale: Yup.string()\n    .min(6, 'SuspendSale must be 6 character length')\n    .required('SuspendSale is required!'),\n\n  TodaysSale: Yup.string()\n    .min(6, 'TodaysSale must be 6 character length')\n    .required('Todays Sale is required!'),\n\n  Authorizenet: Yup.string()\n    .min(6, 'Authorizenet must be 6 character length')\n    .required('Authorizenet is required!'),\n\n  PaypalPro: Yup.string()\n    .min(6, 'PaypalPro must be 6 character length')\n    .required('PaypalPro is required!'),\n\n  Stripe: Yup.string()\n    .min(6, 'Stripe must be 6 character length')\n    .required('Stripe is required!'),\n});\n\nconst POSSettings = (props) => {\n  const classes = useStyles();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'POS Settings' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Paper\n                style={{\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  POS Configuration\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DisplayProducts',\n                        label: 'Display Products',\n                        value: values.DisplayProducts,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DisplayProducts'),\n                        helperText: touched.DisplayProducts && errors.DisplayProducts,\n                        error: Boolean(errors.DisplayProducts && touched.DisplayProducts),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultBiller',\n                        label: 'Default Biller',\n                        value: values.DefaultBiller,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultBiller'),\n                        helperText: touched.DefaultBiller && errors.DefaultBiller,\n                        error: Boolean(errors.DefaultBiller && touched.DefaultBiller),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'OnScreenKeyboard',\n                        label: 'On-Screen Keyboard',\n                        value: values.OnScreenKeyboard,\n                        onBlur: handleBlur,\n                        onChange: handleChange('OnScreenKeyboard'),\n                        helperText: touched.OnScreenKeyboard && errors.OnScreenKeyboard,\n                        error: Boolean(errors.OnScreenKeyboard && touched.OnScreenKeyboard),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Rounding',\n                        label: 'Rounding',\n                        value: values.Rounding,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Rounding'),\n                        helperText: touched.Rounding && errors.Rounding,\n                        error: Boolean(errors.Rounding && touched.Rounding),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DisplayCustomer',\n                        label: 'Display Customer Details ',\n                        value: values.DisplayCustomer,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DisplayCustomer'),\n                        helperText: touched.DisplayCustomer && errors.DisplayCustomer,\n                        error: Boolean(errors.DisplayCustomer && touched.DisplayCustomer),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'number',\n                        name: 'POSPinCode',\n                        label: 'POS Pin Code',\n                        value: values.POSPinCode,\n                        onBlur: handleBlur,\n                        onChange: handleChange('POSPinCode'),\n                        helperText: touched.POSPinCode && errors.POSPinCode,\n                        error: Boolean(errors.POSPinCode && touched.POSPinCode),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultCustomer',\n                        label: 'Default Customer',\n                        value: values.DefaultCustomer,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultCustomer'),\n                        helperText: touched.DefaultCustomer && errors.DefaultCustomer,\n                        error: Boolean(errors.DefaultCustomer && touched.DefaultCustomer),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductButtonColor ',\n                        label: 'Product Button Color',\n                        value: values.ProductButtonColor,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductButtonColor'),\n                        helperText: touched.ProductButtonColor && errors.ProductButtonColor,\n                        error: Boolean(errors.ProductButtonColor && touched.ProductButtonColor),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ItemOrder ',\n                        label: 'Item Order',\n                        value: values.ItemOrder,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ItemOrder'),\n                        helperText: touched.ItemOrder && errors.ItemOrder,\n                        error: Boolean(errors.ItemOrder && touched.ItemOrder),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultCategory',\n                        label: 'Default Category',\n                        value: values.DefaultCategory,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultCategory'),\n                        helperText: touched.DefaultCategory && errors.DefaultCategory,\n                        error: Boolean(errors.DefaultCategory && touched.DefaultCategory),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DisplayTime',\n                        label: 'Display Time',\n                        value: values.DisplayTime,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DisplayTime'),\n                        helperText: touched.DisplayTime && errors.DisplayTime,\n                        error: Boolean(errors.DisplayTime && touched.DisplayTime),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Tooltips',\n                        label: 'Tool tips',\n                        value: values.Tooltips,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Tooltips'),\n                        helperText: touched.Tooltips && errors.Tooltips,\n                        error: Boolean(errors.Tooltips && touched.Tooltips),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'AfterSalePage',\n                        label: 'After Sale Page',\n                        value: values.AfterSalePage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('AfterSalePage'),\n                        helperText: touched.AfterSalePage && errors.AfterSalePage,\n                        error: Boolean(errors.AfterSalePage && touched.AfterSalePage),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  POS Printing\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Printing',\n                        label: 'Printing',\n                        value: values.Printing,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Printing'),\n                        helperText: touched.Printing && errors.Printing,\n                        error: Boolean(errors.Printing && touched.Printing),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Custom fields for receipt\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: ' Custom1',\n                        label: 'Custom Field 1 Title',\n                        onBlur: handleBlur,\n                        value: values.Custom1,\n                        onChange: handleChange,\n                        helperText: touched.Custom1 && errors.Custom1,\n                        error: Boolean(errors.Custom1 && touched.Custom1),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Custom2',\n                        label: 'Custom Field 2 Title',\n                        onBlur: handleBlur,\n                        value: values.Custom2,\n                        onChange: handleChange,\n                        helperText: touched.Custom2 && errors.Custom2,\n                        error: Boolean(errors.Custom2 && touched.Custom2),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CustomValue',\n                        label: 'Custom Field 1 Value',\n                        onBlur: handleBlur,\n                        value: values.CustomValue,\n                        onChange: handleChange,\n                        helperText: touched.CustomValue && errors.CustomValue,\n                        error: Boolean(errors.CustomValue && touched.CustomValue),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CustomValue1',\n                        label: 'Custom Field 2 Value',\n                        onBlur: handleBlur,\n                        value: values.CustomValue1,\n                        onChange: handleChange,\n                        helperText: touched.CustomValue1 && errors.CustomValue1,\n                        error: Boolean(errors.CustomValue1 && touched.CustomValue1),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Shortcuts\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'FocusAddItemInput',\n                        label: 'Focus Add Item Input',\n                        onBlur: handleBlur,\n                        value: values.FocusAddItemInput,\n                        onChange: handleChange,\n                        helperText: touched.FocusAddItemInput && errors.FocusAddItemInput,\n                        error: Boolean(errors.FocusAddItemInput && touched.FocusAddItemInput),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'AddCustomer',\n                        label: 'Add Customer',\n                        onBlur: handleBlur,\n                        value: values.AddCustomer,\n                        onChange: handleChange,\n                        helperText: touched.AddCustomer && errors.AddCustomer,\n                        error: Boolean(errors.AddCustomer && touched.AddCustomer),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ToggleBrandsSlider',\n                        label: 'Toggle Brands Slider',\n                        onBlur: handleBlur,\n                        value: values.ToggleBrandsSlider,\n                        onChange: handleChange,\n                        helperText: touched.ToggleBrandsSlider && errors.ToggleBrandsSlider,\n                        error: Boolean(errors.ToggleBrandsSlider && touched.ToggleBrandsSlider),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Printitemslist',\n                        label: 'Print items list',\n                        onBlur: handleBlur,\n                        value: values.Printitemslist,\n                        onChange: handleChange,\n                        helperText: touched.Printitemslist && errors.Printitemslist,\n                        error: Boolean(errors.Printitemslist && touched.Printitemslist),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'OpenSuspendedSales',\n                        label: 'Open Suspended Sales',\n                        onBlur: handleBlur,\n                        value: values.OpenSuspendedSales,\n                        onChange: handleChange,\n                        helperText: touched.OpenSuspendedSales && errors.OpenSuspendedSales,\n                        error: Boolean(errors.OpenSuspendedSales && touched.OpenSuspendedSales),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'AddManualItemtoSale',\n                        label: 'Add Manual Item to Sale',\n                        onBlur: handleBlur,\n                        value: values.AddManualItemtoSale,\n                        onChange: handleChange,\n                        helperText: touched.AddManualItemtoSale && errors.AddManualItemtoSale,\n                        error: Boolean(errors.AddManualItemtoSale && touched.AddManualItemtoSale),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ToggleCategoriesSlider',\n                        label: 'Toggle Categories Slider',\n                        onBlur: handleBlur,\n                        value: values.ToggleCategoriesSlider,\n                        onChange: handleChange,\n                        helperText: touched.ToggleCategoriesSlider && errors.ToggleCategoriesSlider,\n                        error: Boolean(\n                          errors.ToggleCategoriesSlider && touched.ToggleCategoriesSlider\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CancelSale',\n                        label: 'Cancel Sale',\n                        onBlur: handleBlur,\n                        value: values.CancelSale,\n                        onChange: handleChange,\n                        helperText: touched.CancelSale && errors.CancelSale,\n                        error: Boolean(errors.CancelSale && touched.CancelSale),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'FinalizeSale',\n                        label: 'Finalize Sale',\n                        onBlur: handleBlur,\n                        value: values.FinalizeSale,\n                        onChange: handleChange,\n                        helperText: touched.FinalizeSale && errors.FinalizeSale,\n                        error: Boolean(errors.FinalizeSale && touched.FinalizeSale),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CloseRegister',\n                        label: 'Close Register',\n                        onBlur: handleBlur,\n                        value: values.CloseRegister,\n                        onChange: handleChange,\n                        helperText: touched.CloseRegister && errors.CloseRegister,\n                        error: Boolean(errors.CloseRegister && touched.CloseRegister),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CustomerInput',\n                        label: 'Customer Input',\n                        onBlur: handleBlur,\n                        value: values.CustomerInput,\n                        onChange: handleChange,\n                        helperText: touched.CustomerInput && errors.CustomerInput,\n                        error: Boolean(errors.CustomerInput && touched.CustomerInput),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ToggleSubcategoriesSlider',\n                        label: 'Toggle Subcategories Slider',\n                        onBlur: handleBlur,\n                        value: values.ToggleSubcategoriesSlider,\n                        onChange: handleChange,\n                        helperText:\n                          touched.ToggleSubcategoriesSlider && errors.ToggleSubcategoriesSlider,\n                        error: Boolean(\n                          errors.ToggleSubcategoriesSlider && touched.ToggleSubcategoriesSlider\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'SuspendSale',\n                        label: 'Suspend Sale',\n                        onBlur: handleBlur,\n                        value: values.SuspendSale,\n                        onChange: handleChange,\n                        helperText: touched.SuspendSale && errors.SuspendSale,\n                        error: Boolean(errors.SuspendSale && touched.SuspendSale),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'TodaysSale',\n                        label: \"Today's Sale\",\n                        onBlur: handleBlur,\n                        value: values.TodaysSale,\n                        onChange: handleChange,\n                        helperText: touched.TodaysSale && errors.TodaysSale,\n                        error: Boolean(errors.TodaysSale && touched.TodaysSale),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Payment Gateways\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Authorizenet ',\n                        label: 'Authorize.net ',\n                        value: values.Authorizenet,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Authorizenet'),\n                        helperText: touched.Authorizenet && errors.Authorizenet,\n                        error: Boolean(errors.Authorizenet && touched.Authorizenet),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'PaypalPro',\n                        label: 'Paypal Pro',\n                        value: values.PaypalPro,\n                        onBlur: handleBlur,\n                        onChange: handleChange('PaypalPro'),\n                        helperText: touched.PaypalPro && errors.PaypalPro,\n                        error: Boolean(errors.PaypalPro && touched.PaypalPro),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Stripe',\n                        label: 'Stripe',\n                        value: values.Stripe,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Stripe'),\n                        helperText: touched.Stripe && errors.Stripe,\n                        error: Boolean(errors.Stripe && touched.Stripe),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Update Setting\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default POSSettings;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/contexts/BrandContext.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/BrandReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/NotificationReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/NavigationReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/reducers/EcommerceReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/SystemSettings.jsx",["3124","3125","3126","3127","3128","3129","3130","3131"],"import React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Label from '../material-kit/tables/Label';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '20px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n  textnew1: {\n    fontSize: '15px',\n    fontWeight: '600',\n    paddingBottom: '20px',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  SiteName: 'Stock Manager Advance with All Modules',\n  Language: 'English',\n  AccountingMethod: '',\n  MaintenanceMode: '',\n  LoginCaptcha: '',\n  DateFormat: '',\n  DefaultWarehouse: '',\n  DefaultEmail: '',\n  DefaultCustomerGroup: '',\n  Default: '',\n  Rowsperpage: '',\n  Timezone: '',\n  DefaultBiller: '',\n  Numberofdays: 'Number of days to disable editing ',\n  DefaultCurrency: '',\n  DefaultPriceGroup: '',\n  RTLSupport: '',\n  Calender: '',\n  PDFLibrary: '',\n  APIsFeature: '',\n  ProductTax: '',\n  Barcodeseparator: '',\n  ProductExpiry: '',\n  Racks: '',\n  BarcodeRenderer: '',\n  Removeexpired: '',\n  ProductVariants: '',\n  Updatecost: '',\n  Displaywarehouse: '',\n  Watermark: '',\n  Thumbnail: '150',\n  Thumbnail1: '150',\n  Image: '180',\n  Image1: '180',\n  OverSelling: '',\n  ProductLevelDiscount: '',\n  Productscount: '',\n  InvoiceView: '',\n  ReferenceFormat: '',\n  ProductSerial: '',\n  CartItemAddition: '',\n  BusinessState: '',\n  OrderTax: '',\n  AutoDetectBarcode: '',\n  DefaultOrderPage: '',\n  SalesReferencePrefix: 'Sales',\n  PurchasePaymentPrefix: 'pop',\n  PurchaseReferencePrefix: '',\n  ExpensePrefix: '',\n  ReturnSalePrefix: 'SR',\n  DeliveryReferencePrefix: 'DO',\n  ReturnPurchasePrefix: 'PR',\n  QuantityAdjustmentPrefix: '',\n  PaymentReferencePrefix: 'IPAY',\n  QuotationReferencePrefix: 'QUOTE',\n  TransferReferencePrefix: 'TR',\n  Decimals: '',\n  DecimalsSeparator: '',\n  CurrencySymbol: 'admin@stock.com',\n  QuantityDecimals: '',\n  ThousandsSeparator: '',\n  SouthAsianCountries: '',\n  DisplayCurrencySymbol: '',\n  EmailProtocol: '',\n  CustomerAwardPoints: '',\n  StaffAwardPoints: '',\n  AwardPoints: '',\n  AwardPoints1: '',\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  SiteName: Yup.string()\n    .min(6, 'SiteName must be 6 character length')\n    .required('Site Name is required!'),\n\n  Language: Yup.string()\n    .min(6, 'Language must be 6 character length')\n    .required('Language is required!'),\n\n  AccountingMethod: Yup.string()\n    .min(6, 'AccountingMethod must be 6 character length')\n    .required('Accounting Method is required!'),\n\n  MaintenanceMode: Yup.string()\n    .min(6, 'MaintenanceMode must be 6 character length')\n    .required('Maintenance Mode is required!'),\n  LoginCaptcha: Yup.string()\n    .min(6, 'LoginCaptcha must be 6 character length')\n    .required('Login Captcha is required!'),\n  DateFormat: Yup.string()\n    .min(6, 'DateFormat must be 6 character length')\n    .required('Date Format is required!'),\n\n  DefaultWarehouse: Yup.string()\n    .min(6, 'DefaultWarehouse must be 6 character length')\n    .required('Default Warehouse is required!'),\n\n  DefaultEmail: Yup.string()\n    .min(6, 'DefaultEmail must be 6 character length')\n    .required('Default Email is required!'),\n  DefaultCustomerGroup: Yup.string()\n    .min(6, 'DefaultCustomerGroup must be 6 character length')\n    .required('Default Customer Group is required!'),\n\n  Default: Yup.string()\n    .min(6, 'Default must be 6 character length')\n    .required('Default is required!'),\n\n  Rowsperpage: Yup.string()\n    .min(6, 'Rowsperpage must be 6 character length')\n    .required('Rows per page is required!'),\n  Timezone: Yup.string()\n    .min(6, 'Timezone must be 6 character length')\n    .required('Time zone is required!'),\n  DefaultBiller: Yup.string()\n    .min(6, 'DefaultBiller must be 6 character length')\n    .required('Default Biller is required!'),\n  Numberofdays: Yup.string()\n    .min(6, 'Numberofdays must be 6 character length')\n    .required('Number of days is required!'),\n  DefaultCurrency: Yup.string()\n    .min(6, 'DefaultCurrency must be 6 character length')\n    .required('Default Currency is required!'),\n  DefaultPriceGroup: Yup.string()\n    .min(6, 'DefaultPriceGroup must be 6 character length')\n    .required('Default Price Group is required!'),\n  RTLSupport: Yup.string()\n    .min(6, 'RTLSupport must be 6 character length')\n    .required('RTL Support is required!'),\n  Calender: Yup.string()\n    .min(6, 'Calender must be 6 character length')\n    .required('Calender is required!'),\n  PDFLibrary: Yup.string()\n    .min(6, 'PDFLibrary must be 6 character length')\n    .required('PDF Library is required!'),\n\n  APIsFeature: Yup.string()\n    .min(6, 'APIsFeature must be 6 character length')\n    .required('APIs Feature is required!'),\n\n  ProductTax: Yup.string()\n    .min(6, 'ProductTax must be 6 character length')\n    .required('Product Tax is required!'),\n  Barcodeseparator: Yup.string()\n    .min(6, 'Barcodeseparator must be 6 character length')\n    .required('Barcode separator is required!'),\n  ProductExpiry: Yup.string()\n    .min(6, 'ProductExpiry must be 6 character length')\n    .required('Product Expiry is required!'),\n\n  Racks: Yup.string()\n    .min(6, 'Racks must be 6 character length')\n    .required('Racks is required!'),\n  BarcodeRenderer: Yup.string()\n    .min(6, 'BarcodeRenderer must be 6 character length')\n    .required('Barcode Renderer is required!'),\n\n  Removeexpired: Yup.string()\n    .min(6, 'Removeexpired must be 6 character length')\n    .required('Remove expired is required!'),\n  ProductVariants: Yup.string()\n    .min(6, 'ProductVariants must be 6 character length')\n    .required('Product Variants is required!'),\n\n  Updatecost: Yup.string()\n    .min(6, 'Updatecost must be 6 character length')\n    .required('Update cost is required!'),\n  Displaywarehouse: Yup.string()\n    .min(6, 'Displaywarehouse must be 6 character length')\n    .required('Display warehouse is required!'),\n  Watermark: Yup.string()\n    .min(6, 'Watermark must be 6 character length')\n    .required('Watermark is required!'),\n\n  Thumbnail: Yup.string()\n    .min(6, 'Thumbnail must be 6 character length')\n    .required('Thumbnail is required!'),\n  Thumbnail1: Yup.string()\n    .min(6, 'Thumbnail1 must be 6 character length')\n    .required('Thumbnail1 is required!'),\n\n  Image: Yup.string()\n    .min(6, 'Image must be 6 character length')\n    .required('Image is required!'),\n\n  Image1: Yup.string()\n    .min(6, 'Image1 must be 6 character length')\n    .required('Image1 is required!'),\n\n  OverSelling: Yup.string()\n    .min(6, 'OverSelling must be 6 character length')\n    .required('Over Selling is required!'),\n\n  InvoiceView: Yup.string()\n    .min(6, 'InvoiceView must be 6 character length')\n    .required('Invoice View is required!'),\n  ReferenceFormat: Yup.string()\n    .min(6, 'ReferenceFormat must be 6 character length')\n    .required('Reference Format is required!'),\n  ProductSerial: Yup.string()\n    .min(6, 'ProductSerial must be 6 character length')\n    .required('Product Serial is required!'),\n  CartItemAddition: Yup.string()\n    .min(6, 'CartItemAddition must be 6 character length')\n    .required('CartItem Addition is required!'),\n  BusinessState: Yup.string()\n    .min(6, 'BusinessState must be 6 character length')\n    .required('Business State is required!'),\n\n  ProductLevelDiscount: Yup.string()\n    .min(6, 'ProductLevelDiscount must be 6 character length')\n    .required('Product Level Discount is required!'),\n\n  OrderTax: Yup.string()\n    .min(6, 'OrderTax must be 6 character length')\n    .required('Order Tax is required!'),\n  AutoDetectBarcode: Yup.string()\n    .min(6, 'AutoDetectBarcode must be 6 character length')\n    .required('AutoDetect Barcode is required!'),\n  DefaultOrderPage: Yup.string()\n    .min(6, 'DefaultOrderPage must be 6 character length')\n    .required('Default Order Page is required!'),\n\n  SalesReferencePrefix: Yup.string()\n    .min(6, 'SalesReferencePrefix must be 6 character length')\n    .required('Sales Reference Prefix is required!'),\n\n  PurchasePaymentPrefix: Yup.string()\n    .min(6, 'PurchasePaymentPrefix must be 6 character length')\n    .required('Purchase Payment Prefix is required!'),\n  PurchaseReferencePrefix: Yup.string()\n    .min(6, 'PurchaseReferencePrefix must be 6 character length')\n    .required('Purchase Reference Prefix is required!'),\n\n  ExpensePrefix: Yup.string()\n    .min(6, 'ExpensePrefix must be 6 character length')\n    .required('Expense Prefix is required!'),\n  ReturnSalePrefix: Yup.string()\n    .min(6, 'ReturnSalePrefix must be 6 character length')\n    .required('Return Sale Prefix is required!'),\n  DeliveryReferencePrefix: Yup.string()\n    .min(6, 'DeliveryReferencePrefix must be 6 character length')\n    .required('Delivery Reference Prefix is required!'),\n  ReturnPurchasePrefix: Yup.string()\n    .min(6, 'ReturnPurchasePrefix must be 6 character length')\n    .required('Return Purchase Prefix is required!'),\n  QuantityAdjustmentPrefix: Yup.string()\n    .min(6, 'QuantityAdjustmentPrefix must be 6 character length')\n    .required('Quantity Adjustment Prefix is required!'),\n  PaymentReferencePrefix: Yup.string()\n    .min(6, 'PaymentReferencePrefix must be 6 character length')\n    .required('Payment Reference Prefix is required!'),\n  QuotationReferencePrefix: Yup.string()\n    .min(6, 'QuotationReferencePrefix must be 6 character length')\n    .required('Quotation Reference Prefix is required!'),\n  TransferReferencePrefix: Yup.string()\n    .min(6, 'TransferReferencePrefix must be 6 character length')\n    .required('Transfer Reference Prefix is required!'),\n  Decimals: Yup.string()\n    .min(6, 'Decimals must be 6 character length')\n    .required('Decimals is required!'),\n  DecimalsSeparator: Yup.string()\n    .min(6, 'DecimalsSeparator must be 6 character length')\n    .required('Decimals Separator is required!'),\n\n  CurrencySymbol: Yup.string()\n    .min(6, 'CurrencySymbol must be 6 character length')\n    .required('Currency Symbol is required!'),\n  QuantityDecimals: Yup.string()\n    .min(6, 'QuantityDecimals must be 6 character length')\n    .required('Quantity Decimals is required!'),\n  ThousandsSeparator: Yup.string()\n    .min(6, 'ThousandsSeparator must be 6 character length')\n    .required('Thousands Separator is required!'),\n  SouthAsianCountries: Yup.string()\n    .min(6, 'SouthAsianCountries must be 6 character length')\n    .required('South Asian Countries is required!'),\n  DisplayCurrencySymbol: Yup.string()\n    .min(6, 'DisplayCurrencySymbol must be 6 character length')\n    .required('Display Currency Symbol is required!'),\n  EmailProtocol: Yup.string()\n    .min(6, 'EmailProtocol must be 6 character length')\n    .required('Email Protocol is required!'),\n\n  CustomerAwardPoints: Yup.string()\n    .min(6, 'CustomerAwardPoints must be 6 character length')\n    .required('Customer Award Points is required!'),\n  StaffAwardPoints: Yup.string()\n    .min(6, 'StaffAwardPoints must be 6 character length')\n    .required('Staff Award Points is required!'),\n  AwardPoints: Yup.string()\n    .min(6, 'AwardPoints must be 6 character length')\n    .required('Award Points is required!'),\n  AwardPoints1: Yup.string()\n    .min(6, 'AwardPoints1 must be 6 character length')\n    .required('Award Points is required!'),\n\n  Productscount: Yup.string()\n    .min(6, 'Productscount must be 6 character length')\n    .required('Products count is required!'),\n});\n\nconst SystemSettings = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'System Settings' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Paper\n                style={{\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Site Configuration\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'SiteName',\n                        label: 'Site Name',\n                        onBlur: handleBlur,\n                        value: values.SiteName,\n                        onChange: handleChange,\n                        helperText: touched.SiteName && errors.SiteName,\n                        error: Boolean(errors.SiteName && touched.SiteName),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'AccountingMethod',\n                        label: 'Accounting Method',\n                        value: values.AccountingMethod,\n                        onBlur: handleBlur,\n                        onChange: handleChange('AccountingMethod'),\n                        helperText: touched.AccountingMethod && errors.AccountingMethod,\n                        error: Boolean(errors.AccountingMethod && touched.AccountingMethod),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'MaintenanceMode',\n                        label: 'Maintenance Mode',\n                        value: values.MaintenanceMode,\n                        onBlur: handleBlur,\n                        onChange: handleChange('MaintenanceMode'),\n                        helperText: touched.MaintenanceMode && errors.MaintenanceMode,\n                        error: Boolean(errors.MaintenanceMode && touched.MaintenanceMode),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'LoginCaptcha',\n                        label: 'Login Captcha',\n                        value: values.LoginCaptcha,\n                        onBlur: handleBlur,\n                        onChange: handleChange('LoginCaptcha'),\n                        helperText: touched.LoginCaptcha && errors.LoginCaptcha,\n                        error: Boolean(errors.LoginCaptcha && touched.LoginCaptcha),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DateFormat ',\n                        label: 'Date Format',\n                        value: values.DateFormat,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DateFormat'),\n                        helperText: touched.DateFormat && errors.DateFormat,\n                        error: Boolean(errors.DateFormat && touched.DateFormat),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultWarehouse ',\n                        label: 'Default Warehouse ',\n                        value: values.DefaultWarehouse,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultWarehouse'),\n                        helperText: touched.DefaultWarehouse && errors.DefaultWarehouse,\n                        error: Boolean(errors.DefaultWarehouse && touched.DefaultWarehouse),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'DefaultEmail',\n                        label: 'Default Email',\n                        onBlur: handleBlur,\n                        value: values.DefaultEmail,\n                        onChange: handleChange,\n                        helperText: touched.DefaultEmail && errors.DefaultEmail,\n                        error: Boolean(errors.DefaultEmail && touched.DefaultEmail),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Language',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n\n                        name: 'Language',\n                        label: 'Language',\n                        defaultValue: 'English',\n                        value: values.Language,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Language'),\n                        helperText: touched.Language && errors.Language,\n                        error: Boolean(errors.Language && touched.Language),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultCustomerGroup ',\n                        label: 'Default Customer Group ',\n                        value: values.DefaultCustomerGroup,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultCustomerGroup'),\n                        helperText: touched.DefaultCustomerGroup && errors.DefaultCustomerGroup,\n                        error: Boolean(errors.DefaultCustomerGroup && touched.DefaultCustomerGroup),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Default',\n                        label: 'Default',\n                        value: values.Default,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Default'),\n                        helperText: touched.Default && errors.Default,\n                        error: Boolean(errors.Default && touched.Default),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Rowsperpage ',\n                        label: 'Rows per page ',\n                        value: values.Rowsperpage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Rowsperpage'),\n                        helperText: touched.Rowsperpage && errors.Rowsperpage,\n                        error: Boolean(errors.Rowsperpage && touched.Rowsperpage),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Timezone',\n                        label: 'Time zone',\n                        value: values.Timezone,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Timezone'),\n                        helperText: touched.Timezone && errors.Timezone,\n                        error: Boolean(errors.Timezone && touched.Timezone),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultBiller',\n                        label: 'Default Biller',\n                        value: values.DefaultBiller,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultBiller'),\n                        helperText: touched.DefaultBiller && errors.DefaultBiller,\n                        error: Boolean(errors.DefaultBiller && touched.DefaultBiller),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Numberofdays',\n                        label: 'Number of days to disable editing ',\n                        onBlur: handleBlur,\n                        value: values.Numberofdays,\n                        onChange: handleChange,\n                        helperText: touched.Numberofdays && errors.Numberofdays,\n                        error: Boolean(errors.Numberofdays && touched.Numberofdays),\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultCurrency',\n                        label: 'Default Currency',\n                        value: values.DefaultCurrency,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultCurrency'),\n                        helperText: touched.DefaultCurrency && errors.DefaultCurrency,\n                        error: Boolean(errors.DefaultCurrency && touched.DefaultCurrency),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultPriceGroup',\n                        label: 'Default Price Group',\n                        value: values.DefaultPriceGroup,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultPriceGroup'),\n                        helperText: touched.DefaultPriceGroup && errors.DefaultPriceGroup,\n                        error: Boolean(errors.DefaultPriceGroup && touched.DefaultPriceGroup),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'RTLSupport ',\n                        label: 'RTL Support ',\n                        value: values.RTLSupport,\n                        onBlur: handleBlur,\n                        onChange: handleChange('RTLSupport'),\n                        helperText: touched.RTLSupport && errors.RTLSupport,\n                        error: Boolean(errors.RTLSupport && touched.RTLSupport),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Calender',\n                        label: 'Calender',\n                        value: values.Calender,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Calender'),\n                        helperText: touched.Calender && errors.Calender,\n                        error: Boolean(errors.Calender && touched.Calender),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'PDFLibrary',\n                        label: 'PDF Library',\n                        value: values.PDFLibrary,\n                        onBlur: handleBlur,\n                        onChange: handleChange('PDFLibrary'),\n                        helperText: touched.PDFLibrary && errors.PDFLibrary,\n                        error: Boolean(errors.PDFLibrary && touched.PDFLibrary),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'APIsFeature',\n                        label: 'APIs Feature',\n                        value: values.APIsFeature,\n                        onBlur: handleBlur,\n                        onChange: handleChange('APIsFeature'),\n                        helperText: touched.APIsFeature && errors.APIsFeature,\n                        error: Boolean(errors.APIsFeature && touched.APIsFeature),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Products\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductTax',\n                        label: 'Product Tax',\n                        value: values.ProductTax,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductTax'),\n                        helperText: touched.ProductTax && errors.ProductTax,\n                        error: Boolean(errors.ProductTax && touched.ProductTax),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Barcodeseparator ',\n                        label: 'Barcode separator',\n                        value: values.Barcodeseparator,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Barcodeseparator'),\n                        helperText: touched.Barcodeseparator && errors.Barcodeseparator,\n                        error: Boolean(errors.Barcodeseparator && touched.Barcodeseparator),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductExpiry',\n                        label: 'Product Expiry',\n                        value: values.ProductExpiry,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductExpiry'),\n                        helperText: touched.ProductExpiry && errors.ProductExpiry,\n                        error: Boolean(errors.ProductExpiry && touched.ProductExpiry),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Racks',\n                        label: 'Racks',\n                        value: values.Racks,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Racks'),\n                        helperText: touched.Racks && errors.Racks,\n                        error: Boolean(errors.Racks && touched.Racks),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'BarcodeRenderer ',\n                        label: 'Barcode Renderer ',\n                        value: values.Racks,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Racks'),\n                        helperText: touched.Racks && errors.Racks,\n                        error: Boolean(errors.Racks && touched.Racks),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Removeexpired',\n                        label: 'Remove expired products from stock',\n                        value: values.Removeexpired,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Removeexpired'),\n                        helperText: touched.Removeexpired && errors.Removeexpired,\n                        error: Boolean(errors.Removeexpired && touched.Removeexpired),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductVariants',\n                        label: 'Product Variants',\n                        value: values.ProductVariants,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductVariants'),\n                        helperText: touched.ProductVariants && errors.ProductVariants,\n                        error: Boolean(errors.ProductVariants && touched.ProductVariants),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Updatecost',\n                        label: 'Update cost with purchase',\n                        value: values.Updatecost,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Updatecost'),\n                        helperText: touched.Updatecost && errors.Updatecost,\n                        error: Boolean(errors.Updatecost && touched.Updatecost),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Displaywarehouse',\n                        label: 'Display warehouse products',\n                        value: values.Displaywarehouse,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Displaywarehouse'),\n                        helperText: touched.Displaywarehouse && errors.Displaywarehouse,\n                        error: Boolean(errors.Displaywarehouse && touched.Displaywarehouse),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Watermark',\n                        label: 'Watermark',\n                        value: values.Watermark,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Watermark'),\n                        helperText: touched.Watermark && errors.Watermark,\n                        error: Boolean(errors.Watermark && touched.Watermark),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Label style={{ margin: '10px 0px 0px' }}>Thumbnail Size (W:H)</Label>\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Thumbnail',\n                        label: 'Thumbnail',\n                        onBlur: handleBlur,\n                        value: values.Thumbnail,\n                        onChange: handleChange,\n                        helperText: touched.Thumbnail && errors.Thumbnail,\n                        error: Boolean(errors.Thumbnail && touched.Thumbnail),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Thumbnail1',\n                        label: 'Thumbnail1',\n                        onBlur: handleBlur,\n                        value: values.Thumbnail1,\n                        onChange: handleChange,\n                        helperText: touched.Thumbnail1 && errors.Thumbnail1,\n                        error: Boolean(errors.Thumbnail1 && touched.Thumbnail1),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                  <Label style={{ margin: '10px 0px' }}>Image Size (W:H)</Label>\n                </Grid>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Image',\n                        label: 'Image',\n                        onBlur: handleBlur,\n                        value: values.Image,\n                        onChange: handleChange,\n                        helperText: touched.Image && errors.Image,\n                        error: Boolean(errors.Image && touched.Image),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'Image1',\n                        label: 'Image',\n                        onBlur: handleBlur,\n                        value: values.Image1,\n                        onChange: handleChange,\n                        helperText: touched.Image1 && errors.Image1,\n                        error: Boolean(errors.Image1 && touched.Image1),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Sales\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'OverSelling',\n                        label: 'Over Selling',\n                        value: values.OverSelling,\n                        onBlur: handleBlur,\n                        onChange: handleChange('OverSelling'),\n                        helperText: touched.OverSelling && errors.OverSelling,\n                        error: Boolean(errors.OverSelling && touched.OverSelling),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductLevelDiscount',\n                        label: 'Product Level Discount',\n                        value: values.ProductLevelDiscount,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductLevelDiscount'),\n                        helperText: touched.ProductLevelDiscount && errors.ProductLevelDiscount,\n                        error: Boolean(errors.ProductLevelDiscount && touched.ProductLevelDiscount),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Productscount',\n                        label: 'Products count ',\n                        value: values.Productscount,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Productscount'),\n                        helperText: touched.Productscount && errors.Productscount,\n                        error: Boolean(errors.Productscount && touched.Productscount),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'InvoiceView',\n                        label: 'Invoice View',\n                        value: values.InvoiceView,\n                        onBlur: handleBlur,\n                        onChange: handleChange('InvoiceView'),\n                        helperText: touched.InvoiceView && errors.InvoiceView,\n                        error: Boolean(errors.InvoiceView && touched.InvoiceView),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ReferenceFormat',\n                        label: 'Reference Format',\n                        value: values.ReferenceFormat,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ReferenceFormat'),\n                        helperText: touched.ReferenceFormat && errors.ReferenceFormat,\n                        error: Boolean(errors.ReferenceFormat && touched.ReferenceFormat),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ProductSerial',\n                        label: 'Product Serial',\n                        value: values.ProductSerial,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ProductSerial'),\n                        helperText: touched.ProductSerial && errors.ProductSerial,\n                        error: Boolean(errors.ProductSerial && touched.ProductSerial),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'CartItemAddition',\n                        label: 'Cart Item Addition Method',\n                        value: values.CartItemAddition,\n                        onBlur: handleBlur,\n                        onChange: handleChange('CartItemAddition'),\n                        helperText: touched.CartItemAddition && errors.CartItemAddition,\n                        error: Boolean(errors.CartItemAddition && touched.CartItemAddition),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'BusinessState',\n                        label: 'Business State',\n                        value: values.BusinessState,\n                        onBlur: handleBlur,\n                        onChange: handleChange('BusinessState'),\n                        helperText: touched.BusinessState && errors.BusinessState,\n                        error: Boolean(errors.BusinessState && touched.BusinessState),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'OrderTax',\n                        label: 'Order Tax',\n                        value: values.OrderTax,\n                        onBlur: handleBlur,\n                        onChange: handleChange('OrderTax'),\n                        helperText: touched.OrderTax && errors.OrderTax,\n                        error: Boolean(errors.OrderTax && touched.OrderTax),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'AutoDetectBarcode',\n                        label: 'Auto Detect Barcode',\n                        value: values.AutoDetectBarcode,\n                        onBlur: handleBlur,\n                        onChange: handleChange('AutoDetectBarcode'),\n                        helperText: touched.AutoDetectBarcode && errors.AutoDetectBarcode,\n                        error: Boolean(errors.AutoDetectBarcode && touched.AutoDetectBarcode),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DefaultOrderPage',\n                        label: 'Default Order Page Focus',\n                        value: values.DefaultOrderPage,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DefaultOrderPage'),\n                        helperText: touched.DefaultOrderPage && errors.DefaultOrderPage,\n                        error: Boolean(errors.DefaultOrderPage && touched.DefaultOrderPage),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Prefix\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'SalesReferencePrefix',\n                        label: 'Sales Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.SalesReferencePrefix,\n                        onChange: handleChange,\n                        helperText: touched.SalesReferencePrefix && errors.SalesReferencePrefix,\n                        error: Boolean(errors.SalesReferencePrefix && touched.SalesReferencePrefix),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'PurchasePaymentPrefix',\n                        label: 'Purchase Payment Prefix',\n                        onBlur: handleBlur,\n                        value: values.PurchasePaymentPrefix,\n                        onChange: handleChange,\n                        helperText: touched.PurchasePaymentPrefix && errors.PurchasePaymentPrefix,\n                        error: Boolean(\n                          errors.PurchasePaymentPrefix && touched.PurchasePaymentPrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'PurchaseReferencePrefix',\n                        label: 'Purchase Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.PurchaseReferencePrefix,\n                        onChange: handleChange,\n                        helperText:\n                          touched.PurchaseReferencePrefix && errors.PurchaseReferencePrefix,\n                        error: Boolean(\n                          errors.PurchaseReferencePrefix && touched.PurchaseReferencePrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ExpensePrefix',\n                        label: 'Expense Prefix',\n                        onBlur: handleBlur,\n                        value: values.ExpensePrefix,\n                        onChange: handleChange,\n                        helperText: touched.ExpensePrefix && errors.ExpensePrefix,\n                        error: Boolean(errors.ExpensePrefix && touched.ExpensePrefix),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ReturnSalePrefix',\n                        label: 'Return Sale Prefix',\n                        onBlur: handleBlur,\n                        value: values.ReturnSalePrefix,\n                        onChange: handleChange,\n                        helperText: touched.ReturnSalePrefix && errors.ReturnSalePrefix,\n                        error: Boolean(errors.ReturnSalePrefix && touched.ReturnSalePrefix),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'DeliveryReferencePrefix',\n                        label: 'Delivery Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.DeliveryReferencePrefix,\n                        onChange: handleChange,\n                        helperText:\n                          touched.DeliveryReferencePrefix && errors.DeliveryReferencePrefix,\n                        error: Boolean(\n                          errors.DeliveryReferencePrefix && touched.DeliveryReferencePrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'ReturnPurchasePrefix',\n                        label: 'Return Purchase Prefix',\n                        onBlur: handleBlur,\n                        value: values.ReturnPurchasePrefix,\n                        onChange: handleChange,\n                        helperText: touched.ReturnPurchasePrefix && errors.ReturnPurchasePrefix,\n                        error: Boolean(errors.ReturnPurchasePrefix && touched.ReturnPurchasePrefix),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'QuantityAdjustmentPrefix',\n                        label: 'Quantity Adjustment Prefix',\n                        onBlur: handleBlur,\n                        value: values.QuantityAdjustmentPrefix,\n                        onChange: handleChange,\n                        helperText:\n                          touched.QuantityAdjustmentPrefix && errors.QuantityAdjustmentPrefix,\n                        error: Boolean(\n                          errors.QuantityAdjustmentPrefix && touched.QuantityAdjustmentPrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'PaymentReferencePrefix',\n                        label: 'Payment Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.PaymentReferencePrefix,\n                        onChange: handleChange,\n                        helperText: touched.PaymentReferencePrefix && errors.PaymentReferencePrefix,\n                        error: Boolean(\n                          errors.PaymentReferencePrefix && touched.PaymentReferencePrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'QuotationReferencePrefix',\n                        label: 'Quotation Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.QuotationReferencePrefix,\n                        onChange: handleChange,\n                        helperText:\n                          touched.QuotationReferencePrefix && errors.QuotationReferencePrefix,\n                        error: Boolean(\n                          errors.QuotationReferencePrefix && touched.QuotationReferencePrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'TransferReferencePrefix',\n                        label: 'Transfer Reference Prefix',\n                        onBlur: handleBlur,\n                        value: values.QuotationReferencePrefix,\n                        onChange: handleChange,\n                        helperText:\n                          touched.QuotationReferencePrefix && errors.QuotationReferencePrefix,\n                        error: Boolean(\n                          errors.QuotationReferencePrefix && touched.QuotationReferencePrefix\n                        ),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              {/* /// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Money and Number Format\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'Decimals',\n                        label: 'Decimals',\n                        value: values.Decimals,\n                        onBlur: handleBlur,\n                        onChange: handleChange('Decimals'),\n                        helperText: touched.Decimals && errors.Decimals,\n                        error: Boolean(errors.Decimals && touched.Decimals),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DecimalsSeparator ',\n                        label: 'Decimals Separator ',\n                        value: values.DecimalsSeparator,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DecimalsSeparator'),\n                        helperText: touched.DecimalsSeparator && errors.DecimalsSeparator,\n                        error: Boolean(errors.DecimalsSeparator && touched.DecimalsSeparator),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CurrencySymbol',\n                        label: 'Currency Symbol',\n                        onBlur: handleBlur,\n                        value: values.CurrencySymbol,\n                        onChange: handleChange,\n                        helperText: touched.CurrencySymbol && errors.CurrencySymbol,\n                        error: Boolean(errors.CurrencySymbol && touched.CurrencySymbol),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'QuantityDecimals',\n                        label: 'Quantity Decimals',\n                        value: values.QuantityDecimals,\n                        onBlur: handleBlur,\n                        onChange: handleChange('QuantityDecimals'),\n                        helperText: touched.QuantityDecimals && errors.QuantityDecimals,\n                        error: Boolean(errors.QuantityDecimals && touched.QuantityDecimals),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'ThousandsSeparator',\n                        label: 'Thousands Separator',\n                        value: values.ThousandsSeparator,\n                        onBlur: handleBlur,\n                        onChange: handleChange('ThousandsSeparator'),\n                        helperText: touched.ThousandsSeparator && errors.ThousandsSeparator,\n                        error: Boolean(errors.ThousandsSeparator && touched.ThousandsSeparator),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'SouthAsianCountries',\n                        label: 'South Asian Countries Currency Format',\n                        value: values.SouthAsianCountries,\n                        onBlur: handleBlur,\n                        onChange: handleChange('SouthAsianCountries'),\n                        helperText: touched.SouthAsianCountries && errors.SouthAsianCountries,\n                        error: Boolean(errors.SouthAsianCountries && touched.SouthAsianCountries),\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={4}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'DisplayCurrencySymbol',\n                        label: 'Display Currency Symbol',\n                        value: values.DisplayCurrencySymbol,\n                        onBlur: handleBlur,\n                        onChange: handleChange('DisplayCurrencySymbol'),\n                        helperText: touched.DisplayCurrencySymbol && errors.DisplayCurrencySymbol,\n                        error: Boolean(\n                          errors.DisplayCurrencySymbol && touched.DisplayCurrencySymbol\n                        ),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              {/* //// */}\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Email\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <AutocompleteComboNew\n                      props={{\n                        names: [\n                          'Oliver Hansen',\n                          'Van Henry',\n                          'April Tucker',\n                          'Ralph Hubbard',\n                          'Omar Alexander',\n                          'Carlos Abbott',\n                          'Miriam Wagner',\n                          'Bradley Wilkerson',\n                          'Virginia Andrews',\n                          'Kelly Snyder',\n                        ],\n                        name: 'EmailProtocol',\n                        label: 'Email Protocol',\n                        value: values.EmailProtocol,\n                        onBlur: handleBlur,\n                        onChange: handleChange('EmailProtocol'),\n                        helperText: touched.EmailProtocol && errors.EmailProtocol,\n                        error: Boolean(errors.EmailProtocol && touched.EmailProtocol),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              {/* //// */}\n\n              <Paper\n                style={{\n                  marginTop: '20px',\n                  boxShadow: 'none',\n                  border: '1px solid rgb(229 217 217)',\n                  padding: '15px',\n                }}\n              >\n                <Typography variant=\"h6\" className={classes.textnew1}>\n                  Award Points\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'CustomerAwardPoints',\n                        label: 'Customer Award Points',\n                        onBlur: handleBlur,\n                        value: values.CustomerAwardPoints,\n                        onChange: handleChange,\n                        helperText: touched.CustomerAwardPoints && errors.CustomerAwardPoints,\n                        error: Boolean(errors.CustomerAwardPoints && touched.CustomerAwardPoints),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'StaffAwardPoints',\n                        label: 'Staff Award Points',\n                        onBlur: handleBlur,\n                        value: values.StaffAwardPoints,\n                        onChange: handleChange,\n                        helperText: touched.StaffAwardPoints && errors.StaffAwardPoints,\n                        error: Boolean(errors.StaffAwardPoints && touched.StaffAwardPoints),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'AwardPoints',\n                        label: 'Award Points',\n                        onBlur: handleBlur,\n                        value: values.AwardPoints,\n                        onChange: handleChange,\n                        helperText: touched.AwardPoints && errors.AwardPoints,\n                        error: Boolean(errors.AwardPoints && touched.AwardPoints),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <SimpleFormNew\n                      props={{\n                        type: 'text',\n                        name: 'AwardPoints1',\n                        label: 'Award Points',\n                        onBlur: handleBlur,\n                        value: values.AwardPoints1,\n                        onChange: handleChange,\n                        helperText: touched.AwardPoints1 && errors.AwardPoints1,\n                        error: Boolean(errors.AwardPoints1 && touched.AwardPoints1),\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Update Setting\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default SystemSettings;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/BrandActions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/NavigationAction.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/redux/actions/NotificationActions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCurrencies.js",["3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n  Currency_Name: '',\n  Symbol: '',\n  Exchange_Rate: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Currency_Code: Yup.string()\n    .min(3, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n        \n   Currency_Name: Yup.string()\n    .min(3, 'Currency Name must be 3 character length')\n    .required('Currency Name per line is required!'),\n\n    Symbol: Yup.string()\n  \n    .required('Symbol per line is required!'),\n\n    Exchange_Rate: Yup.string()\n    .required('Exchange Rate per line is required!'),\n\n\n});\n\n\n\n\n\n\n\nconst AddCurrencies = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Currencies' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Currency_Code',\n                      label: 'Currency Code',\n                      onBlur: handleBlur,\n                      value: values.Currency_Code,\n                      onChange: handleChange,\n                      helperText: touched.Currency_Code && errors.Currency_Code,\n                      error: Boolean(errors.Currency_Code && touched.Currency_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Currency_Name',\n                      label: 'Currency Name',\n                      onBlur: handleBlur,\n                      value: values.start_Date,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Currency_Name && errors.start_Date,\n                      error: Boolean(errors.Currency_Name && touched.start_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Symbol',\n                      label: 'Symbol',\n                      value: values.Symbol,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Symbol && errors.Symbol,\n                      error: Boolean(errors.Symbol && touched.Symbol),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Exchange_Rate',\n                      label: 'Exchange Rate',\n                      onBlur: handleBlur,\n                      value: values.Exchange_Rate,\n                      onChange: handleChange,\n                      helperText: touched.Exchange_Rate && errors.Exchange_Rate,\n                      error: Boolean(errors.Exchange_Rate && touched.Exchange_Rate),\n                    }}\n                  />\n                </Grid>\n              \n           \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Curreancies\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddCurrencies;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCustomerGroups.js",["3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n  Currency_Name: '',\n  Symbol: '',\n  Exchange_Rate: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Currency_Code: Yup.string()\n    .min(3, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n        \n   Currency_Name: Yup.string()\n    .min(3, 'Currency Name must be 3 character length')\n    .required('Currency Name per line is required!'),\n\n\n\n});\n\n\n\n\n\n\n\nconst AddCustomerGroups = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Customer Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Group Name',\n                      label: 'Group_Name',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Group_Name && errors.Group_Name,\n                      error: Boolean(errors.Group_Name && touched.Group_Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Group_Percentage',\n                      label: 'Group Percentage (without % sign)',\n                      value: values.Group_Percentage,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Group_Percentage && errors.Group_Percentage,\n                      error: Boolean(errors.Group_Percentage && touched.Group_Percentage),\n                    }}\n                  />\n                </Grid>\n              \n              \n           \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Customer Group\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddCustomerGroups;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddExpenseCategories.jsx",["3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Category_Code: '',\n  Category_Name :'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n    Category_Code: Yup.string()\n    \n    .required('Category Code is required!'),\n    Category_Name: Yup.string()\n    // .min(6, 'Category Name must be 3 character length')\n    .required('Category Name is required!'),\n\n\n\n\n\n});\n\n\n\n\n\n\n\nconst AddExpenseCategories = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Customer Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_code',\n                      label: 'Category code',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Category_code && errors.Category_code,\n                      error: Boolean(errors.Category_code && touched.Category_code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Name',\n                      label: 'Category Name',\n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                      onChange: handleChange,\n                      helperText: touched.Category_Name && errors.Category_Name,\n                      error: Boolean(errors.Category_Name && touched.Category_Name),\n                    }}\n                  />\n                </Grid>\n                </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Expense Catergory\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddExpenseCategories;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddUnits.jsx",["3165","3166","3167","3168","3169","3170","3171","3172","3173","3174"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Unit_Code: '',\n  Unit_Name: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Unit_Code: Yup.string()\n \n    .required('Unit Code is required!'),\n\n    Unit_Name: Yup.string()\n  \n    .required('Unit Name per line is required!'),\n\n  \n});\n\nconst AddUnits = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Unit' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Unit_Code',\n                      label: 'Unit Code',\n                      onBlur: handleBlur,\n                      value: values.Unit_Code,\n                      onChange: handleChange,\n                      helperText: touched.Unit_Code && errors.Unit_Code,\n                      error: Boolean(errors.Unit_Code && touched.Unit_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Unit_Name',\n                      label: 'Unit Name',\n                      onBlur: handleBlur,\n                      value: values.Unit_Name,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Unit_Name && errors.Unit_Name,\n                      error: Boolean(errors.Unit_Name && touched.Unit_Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Base_Unit',\n                      label: 'Base Unit',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Base_Unit'),\n                      helperText: touched.Base_Unit && errors.Base_Unit,\n                      error: Boolean(errors.Base_Unit && touched.Base_Unit),\n                    }}\n                  />\n                </Grid>\n                \n               \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add unit\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddUnits;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddVariants.jsx",["3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  \n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n\n   \n        \n    \n\n  \n  \n\n    \n});\n\nconst AddVariants = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Variant' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n               \n               \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Variant\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddVariants;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddTaxRates.jsx",["3186","3187","3188","3189","3190","3191","3192","3193","3194","3195"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  Code: '',\n  Rate: '',\n  Type: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(2, 'Name must be 2 character length')\n    .max(2, 'Name must be 10 character length')\n    .required('Name is required!'),\n\n    Code: Yup.string(),\n    \n    Rate: Yup.string()\n   \n    .required('Rate per line is required!'),\n\n    Type: Yup.string()\n   \n    .required('Type per line is required!'),\n\n\n});\n\nconst AddTaxRates = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Tax Rate' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Code',\n                      label: 'Code',\n                      onBlur: handleBlur,\n                      value: values.Code,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Code && errors.Code,\n                      error: Boolean(errors.Code && touched.Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Rate',\n                      label: 'Rate',\n                      value: values.Rate,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Rate && errors.Rate,\n                      error: Boolean(errors.Rate && touched.Rate),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n             \n              \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Tax Rate\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddTaxRates;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPriceGroups.jsx",["3196","3197","3198","3199","3200","3201","3202","3203","3204","3205","3206"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Group_Name: Yup.string()\n    .min(6, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n\n\n\n});\n\n\n\n\n\n\n\nconst AddPriceGroups = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Price Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Group_Name *',\n                      label: 'Group Name',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Group_Name && errors.Group_Name,\n                      error: Boolean(errors.Group_Name && touched.Group_Name),\n                    }}\n                  />\n                </Grid>\n                </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Price Group\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPriceGroups;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddBrands.jsx",["3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize, Typography } from '@mui/material';\nimport { min } from 'lodash';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Code: '',\n  Name: '',\n  Slug: '',\n  Description:'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Code: Yup.string()\n  \n    .required('Code is required!'),\n\n  Name: Yup.string()\n  \n    .required('Name per line is required!'),\n\n    Slug: Yup.string()\n    .required('Slug per line is required!'),\n\n    Description: Yup.string()\n    .required('Name per line is required!'),\n});\n\nconst AddBrands = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Brand' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Code',\n                      label: 'Code',\n                      onBlur: handleBlur,\n                      value: values.Code,\n                      onChange: handleChange,\n                      helperText: touched.Code && errors.Code,\n                      error: Boolean(errors.Code && touched.Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Slug',\n                      label: 'Slug',\n                      value: values.Slug,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  {/* <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category Image',\n                      label: 'Category_Image',\n                      onBlur: handleBlur,\n                      value: values.Category_Image,\n                      onChange: handleChange,\n                      helperText: touched.Category_Image && errors.Category_Image,\n                      error: Boolean(errors.Category_Image && touched.Category_Image),\n                    }}\n                    \n                  />  */}\n                    <Singleimage\n                    \n                        />\n\n                     <Typography className={classes.textnew2}>Image</Typography>\n                </Grid>\n                \n    \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Brand\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddBrands;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddCategories.js",["3218","3219","3220","3221","3222","3223","3224","3225","3226","3227"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport { Typography } from '@mui/material';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Category_Code: '',\n  Category_Name: '',\n  Slug: '',\n  Description: '',\n\n \n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Category_Code: Yup.string()\n \n    .required('Category Code is required!'),\n\n    Category_Name: Yup.string()\n   \n    .required('Category Name is required!'),\n\n \n    \n   \n\n    Description: Yup.string()\n    .min(6, 'Description must be 6 character length')\n    .required('Description per line is required!'),\n\n \n\n});\n\nconst AddCategories = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Categories' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Code',\n                      label: 'Category Code',\n                      onBlur: handleBlur,\n                      value: values.Category_Code,\n                      onChange: handleChange,\n                      helperText: touched.Category_Code && errors.Category_Code,\n                      error: Boolean(errors.Category_Code && touched.Category_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Name',\n                      label: 'Category Name',\n                    \n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                   \n                      onChange: handleChange,\n                      helperText: touched.Category_Name && errors.Category_Name,\n                      error: Boolean(errors.Category_Name && touched.Category_Name),\n                    }}\n                  />\n                </Grid>\n              \n              \n              \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Slug',\n                      // label: 'Slug',\n                    \n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                      // Value:\"\",\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                  /> \n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <Fileattachment\n                    props={{\n                      label: '  Category Image',\n                    }}\n                  />\n                </Grid>\n                     \n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                      'Bradley Wilkerson',\n                         'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                         'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Parent_Category',\n                      label: 'Parent Category',\n                      value: values.Parent_Category,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Parent Category'),\n                      helperText: touched.Parent_Category && errors.Parent_Category,\n                      error: Boolean(errors.Parent_Category && touched.Parent_Category),\n                    }}\n                  />\n                </Grid>\n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add category\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddCategories;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddWareHouses.jsx",["3228","3229","3230","3231","3232","3233","3234","3235"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize, Typography } from '@mui/material';\nimport { min } from 'lodash';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport Label from '../material-kit/tables/Label';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n \n  code: '',\n  Name: '',\n  Price_Group: '',\n  Phone: '',\n  Email: '',\n  Address:'',\n  Warehouse_Map:'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  code: Yup.string()\n    .min(6, 'code must be 6 character length')\n    .required('code is required!'),\n    Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n  \n    Phone: Yup.string()\n    .matches(\n      /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\n      \"Phone number is not valid\"\n    )\n    .max(10,\"Phone number is not valid\"),\n    \n\n\n    Email: Yup.string()\n          .email(),\n \n    \n});\n\nconst AddWareHouses = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add WareHouse' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n               \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'code',\n                      label: 'code',\n                      onBlur: handleBlur,\n                      value: values.code,\n                    \n                      onChange: handleChange,\n                      helperText: touched.code && errors.code,\n                      error: Boolean(errors.code && touched.code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n             \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'Email',\n                      name: 'Email',\n                      label: 'Email',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n              \n                <Grid item xs={12}>\n                  <Label> Address</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  {/* <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category Image',\n                      label: 'Category_Image',\n                      onBlur: handleBlur,\n                      value: values.Category_Image,\n                      onChange: handleChange,\n                      helperText: touched.Category_Image && errors.Category_Image,\n                      error: Boolean(errors.Category_Image && touched.Category_Image),\n                    }}\n                    \n                  />  */}\n                    <Singleimage\n                    \n                        />\n\n                     <Typography className={classes.textnew2}>Warehouse Map</Typography>\n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add WareHouse\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddWareHouses;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCategories.js",["3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPromos.js",["3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { Tab } from '@mui/material';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n  { id: 'Product to buy', label: 'Product to buy', alignRight: false },\n  { id: 'Product to get', label: 'Product to get', alignRight: false },\n  { id: 'Start Date', label: 'Start Date', alignRight: false },\n  { id: 'End Date', label: 'End Date', alignRight: false },\n  { id: 'Action', label: 'Action', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\nlet promo =[\n  {\"id\":\"1\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n  {\"id\":\"2\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n  {\"id\":\"3\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n  {\"id\":\"4\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n  {\"id\":\"5\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n  {\"id\":\"6\",\"Name\":\"i phone\",\"Product_to_buy\":\"iphone\",\"Product_to_get\":\"iphone\",\"Start_Date\":\"12/12/2022\",\"End_Date\":\"15/12/2022\"},\n]\n\n\nconst showtoast =()=>{\n  toast.success('Delete Successfully!', {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\n\n\n\n\n\nfunction ListPromos(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  const navigate = useNavigate();\n\n\n\nconst NavigatetoEdit= (index) => {\n  // 👇️ navigate to /EditCurrencies\n  navigate(`/Settings/Promos/EditPromos/${index}`);\n};\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n             {\n              promo.map((item,index)=>{\n                return(\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox/>\n                    </TableCell>\n                    <TableCell>\n                      {item.Name}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Product_to_buy}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Product_to_get}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Start_Date}\n\n                    </TableCell>\n                    \n                    <TableCell>\n                      {item.End_Date}\n\n                    </TableCell>\n                    <TableCell>\n                      <Edit onClick ={()=>NavigatetoEdit(item.id)} />\n                      <Delete  onClick={showtoast}/>\n                    </TableCell>\n                    \n                    \n                    \n                    </TableRow>\n                )\n              })\n             }\n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={12} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n\n      />\n      <ToastContainer/>\n\n    </Container>\n\n\n    // </Page>\n  );\n}\nexport default ListPromos;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/AddPromos.jsx",["3294","3295","3296","3297","3298","3299","3300","3301","3302","3303","3304"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\n\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  start_Date: '',\n  End_Date: '',\n  Produc_to_buy: '',\n  Product_to_get: '',\n  Description: '',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n    start_Date: Yup.date(),\n    End_Date: Yup.date().min(\n        Yup.ref('start_Date'),\n        \"End date can't be before Start date\"\n      ),\n     Produc_to_buy: Yup.string()\n    .min(6, 'Produc_to_buy must be 6 character length')\n    .required('Produc_to_buy per line is required!'),\n\n    Product_to_get: Yup.string()\n    .min(6, 'Product_to_get must be 6 character length')\n    \n    .required('Product_to_get per line is required!'),\n\n    Description: Yup.string(),\n});\n\nconst AddPromos = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Promos' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'start_Date',\n                      label: 'start Date',\n                      onBlur: handleBlur,\n                      value: values.start_Date,\n                    \n                      onChange: handleChange,\n                      helperText: touched.start_Date && errors.start_Date,\n                      error: Boolean(errors.start_Date && touched.start_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'End_Date',\n                      label: 'End Date',\n                      value: values.End_Date,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.End_Date && errors.End_Date,\n                      error: Boolean(errors.End_Date && touched.End_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Produc_to_buy',\n                      label: 'Product to buy',\n                      onBlur: handleBlur,\n                      value: values.Produc_to_buy,\n                      onChange: handleChange,\n                      helperText: touched.Produc_to_buy && errors.Produc_to_buy,\n                      error: Boolean(errors.Produc_to_buy && touched.Produc_to_buy),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Product_to_get',\n                      label: 'Product to get',\n                      onBlur: handleBlur,\n                      value: values.Product_to_get,\n                      onChange: handleChange,\n                      helperText: touched.Product_to_get && errors.Product_to_get,\n                      error: Boolean(errors.Product_to_get && touched.Product_to_get),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                <SimpleFormNew\n               \n           \n                     props={{\n                      type: 'text',\n                      multiline:true,\n                      rows:4,\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                \n                  /> \n                        \n               \n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Promos\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPromos;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCurrenies.js",["3305","3306","3307","3308","3309","3310","3311","3312","3313","3314","3315","3316","3317","3318","3319","3320","3321","3322","3323","3324","3325","3326","3327","3328","3329","3330","3331","3332","3333","3334"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport{Link} from 'react-router-dom';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\n// import { toast } from 'react-toastify';\n//\n\n// ----------------------------------------------------------------------\n\n\n\nconst TABLE_HEAD = [\n  { id: 'Currency Code', label: 'Currency Code', alignRight: false },\n  { id: 'Currency Name', label: 'Currency Name', alignRight: false },\n  { id: 'Exchange rate', label: 'Exchange rate', alignRight: false },\n\n  { id: 'Symbol', label: 'Symbol', alignRight: false },\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n//------------------------------------------json object for default data-----\n\nlet obj = [\n  {\"id\":\"1\", \"Currency_code\":\"USD\",\"Currency_Name\":\"DOLLAR\",\"Exchange_rate\":\"80\",\"Symbol\":\"$\",},\n  {\"id\":\"2\", \"Currency_code\":\"USD\",\"Currency_Name\":\"DOLLAR\",\"Exchange_rate\":\"80\",\"Symbol\":\"$\",},\n  {\"id\":\"3\", \"Currency_code\":\"USD\",\"Currency_Name\":\"DOLLAR\",\"Exchange_rate\":\"80\",\"Symbol\":\"$\",},\n  {\"id\":\"4\", \"Currency_code\":\"USD\",\"Currency_Name\":\"DOLLAR\",\"Exchange_rate\":\"80\",\"Symbol\":\"$\",},\n  {\"id\":\"5\", \"Currency_code\":\"USD\",\"Currency_Name\":\"DOLLAR\",\"Exchange_rate\":\"80\",\"Symbol\":\"$\",},\n]\n\nconst showtoast =()=>{\n  toast.success('Delete Successfully!', {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListCurrenies(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigateToEdit= (index) => {\n  // 👇️ navigate to /EditCurrencies\n  navigate(`/Settings/Currencies/EditCurrencies/${index}`);\n};\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={12} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n               \n                  {\n                    obj.map((item,index)=>{\n                      return(\n                        <TableRow>\n                          <Checkbox/>\n                        <TableCell>\n                         {item.Currency_code}\n                        </TableCell>  \n                        <TableCell>\n                         {item.Currency_Name}\n                        </TableCell>  \n                        <TableCell>\n                         {item.Exchange_rate}\n                        </TableCell>  \n                        <TableCell>\n                         {item.Symbol}\n                        </TableCell> \n                        <TableCell>\n                         <Delete onClick={showtoast}/>\n                         {/* <Link to=\"EditCurrencies/1\"><Edit/></Link> */}\n\n                         <Edit onClick={()=>navigateToEdit(item.id)}/>\n                        </TableCell> \n\n                        </TableRow>\n                      )\n                    })\n                  }\n                  \n\n\n             \n\n                \n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n            <ToastContainer />\n\n\n    </Container>\n    // </Page>\n  );\n}\nexport default ListCurrenies;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListExpenseCategories.js",["3335","3336","3337","3338","3339","3340","3341","3342","3343","3344","3345","3346","3347","3348","3349","3350","3351","3352","3353","3354","3355","3356","3357","3358","3359","3360","3361","3362","3363","3364"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { CheckBox, Delete, Edit, Print } from '@material-ui/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Category Code', label: 'Category Code', alignRight: false },\n  { id: 'Category Name', label: 'Category Name', alignRight: false },\n \n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\nlet ExCategories =[\n  {\"id\":\"1\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n  {\"id\":\"2\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n  {\"id\":\"3\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n  {\"id\":\"4\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n  {\"id\":\"5\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n  {\"id\":\"6\",\"Category_code\":\"Electricity\",\"category_Name\":\"Electricity Bill\"},\n]\n\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListExpenseCategories(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigatetoedit= (index) => {\n\n  navigate(`/Settings/ExpenseCategories/EditExpenseCategories/${index}`);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n                \n\n                {\n                  ExCategories.map((item,index)=>{\n                    return(\n                      <TableRow>\n                        <TableCell>\n                          <Checkbox/>\n                        </TableCell>\n                        <TableCell>\n                          {item.Category_code}\n                        </TableCell>\n                        <TableCell>\n                          {item.category_Name}\n                        </TableCell>\n                        <TableCell>\n                          <Edit onClick={()=>navigatetoedit(item.id)}/>\n                          <Delete onClick={()=>showtoast(item.id)}/>\n                        </TableCell>\n                      </TableRow>\n                    )\n                  })\n                }\n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListExpenseCategories;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListUnits.js",["3365","3366","3367","3368","3369","3370","3371","3372","3373","3374","3375","3376","3377","3378","3379","3380","3381","3382","3383","3384","3385","3386","3387","3388","3389","3390","3391","3392","3393"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\nimport Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Unit code', label: 'unit code', alignRight: false },\n  { id: 'unit name', label: 'unit name', alignRight: false },\n  { id: 'Base unit', label: 'Base unit', alignRight: false },\n  { id: 'Operator', label: 'Operator', alignRight: false },\n  { id: 'Operation Value', label: 'Operation Value', alignRight: false },\n  { id: 'Actions', label: 'Actions', alignRight: false },\n\n];\n\n// ----------------------------------------------------------------------\n\n\nlet unit = [\n  { \"id\": \"1\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n  { \"id\": \"2\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n  { \"id\": \"3\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n  { \"id\": \"4\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n  { \"id\": \"5\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n  { \"id\": \"6\", \"Unit_code\": \"121\", \"Unit_Name\": \"55\", \"Base_unit\": \"base Unit\", \"Operator\": \"operator\", \"Operator_Value\": \"value\" },\n]\n\n\n\nconst showtoast = (index) => {\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n  });\n}\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListUnits(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n\n  const navigate = useNavigate();\n\n\n\n  const navigatetoedit = (index) => {\n\n    navigate(`/Settings/Units/EditUnits/${index}`);\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n      <TableContainer>\n        <Table>\n          <UserListHead\n            order={order}\n            orderBy={orderBy}\n            headLabel={TABLE_HEAD}\n            rowCount={data.length}\n            numSelected={selected.length}\n            onRequestSort={handleRequestSort}\n            onSelectAllClick={handleSelectAllClick}\n          />\n          <TableBody>\n            {filteredUsers\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                const {\n                  id,\n                  name,\n                  unit,\n                  cost,\n                  price,\n                  image,\n                  code,\n                  brand,\n                  quantity,\n                  alert_quantity,\n                  category_id,\n                  isVerified,\n                } = row;\n                const isItemSelected = selected.indexOf(name) !== -1;\n\n                return (\n                  <TableRow\n                  // hover\n                  // key={id}\n                  // tabIndex={-1}\n                  // role=\"checkbox\"\n                  // selected={isItemSelected}\n                  // aria-checked={isItemSelected}\n                  >\n                    {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                    {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                    {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                    {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                    {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                    {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                    <TableCell align=\"right\">\n                      <UserMoreMenu />\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          {isUserNotFound && (\n            <TableBody>\n\n              {\n                unit.map((item, index) => {\n                  return (\n                    <TableRow>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {item.Unit_code}\n                      </TableCell>\n                      <TableCell>\n                        {item.Unit_Name}\n                      </TableCell>\n                 \n                      <TableCell>\n                        {item.Base_unit}\n                      </TableCell>\n                      <TableCell>\n                        {item.Operator}\n                      </TableCell>\n                      <TableCell>\n                        {item.Operator_Value}\n                      </TableCell>\n                      <TableCell>\n                        <Edit onClick={() => navigatetoedit(item.id)} />\n                        <Delete onClick={() => showtoast(item.id)} />\n                      </TableCell>\n                    </TableRow>\n                  )\n                })\n              }\n\n\n\n              <TableRow>\n\n\n                <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                  <SearchNotFound searchQuery={filterName} />\n\n                </TableCell>\n              </TableRow>\n\n\n\n            </TableBody>\n          )}\n        </Table>\n      </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListUnits;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPriceGroups.js",["3394","3395","3396","3397","3398","3399","3400","3401","3402","3403","3404","3405","3406","3407","3408","3409","3410","3411","3412","3413","3414","3415","3416","3417","3418","3419","3420","3421","3422"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { EyeFilled } from '@ant-design/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\nlet pricegroup =[\n  {\"id\":\"1\",\"Name\":\"arun\"},\n  {\"id\":\"2\",\"Name\":\"arun\"},\n  {\"id\":\"3\",\"Name\":\"arun\"},\n  {\"id\":\"4\",\"Name\":\"arun\"},\n  {\"id\":\"5\",\"Name\":\"arun\"},\n  {\"id\":\"6\",\"Name\":\"arun\"},\n  {\"id\":\"7\",\"Name\":\"arun\"},\n  {\"id\":\"8\",\"Name\":\"arun\"},\n\n]\n\n\n\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListPriceGroups(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n  const navigate = useNavigate();\n\n\n\n  const navigatetoedit= (index) => {\n    // 👇️ navigate to /EditCurrencies\n    navigate(`/Settings/PriceGroups/EditPriceGroups/${index}`);\n  };\n  \n  \n  const navigatetogrpproduct =(index)=>{\n    navigate(`/Settings/PriceGroups/GroupProductPrices/${index}`);\n  }\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n\n                \n              {\n                pricegroup.map((item,index)=>{\n                  return(\n                    <TableRow>\n                      <TableCell>\n                        <Checkbox/>\n                      </TableCell>\n                      <TableCell>\n                        {item.Name}\n                      </TableCell>\n                      <TableCell>\n                        <EyeFilled onClick={()=>{navigatetogrpproduct(item.id)}}/>\n                        <Edit onClick ={()=>navigatetoedit(item.id)}/>\n                        <Delete onClick ={()=>showtoast(item.id)}/>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })\n              }\n\n              \n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListPriceGroups;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListBrands.js",["3423","3424","3425","3426","3427","3428","3429","3430","3431","3432","3433","3434","3435","3436","3437","3438","3439","3440","3441","3442","3443","3444","3445","3446","3447","3448","3449","3450","3451"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../material-kit/tables/Label';\nimport Scrollbar from '../material-kit/tables/Scrollbar';\nimport USERLIST from '../material-kit/tables/User';\nimport SearchNotFound from '../material-kit/tables/SearchNotFound';\nimport UserListHead from '../material-kit/tables/UserListHead';\nimport UserListToolbar from '../material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Image', label: 'Image', alignRight: false },\n\n  { id: 'Code', label: 'Code', alignRight: false },\n  { id: 'Name', label: 'Name', alignRight: false },\n  { id: 'Slug', label: 'Slug', alignRight: false },\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n   let brand =[\n    {\"id\":\"1\",\"Image\":\"blank\",\"code\":\"123\",\"Name\":\"brand123\",\"slug\":\"brand123\"},\n    {\"id\":\"2\",\"Image\":\"blank\",\"code\":\"123\",\"Name\":\"brand123\",\"slug\":\"brand123\"},\n    {\"id\":\"3\",\"Image\":\"blank\",\"code\":\"123\",\"Name\":\"brand123\",\"slug\":\"brand123\"},\n    {\"id\":\"4\",\"Image\":\"blank\",\"code\":\"123\",\"Name\":\"brand123\",\"slug\":\"brand123\"},\n    {\"id\":\"5\",\"Image\":\"blank\",\"code\":\"123\",\"Name\":\"brand123\",\"slug\":\"brand123\"},\n   ]\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListBrands(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigatetoedit= (index) => {\n  \n  navigate(`/Settings/Brands/EditBrands/${index}`);\n};\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n\n                {\n                  brand.map((item,index)=>{\n                    return(\n                      <TableRow>\n                  <TableCell >\n                    <Checkbox/>\n                  </TableCell>\n                  <TableCell>\n                    {item.Image}\n                  </TableCell>\n                  <TableCell>\n                    {item.code}\n                  </TableCell>\n                  <TableCell>\n                    {item.Name}\n                  </TableCell>\n                  <TableCell>\n                  {item.slug}\n                  </TableCell>\n                  \n                  \n                  <TableCell>\n                    <Delete onClick={()=>showtoast(item.id)}/>\n                    <Edit onClick={()=>navigatetoedit(item.id)}/>\n                  </TableCell>\n                 </TableRow>\n\n\n                    )\n                  })\n                }\n\n\n             \n\n\n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListBrands;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListVariants.js",["3452","3453","3454","3455","3456","3457","3458","3459","3460","3461","3462","3463","3464","3465","3466","3467","3468","3469","3470","3471","3472","3473","3474","3475","3476","3477","3478","3479","3480"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\n\n\nlet variant =[\n  {\"id\":\"1\",\"Name\":\"Black\"},\n  {\"id\":\"2\",\"Name\":\"Black\"},\n  {\"id\":\"3\",\"Name\":\"Black\"},\n  {\"id\":\"4\",\"Name\":\"Black\"},\n  {\"id\":\"5\",\"Name\":\"Black\"},\n  {\"id\":\"6\",\"Name\":\"Black\"},\n]\n\n\n\n\n\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListVariants(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  const navigate = useNavigate();\n\n\n\n  const navigatetoedit= (index) => {\n    // 👇️ navigate to /EditCurrencies\n    navigate(`/Settings/Variants/EditVariants/${index}`);\n  };\n  \n  \n  \n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n\n              {\n                variant.map((item,index)=>{\n                  return(\n                    <TableRow>\n                      <TableCell>\n                        <Checkbox/>\n                      </TableCell>\n                      <TableCell>\n                        {item.Name}\n                      </TableCell>\n                      <TableCell>\n                        <Edit onClick ={()=>navigatetoedit(item.id)}/>\n                        <Delete onClick ={()=>showtoast(item.id)}/>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })\n              }\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListVariants;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListWareHouses.js",["3481","3482","3483","3484","3485","3486","3487","3488","3489","3490","3491","3492","3493","3494","3495","3496","3497","3498","3499","3500","3501","3502"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Map', label: 'Map', alignRight: false },\n  { id: 'Code', label: 'Code', alignRight: false },\n  { id: 'Name', label: 'Name', alignRight: false },\n  { id: 'Price Group', label: 'Price Group', alignRight: false },\n  { id: 'Phone', label: 'Phone', alignRight: false },\n  { id: 'Email', label: 'Email', alignRight: false },\n  { id: 'Address', label: 'Address', alignRight: false },\n\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\nlet warehouse =[\n  {\"id\":\"1\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n  {\"id\":\"2\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n  {\"id\":\"3\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n  {\"id\":\"4\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n  {\"id\":\"5\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n  {\"id\":\"6\",\"Map\":\"blank\",\"code\":\"111\",\"Name\":\"4\",\"Price_Group\":\"545\",\"Phone\":\"878787458\",\"Email\":\"test@123.com\",\"Address\":\"fortune ambience\"},\n]\n\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListWareHouses(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n   \n  const navigate = useNavigate();\n\n\n\n  const navigatetoedit= (index) => {\n    \n    navigate(`/Settings/WareHouses/EditWareHouses/${index}`);\n  };\n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      <TableCell align=\"left\">{\"Map\"}</TableCell>\n\n                      <TableCell align=\"left\">{\"code\"}</TableCell>\n                      <TableCell align=\"left\">{\"name\"}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell>\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n                   \n\n\n                {\n                  warehouse.map((item,index)=>{\n                    return(\n                      <TableRow>\n                  <TableCell >\n                    <Checkbox/>\n                  </TableCell>\n                  <TableCell>\n                    {item.Map}\n                  </TableCell>\n                  <TableCell>\n                    {item.code}\n                  </TableCell>\n                  <TableCell>\n                    {item.Name}\n                  </TableCell>\n                  <TableCell>\n                  {item.Price_Group}\n                  </TableCell>\n                  <TableCell>\n                  {item.Phone}\n                  </TableCell>\n                  <TableCell>\n                  {item.Email}\n                  </TableCell>\n                  <TableCell>\n                  {item.Address}\n                  </TableCell>\n                  \n                  \n                  <TableCell>\n                    <Delete onClick={()=>showtoast(item.id)}/>\n                    <Edit onClick={()=>navigatetoedit(item.id)}/>\n                  </TableCell>\n                 </TableRow>\n\n\n                    )\n                  })\n                }\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={12} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListWareHouses;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListTaxRates.js",["3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\nimport Label from '../material-kit/tables/Label';\nimport Scrollbar from '../material-kit/tables/Scrollbar';\nimport USERLIST from '../material-kit/tables/User';\nimport SearchNotFound from '../material-kit/tables/SearchNotFound';\nimport UserListHead from '../material-kit/tables/UserListHead';\nimport UserListToolbar from '../material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n  { id: 'Code', label: 'Code', alignRight: false },\n  { id: 'Tax Rate', label: 'Tax Rate', alignRight: false },\n  { id: 'Type', label: 'Type', alignRight: false },\n\n  { id: 'Actions', label: 'Actions', alignRight: false },\n\n\n\n];\n\n// ----------------------------------------------------------------------\n\n   let taxrate =[\n    {\"id\":\"1\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n    {\"id\":\"2\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n    {\"id\":\"3\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n    {\"id\":\"4\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n    {\"id\":\"5\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n    {\"id\":\"6\",\"Name\":\"GST\",\"code\":\"CGST\",\"Tax_Rate\":\"19%\",\"Type\":\"INR\"},\n   ]\n\n\n   \n   const showtoast =(index)=>{\n    toast.success(`Delete Successfully! no = ${index}`, {\n      position: toast.POSITION.TOP_CENTER\n  });\n  }\n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListTaxRates(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigatetoedit= (index) => {\n\n  navigate(`/Settings/TaxRates/EditTaxRates/${index}`);\n};\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n      <TableContainer>\n        <Table>\n          <UserListHead\n            order={order}\n            orderBy={orderBy}\n            headLabel={TABLE_HEAD}\n            rowCount={data.length}\n            numSelected={selected.length}\n            onRequestSort={handleRequestSort}\n            onSelectAllClick={handleSelectAllClick}\n          />\n          <TableBody>\n            {filteredUsers\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                const {\n                  id,\n                  name,\n                  unit,\n                  cost,\n                  price,\n                  image,\n                  code,\n                  brand,\n                  quantity,\n                  alert_quantity,\n                  category_id,\n                  isVerified,\n                } = row;\n                const isItemSelected = selected.indexOf(name) !== -1;\n\n                return (\n                  <TableRow\n                  // hover\n                  // key={id}\n                  // tabIndex={-1}\n                  // role=\"checkbox\"\n                  // selected={isItemSelected}\n                  // aria-checked={isItemSelected}\n                  >\n                    {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                    {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                    {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                    {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                    {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                    {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                    <TableCell align=\"right\">\n                      <UserMoreMenu />\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          {isUserNotFound && (\n            <TableBody>\n   \n\n   {\n    taxrate.map((item,index)=>{\n      return(\n           <TableRow>\n            <TableCell>\n            <Checkbox/>\n            </TableCell>\n            <TableCell>\n              {item.Name}\n            </TableCell>\n            <TableCell>\n              {item.code}\n            </TableCell>\n            <TableCell>\n              {item.Tax_Rate}\n            </TableCell>\n            <TableCell>\n              {item.Type}\n            </TableCell>\n            <TableCell>\n            <Edit onClick ={()=>navigatetoedit(item.id)} />\n                      <Delete  onClick={()=>showtoast(item.id)}/>\n            </TableCell>\n           </TableRow>\n      )\n    })\n   }\n            \n\n\n\n\n\n\n  <TableRow>\n                <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                  <SearchNotFound searchQuery={filterName} />\n                </TableCell>\n              </TableRow>\n\n\n            </TableBody>\n          )}\n        </Table>\n      </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListTaxRates;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCurrencies.js",["3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n  Currency_Name: '',\n  Symbol: '',\n  Exchange_Rate: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Currency_Code: Yup.string()\n    .min(3, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n        \n   Currency_Name: Yup.string()\n    .min(3, 'Currency Name must be 3 character length')\n    .required('Currency Name per line is required!'),\n\n    Symbol: Yup.string()\n   \n    .required('Symbol per line is required!'),\n\n    Exchange_Rate: Yup.string()\n    .required('Exchange Rate per line is required!'),\n\n\n});\n\n\n\n\n\n\n\nconst EditCurrencies = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Currencies' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Currency_Code',\n                      label: 'Currency Code',\n                      onBlur: handleBlur,\n                      value: values.Currency_Code,\n                      onChange: handleChange,\n                      helperText: touched.Currency_Code && errors.Currency_Code,\n                      error: Boolean(errors.Currency_Code && touched.Currency_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Currency_Name',\n                      label: 'Currency Name',\n                      onBlur: handleBlur,\n                      value: values.start_Date,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Currency_Name && errors.start_Date,\n                      error: Boolean(errors.Currency_Name && touched.start_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Symbol',\n                      label: 'Symbol',\n                      value: values.Symbol,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Symbol && errors.Symbol,\n                      error: Boolean(errors.Symbol && touched.Symbol),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Exchange_Rate',\n                      label: 'Exchange Rate',\n                      onBlur: handleBlur,\n                      value: values.Exchange_Rate,\n                      onChange: handleChange,\n                      helperText: touched.Exchange_Rate && errors.Exchange_Rate,\n                      error: Boolean(errors.Exchange_Rate && touched.Exchange_Rate),\n                    }}\n                  />\n                </Grid>\n              \n           \n                     \n          \n          \n              </Grid>\n\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Currencies\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditCurrencies;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPromos.js",["3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\n\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  start_Date: '',\n  End_Date: '',\n  Produc_to_buy: '',\n  Product_to_get: '',\n  Description: '',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n    start_Date: Yup.date(),\n    End_Date: Yup.date().min(\n        Yup.ref('start_Date'),\n        \"End date can't be before Start date\"\n      ),\n     Produc_to_buy: Yup.string()\n    .min(6, 'Produc_to_buy must be 6 character length')\n    .required('Produc_to_buy per line is required!'),\n\n    Product_to_get: Yup.string()\n    .min(6, 'Product_to_get must be 6 character length')\n    \n    .required('Product_to_get per line is required!'),\n\n    Description: Yup.string(),\n});\n\nconst EditPromos = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Promos' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'start_Date',\n                      label: 'start Date',\n                      onBlur: handleBlur,\n                      value: values.start_Date,\n                    \n                      onChange: handleChange,\n                      helperText: touched.start_Date && errors.start_Date,\n                      error: Boolean(errors.start_Date && touched.start_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'End_Date',\n                      label: 'End Date',\n                      value: values.End_Date,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.End_Date && errors.End_Date,\n                      error: Boolean(errors.End_Date && touched.End_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Produc_to_buy',\n                      label: 'Product to buy',\n                      onBlur: handleBlur,\n                      value: values.Produc_to_buy,\n                      onChange: handleChange,\n                      helperText: touched.Produc_to_buy && errors.Produc_to_buy,\n                      error: Boolean(errors.Produc_to_buy && touched.Produc_to_buy),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Product_to_get',\n                      label: 'Product to get',\n                      onBlur: handleBlur,\n                      value: values.Product_to_get,\n                      onChange: handleChange,\n                      helperText: touched.Product_to_get && errors.Product_to_get,\n                      error: Boolean(errors.Product_to_get && touched.Product_to_get),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                <SimpleFormNew\n               \n           \n                     props={{\n                      type: 'text',\n                      multiline:true,\n                      rows:4,\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                \n                  /> \n                        \n               \n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Promos\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditPromos;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditBrands.js",["3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize, Typography } from '@mui/material';\nimport { min } from 'lodash';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Code: '',\n  Name: '',\n  Slug: '',\n  Description:'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Code: Yup.string()\n  \n    .required('Code is required!'),\n\n  Name: Yup.string()\n  \n    .required('Name per line is required!'),\n\n    Slug: Yup.string()\n    .required('Slug per line is required!'),\n\n    Description: Yup.string()\n    .required('Name per line is required!'),\n});\n\nconst EditBrands = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Brand' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Code',\n                      label: 'Code',\n                      onBlur: handleBlur,\n                      value: values.Code,\n                      onChange: handleChange,\n                      helperText: touched.Code && errors.Code,\n                      error: Boolean(errors.Code && touched.Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Slug',\n                      label: 'Slug',\n                      value: values.Slug,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  {/* <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category Image',\n                      label: 'Category_Image',\n                      onBlur: handleBlur,\n                      value: values.Category_Image,\n                      onChange: handleChange,\n                      helperText: touched.Category_Image && errors.Category_Image,\n                      error: Boolean(errors.Category_Image && touched.Category_Image),\n                    }}\n                    \n                  />  */}\n                    <Singleimage\n                    \n                        />\n\n                     <Typography className={classes.textnew2}>Image</Typography>\n                </Grid>\n                \n    \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Brand\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditBrands;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCategories.js",["3565","3566","3567","3568","3569","3570","3571","3572","3573","3574"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport { Typography } from '@mui/material';\nimport Fileattachment from '../material-kit/uploadimage/Fileattachment';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Category_Code: '',\n  Category_Name: '',\n  Slug: '',\n  Description: '',\n\n \n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Category_Code: Yup.string()\n \n    .required('Category Code is required!'),\n\n    Category_Name: Yup.string()\n   \n    .required('Category Name is required!'),\n\n \n    \n   \n\n    Description: Yup.string()\n    .min(6, 'Description must be 6 character length')\n    .required('Description per line is required!'),\n\n \n\n});\n\nconst EditCategories = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Categories' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Code',\n                      label: 'Category Code',\n                      onBlur: handleBlur,\n                      value: values.Category_Code,\n                      onChange: handleChange,\n                      helperText: touched.Category_Code && errors.Category_Code,\n                      error: Boolean(errors.Category_Code && touched.Category_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Name',\n                      label: 'Category Name',\n                    \n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                   \n                      onChange: handleChange,\n                      helperText: touched.Category_Name && errors.Category_Name,\n                      error: Boolean(errors.Category_Name && touched.Category_Name),\n                    }}\n                  />\n                </Grid>\n              \n              \n              \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Slug',\n                      // label: 'Slug',\n                    \n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                      // Value:\"\",\n                      onChange: handleChange,\n                      helperText: touched.Slug && errors.Slug,\n                      error: Boolean(errors.Slug && touched.Slug),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                  /> \n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <Fileattachment\n                    props={{\n                      label: '  Category Image',\n                    }}\n                  />\n                </Grid>\n                     \n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                      'Bradley Wilkerson',\n                         'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                         'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Parent_Category',\n                      label: 'Parent Category',\n                      value: values.Parent_Category,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Parent Category'),\n                      helperText: touched.Parent_Category && errors.Parent_Category,\n                      error: Boolean(errors.Parent_Category && touched.Parent_Category),\n                    }}\n                  />\n                </Grid>\n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit category\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditCategories;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListPrint.js",["3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3596","3597","3598","3599","3600","3601","3602","3603","3604"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { Tab } from '@mui/material';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Title', label: 'Title', alignRight: false },\n  { id: 'Type', label: 'Type', alignRight: false },\n  { id: 'Profile', label: 'Profile', alignRight: false },\n  { id: 'Path', label: 'Path', alignRight: false },\n  { id: 'IP Address', label: 'IP Address', alignRight: false },\n  { id: 'Port', label: 'Port', alignRight: false },\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\nlet promo =[\n  {\"id\":\"1\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n  {\"id\":\"2\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n  {\"id\":\"3\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n  {\"id\":\"4\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n  {\"id\":\"5\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n  {\"id\":\"6\",\"Title\":\"printer\",\"Type\":\"123\",\"Profile\":\"profile\",\"Path\":\"123\",\"IP_Address\":\"123.232.325\",\"Port\":\"9100\"},\n \n]\n\n\nconst showtoast =()=>{\n  toast.success('Delete Successfully!', {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\n\n\n\n\n\nfunction ListPrint(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  const navigate = useNavigate();\n\n\n\nconst NavigatetoEdit= (index) => {\n  // 👇️ navigate to /EditCurrencies\n  navigate(`/Settings/EditPrinter/${index}`);\n};\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n             {\n              promo.map((item,index)=>{\n                return(\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox/>\n                    </TableCell>\n                    <TableCell>\n                      {item.Title}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Type}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Profile}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Path}\n\n                    </TableCell>\n                    \n                    <TableCell>\n                      {item.IP_Address}\n\n                    </TableCell>\n                    <TableCell>\n                      {item.Port}\n\n                    </TableCell>\n                    <TableCell>\n                      <Delete onClick ={showtoast}/>\n                      <Edit onClick ={()=>NavigatetoEdit(item.id)}/>\n                    </TableCell>\n                \n                    \n                    \n                    </TableRow>\n                )\n              })\n             }\n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={12} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n\n      />\n      <ToastContainer/>\n\n    </Container>\n\n\n    // </Page>\n  );\n}\nexport default ListPrint;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPrinter.js",["3605","3606","3607","3608","3609","3610","3611","3612"],"import React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Title: '',\n  Type: '',\n  port: '',\n  Charactersperline: '',\n  IPAddress: '',\n  Profile: '',\n\n  // AttachDocument: '',\n  // Note: ''\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Title: Yup.string()\n    .min(6, 'Title must be 6 character length')\n    .required('Title is required!'),\n\n  Type: Yup.string()\n    .min(6, 'Type must be 6 character length')\n    .required('Type is required!'),\n\n  port: Yup.string()\n    .max(4, 'port must be 4 character length')\n    .required('port is required!')\n    .matches(/^[0-9]+$/, \"Must be only digits\"),\n\n  Charactersperline: Yup.string()\n    .min(6, 'Charactersperline must be 6 character length')\n    .required('Characters per line is required!'),\n\n  IPAddress: Yup.string()\n    .min(6, 'IPAddress must be 6 character length')\n    .matches(/(^(\\d{1,3}\\.){3}(\\d{1,3})$)/, {\n      message: 'Invalid IP address',\n      excludeEmptyString: true\n    })\n    .required('IPAddress per line is required!'),\n\n  Profile: Yup.string()\n    .min(6, 'Profile must be 6 character length')\n    .required('Profile per line is required!'),\n});\n\nconst EditPrinter = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Printer' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Title',\n                      label: 'Title',\n                      onBlur: handleBlur,\n                      value: values.Title,\n                      onChange: handleChange,\n                      helperText: touched.Title && errors.Title,\n                      error: Boolean(errors.Title && touched.Title),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Profile',\n                      label: 'Profile',\n                      value: values.Profile,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Profile'),\n                      helperText: touched.Profile && errors.Profile,\n                      error: Boolean(errors.Profile && touched.Profile),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Charactersperline',\n                      label: 'Characters per line',\n                      onBlur: handleBlur,\n                      value: values.Charactersperline,\n                      onChange: handleChange,\n                      helperText: touched.Charactersperline && errors.Charactersperline,\n                      error: Boolean(errors.Charactersperline && touched.Charactersperline),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'IPAddress',\n                      label: 'IP Address',\n                      onBlur: handleBlur,\n                      value: values.IPAddress,\n                      onChange: handleChange,\n                      helperText: touched.IPAddress && errors.IPAddress,\n                      error: Boolean(errors.IPAddress && touched.IPAddress),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'port',\n                      label: 'Port',\n                      onBlur: handleBlur,\n                      value: values.port,\n                      onChange: handleChange,\n                      helperText: touched.port && errors.port,\n                      error: Boolean(errors.port && touched.port),\n                    }}\n                  /> \n                        {/* <span>Most printers are open on port <b>9100</b></span> */}\n               \n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                edit Printer\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditPrinter;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/ListCustomerGroups.js",["3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { toast, ToastContainer } from 'react-toastify';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n\n  { id: 'Percentage', label: 'Percentage', alignRight: false },\n  { id: 'Actions', label: 'Actions', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\n\n    let ConsumerGroups =[\n      {\"id\":\"1\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n      {\"id\":\"2\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n      {\"id\":\"3\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n      {\"id\":\"4\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n      {\"id\":\"5\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n      {\"id\":\"6\",\"Name\":\"arun\",\"Percentage\":\"99\"},\n    ]\n\n\n\n    const showtoast =()=>{\n      toast.success('Delete Successfully!', {\n        position: toast.POSITION.TOP_CENTER\n    });\n    }\n\n\n\n\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListCustomerGroups(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigatetoedit= (index) => {\n  // 👇️ navigate to /EditCustomerGroups\n  navigate(`/Settings/CustomerGroups/EditCustomerGroups/${index}`);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n               {\n                ConsumerGroups.map((item,index)=>{\n                  return(\n                    <TableRow>\n                  <TableCell >\n                    <Checkbox/>\n                  </TableCell>\n                 \n             \n                  <TableCell>\n                    {item.Name}\n                  </TableCell>\n                  <TableCell>\n                  {item.Percentage}\n                  </TableCell>\n                  \n                  \n                  <TableCell>\n                    <Delete onClick ={showtoast}/>\n                    <Edit onClick ={()=>navigatetoedit(item.id)}/>\n                  </TableCell>\n                 </TableRow>\n\n\n                  )\n                })\n               }\n\n              \n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListCustomerGroups;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditCustomerGroups.js",["3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n  Currency_Name: '',\n  Symbol: '',\n  Exchange_Rate: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Currency_Code: Yup.string()\n    .min(3, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n        \n   Currency_Name: Yup.string()\n    .min(3, 'Currency Name must be 3 character length')\n    .required('Currency Name per line is required!'),\n\n\n\n});\n\n\n\n\n\n\n\nconst EditCustomerGroups = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Customer Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Group Name',\n                      label: 'Group_Name',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Group_Name && errors.Group_Name,\n                      error: Boolean(errors.Group_Name && touched.Group_Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Group_Percentage',\n                      label: 'Group Percentage (without % sign)',\n                      value: values.Group_Percentage,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Group_Percentage && errors.Group_Percentage,\n                      error: Boolean(errors.Group_Percentage && touched.Group_Percentage),\n                    }}\n                  />\n                </Grid>\n              \n              \n           \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Customer Group\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditCustomerGroups;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditExpenseCategories.js",["3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Category_Code: '',\n  Category_Name :'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n    Category_Code: Yup.string()\n    \n    .required('Category Code is required!'),\n    Category_Name: Yup.string()\n    // .min(6, 'Category Name must be 3 character length')\n    .required('Category Name is required!'),\n\n\n\n\n\n});\n\n\n\n\n\n\n\nconst EditExpenseCategories = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'edit Expense Categories' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_code',\n                      label: 'Category code',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Category_code && errors.Category_code,\n                      error: Boolean(errors.Category_code && touched.Category_code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category_Name',\n                      label: 'Category Name',\n                      onBlur: handleBlur,\n                      value: values.Category_Name,\n                      onChange: handleChange,\n                      helperText: touched.Category_Name && errors.Category_Name,\n                      error: Boolean(errors.Category_Name && touched.Category_Name),\n                    }}\n                  />\n                </Grid>\n                </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Expense Catergory\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditExpenseCategories;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditUnits.js",["3664","3665","3666","3667","3668","3669","3670","3671","3672","3673"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Unit_Code: '',\n  Unit_Name: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Unit_Code: Yup.string()\n \n    .required('Unit Code is required!'),\n\n    Unit_Name: Yup.string()\n  \n    .required('Unit Name per line is required!'),\n\n  \n});\n\nconst EditUnits = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Unit' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Unit_Code',\n                      label: 'Unit Code',\n                      onBlur: handleBlur,\n                      value: values.Unit_Code,\n                      onChange: handleChange,\n                      helperText: touched.Unit_Code && errors.Unit_Code,\n                      error: Boolean(errors.Unit_Code && touched.Unit_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Unit_Name',\n                      label: 'Unit Name',\n                      onBlur: handleBlur,\n                      value: values.Unit_Name,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Unit_Name && errors.Unit_Name,\n                      error: Boolean(errors.Unit_Name && touched.Unit_Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Base_Unit',\n                      label: 'Base Unit',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Base_Unit'),\n                      helperText: touched.Base_Unit && errors.Base_Unit,\n                      error: Boolean(errors.Base_Unit && touched.Base_Unit),\n                    }}\n                  />\n                </Grid>\n                \n               \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit unit\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditUnits;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditTaxRates.js",["3674","3675","3676","3677","3678","3679","3680","3681","3682","3683"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  Code: '',\n  Rate: '',\n  Type: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(2, 'Name must be 2 character length')\n    .max(2, 'Name must be 10 character length')\n    .required('Name is required!'),\n\n    Code: Yup.string(),\n    \n    Rate: Yup.string()\n   \n    .required('Rate per line is required!'),\n\n    Type: Yup.string()\n   \n    .required('Type per line is required!'),\n\n\n});\n\nconst EditTaxRates = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Tax Rate' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew                    \n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Code',\n                      label: 'Code',\n                      onBlur: handleBlur,\n                      value: values.Code,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Code && errors.Code,\n                      error: Boolean(errors.Code && touched.Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'Rate',\n                      label: 'Rate',\n                      value: values.Rate,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.Rate && errors.Rate,\n                      error: Boolean(errors.Rate && touched.Rate),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n             \n              \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Tax Rate\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditTaxRates;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditVariants.js",["3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  \n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n\n   \n        \n    \n\n  \n  \n\n    \n});\n\nconst EditVariants = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Variant' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n               \n               \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Variant\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditVariants;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditWareHouses.js",["3695","3696","3697","3698","3699","3700","3701","3702"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize, Typography } from '@mui/material';\nimport { min } from 'lodash';\nimport Singleimage from '../material-kit/uploadimage/Singleimage';\nimport Label from '../material-kit/tables/Label';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n \n  code: '',\n  Name: '',\n  Price_Group: '',\n  Phone: '',\n  Email: '',\n  Address:'',\n  Warehouse_Map:'',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  code: Yup.string()\n    .min(6, 'code must be 6 character length')\n    .required('code is required!'),\n    Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n  \n    Phone: Yup.string()\n    .matches(\n      /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\n      \"Phone number is not valid\"\n    )\n    .max(10,\"Phone number is not valid\"),\n    \n\n\n    Email: Yup.string()\n          .email(),\n \n    \n});\n\nconst EditWareHouses = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit WareHouse' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n               \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'code',\n                      label: 'code',\n                      onBlur: handleBlur,\n                      value: values.code,\n                    \n                      onChange: handleChange,\n                      helperText: touched.code && errors.code,\n                      error: Boolean(errors.code && touched.code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Type',\n                      label: 'Type',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Type'),\n                      helperText: touched.Type && errors.Type,\n                      error: Boolean(errors.Type && touched.Type),\n                    }}\n                  />\n                </Grid>\n             \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Phone',\n                      label: 'Phone',\n                      onBlur: handleBlur,\n                      value: values.Phone,\n                      onChange: handleChange,\n                      helperText: touched.Phone && errors.Phone,\n                      error: Boolean(errors.Phone && touched.Phone),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'Email',\n                      name: 'Email',\n                      label: 'Email',\n                      onBlur: handleBlur,\n                      value: values.Email,\n                      onChange: handleChange,\n                      helperText: touched.Email && errors.Email,\n                      error: Boolean(errors.Email && touched.Email),\n                    }}\n                  />\n                </Grid>\n              \n                <Grid item xs={12}>\n                  <Label> Address</Label>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    data={note}\n                    onReady={(editor) => {\n                      console.log('Editor is ready to use!', editor);\n                    }}\n                    onChange={(event, editor) => {\n                      const data = editor.getData();\n                      setNote(data);\n                      console.log({ event, editor, data });\n                    }}\n                    onBlur={(event, editor) => {\n                      handleBlur();\n                      console.log('Blur.', editor);\n                    }}\n                    onFocus={(event, editor) => {\n                      console.log('Focus.', editor);\n                    }}\n                  />\n                  <div className=\"content-invalid-feedback\">\n                    {note === '' ? <span style={{ color: 'red' }}>Required</span> : null}\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  {/* <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Category Image',\n                      label: 'Category_Image',\n                      onBlur: handleBlur,\n                      value: values.Category_Image,\n                      onChange: handleChange,\n                      helperText: touched.Category_Image && errors.Category_Image,\n                      error: Boolean(errors.Category_Image && touched.Category_Image),\n                    }}\n                    \n                  />  */}\n                    <Singleimage\n                    \n                        />\n\n                     <Typography className={classes.textnew2}>Warehouse Map</Typography>\n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit WareHouse\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditWareHouses;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/EditPriceGroups.js",["3703","3704","3705","3706","3707","3708","3709","3710","3711","3712","3713"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Currency_Code: '',\n\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Group_Name: Yup.string()\n    .min(6, 'Currency Code must be 3 character length')\n    .required('Currency Code is required!'),\n\n\n\n\n});\n\n\n\n\n\n\n\nconst EditPriceGroups = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Price Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Group_Name *',\n                      label: 'Group Name',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Group_Name && errors.Group_Name,\n                      error: Boolean(errors.Group_Name && touched.Group_Name),\n                    }}\n                  />\n                </Grid>\n                </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit Price Group\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditPriceGroups;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/GroupProductPrices.js",["3714","3715","3716","3717","3718","3719","3720","3721","3722","3723","3724","3725","3726","3727","3728","3729","3730","3731","3732","3733","3734","3735","3736","3737","3738","3739","3740","3741","3742","3743","3744","3745","3746","3747","3748","3749","3750","3751"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, styled } from '@mui/system';\n\n\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  \n  Typography,\n  TableContainer,\n  TablePagination,\n  Input,\n  InputBase,\n  InputLabel,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../material-kit/tables/Label';\nimport Scrollbar from '../material-kit/tables/Scrollbar';\nimport USERLIST from '../material-kit/tables/User';\nimport SearchNotFound from '../material-kit/tables/SearchNotFound';\nimport UserListHead from '../material-kit/tables/UserListHead';\nimport UserListToolbar from '../material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Breadcrumb, SimpleCard } from 'app/components';\n// import { Box } from '@mui/system';\n\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'Product code', label: 'Product code', alignRight: false },\n\n  { id: 'Product Name', label: 'Product Name', alignRight: false },\n  { id: 'Price', label: 'Price', alignRight: false },\n  { id: 'Update', label: 'Update', alignRight: false },\n  \n  \n  \n];\n\n// ----------------------------------------------------------------------\n\n\nconst showtoast =(index)=>{\n  toast.success(`Delete Successfully! no = ${index}`, {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n   let grpproduct=[\n    {\"id\":\"1\",\"Product_code\":\"474865\",\"Product_Name\":\"i phone max pro 13\",\"Price\":\"brand123\"},\n    {\"id\":\"2\",\"Product_code\":\"474865\",\"Product_Name\":\"i phone max pro 13\",\"Price\":\"brand123\"},\n    {\"id\":\"3\",\"Product_code\":\"474865\",\"Product_Name\":\"i phone max pro 13\",\"Price\":\"brand123\"},\n    {\"id\":\"4\",\"Product_code\":\"474865\",\"Product_Name\":\"i phone max pro 13\",\"Price\":\"brand123\"},\n   \n   ]\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction GroupProductPrices(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Group Product Price' }]}\n        />\n      </Box>\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n\n\n                {\n                  grpproduct.map((item,index)=>{\n                    return(\n                      <TableRow>\n                  <TableCell >\n                    <Checkbox/>\n                  </TableCell>\n                  <TableCell>\n                    {item.Product_code}\n                  </TableCell>\n                  <TableCell>\n                    {item.Product_Name}\n                  </TableCell>\n                  <TableCell>\n                    <Input/>\n                  </TableCell>\n                 \n                  \n                  \n                  <TableCell>\n                    <Checkbox/>\n                  </TableCell>\n                 </TableRow>\n\n\n                    )\n                  })\n                }\n\n\n             \n\n\n\n\n            \n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n     \n    </Container>\n    // </Page>\n  );\n}\nexport default GroupProductPrices;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN1/src/app/views/Settings/PrintBarcode.js",["3752","3753","3754","3755","3756","3757","3758","3759","3760","3761"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/index.jsx",[],["3762","3763"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/serviceWorker.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/App.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/Store.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/contexts/SettingsContext.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/contexts/JWTAuthContext.js",["3764"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/routes.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/fake-db/index.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/index.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/axios.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/MatxLayout.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/fake-db/db/notification.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/SimpleCard.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Calendar/Session12Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/Session11Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/index.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/fake-db/mock.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Calendar/Calendar.jsx",["3765","3766"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/SMSLog.jsx",["3767","3768"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/SendSMS.jsx",["3769","3770","3771","3772","3773","3774","3775","3776","3777"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/SMSSettings.jsx",["3778","3779","3780","3781","3782","3783","3784"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/ListPages.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/AddPage.jsx",["3785","3786","3787","3788","3789","3790"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/Layout1/Layout1.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/SliderSettings.jsx",["3791","3792","3793","3794","3795","3796","3797","3798"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/FrontEnd/ShopSettings.jsx",["3799","3800","3801","3802","3803","3804"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Loadable.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/calenders/Calendars.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/auto-complete/AutocompleteComboNew.jsx",["3805","3806","3807","3808","3809","3810","3811","3812"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/Layout1/Layout1Topbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/Layout1/Layout1Sidenav.jsx",["3813","3814"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Footer.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/SimpleTable.jsx",["3815","3816","3817","3818","3819","3820","3821","3822","3823","3824","3825","3826","3827","3828","3829","3830","3831","3832","3833"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/SimpleFormNew.jsx",["3834","3835"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/SecondarySidebar/SecondarySidebar.jsx",["3836","3837"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/Label.jsx",["3838"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/hooks/useAuth.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/utils/constant.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/hooks/useSettings.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/uploadimage/Singleimage.jsx",["3839"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Typography.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLoading.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/calenders/events.jsx",["3840"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Sidenav.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/SecondarySidebar/SecondarySidebarToggle.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/navigations.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/SecondarySidebar/SecondarySidebarContent.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/SearchNotFound.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/UserListHead.jsx",["3841","3842"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/UserMoreMenu.jsx",["3843","3844","3845","3846","3847","3848","3849","3850","3851","3852","3853"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/UserListToolbar.jsx",["3854","3855","3856"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/User.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/Scrollbar.jsx",["3857","3858"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Brand.jsx",["3859","3860"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/ShoppingCart.jsx",["3861"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/NotificationBar/NotificationBar.jsx",["3862"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/mockImages.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/utils/utils.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/contexts/NotificationContext.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/themeColors.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/CustomizedDialog.jsx",["3863"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxCustomizer/MatxCustomizer.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/hooks/useNotification.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/actions/EcommerceActions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxCustomizer/BadgeSelected.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/fake-db/db/auth.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/fake-db/db/ecommerce.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxVerticalNav/MatxVerticalNav.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/MatxTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/EchartTheme.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxSuspense.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxProgressBar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxSearchBox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/reducers/RootReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLogo.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/ConfirmationDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/ChatHead.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/ChatAvatar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Chatbox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/Breadcrumb.jsx",["3864"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxSidenav/MatxSidenavContainer.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxSidenav/MatxSidenav.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxSidenav/MatxSidenavContent.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/icons/FacebookIcon.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/icons/GoogleIcon.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/MaterialRoutes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Notifications/Session8Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Return/Session6Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/Session10Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Session9Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/Session7Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Transfers/Session5Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/Session4Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Quotations/session3Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/settings.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/Session2Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Session1Routes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/sessions/SessionRoutes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/DashboardRoutes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/reducers/EcommerceReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/reducers/BrandReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/reducers/NavigationReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/reducers/NotificationReducer.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/sessions/NotFound.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/ChartsRoute.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/auth/AuthGuard.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxLayout/Layout1/Layout1Settings.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/auth/authRoles.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/tables/AppTable.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/AppForm.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/uploadimage/Appuploadimage.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/AppDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/auto-complete/AppAutoComplete.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Notifications/Addnotification.jsx",["3865","3866","3867"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Return/ListReturns.jsx",["3868"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/WarehouseStockChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Return/AddReturn.jsx",["3869","3870","3871","3872"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/OverviewChart.jsx",["3873","3874"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/RegisterReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/BestSellers.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/ProductQuantityAlerts.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/ProductsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Notifications/Notifications.jsx",["3875"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/StaffReport.jsx",["3876"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/AddSupplier.jsx",["3877","3878","3879","3880","3881","3882","3883","3884"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Backups.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Transfers/AddTransferCSV.jsx",["3885","3886","3887","3888"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/actions/NavigationAction.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/actions/BrandActions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/redux/actions/NotificationActions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/ListPurchases.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/ListExpenses.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Quotations/Addquotation.jsx",["3889","3890","3891","3892"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Quotations/Listquotation.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/AddPurchaseCSV.jsx",["3893","3894","3895","3896"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/AddPurchase.jsx",["3897","3898","3899","3900","3901","3902"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Purchases/AddExpense.jsx",["3903","3904","3905","3906"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/GiftCards.jsx",["3907"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Stockdetails.jsx",["3908","3909","3910"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/sessions/JwtRegister.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/buttons/AppButton.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/AppSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/icons/AppIcon.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/ck/Appeditor.jsx",["3911","3912","3913","3914","3915"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/AppCheckbox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/AppSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/menu/AppMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/expansion-panel/AppExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/AppRadio.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/AppSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/sessions/JwtLogin.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/sessions/ForgotPassword.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/Analytics.jsx",["3916","3917","3918","3919","3920","3921","3922","3923","3924","3925","3926"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/echarts/AppEchart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/Addfeild.jsx",["3927","3928","3929"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/uploadimage/Multipleimage.jsx",["3930"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/SimpleDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/auto-complete/BadgeAutocomplete.jsx",["3931"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/auto-complete/AutocompleteCombo.jsx",["3932","3933","3934","3935"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/uploadimage/Fileattachment.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/SimpleForm.jsx",["3936","3937"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/PieRechartComponent.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/Date.jsx",["3938","3939","3940","3941","3942","3943","3944","3945"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/SearchtableNew.jsx",["3946","3947","3948","3949"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/VerticalSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/InputSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/RangeSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/ContinuousSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/slider/DiscreteSlider.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/Countstack.jsx",["3950"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/SimpleRadio.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/StandaloneRadio.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/PlacingRadioLabel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/expansion-panel/SimpleExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/expansion-panel/DetailedExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/expansion-panel/ControlledAccordion.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/expansion-panel/CustomizedExpansionPanel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/menu/SimpleMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/UpgradeCard.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/TopSellingTable.jsx",["3951","3952","3953","3954","3955","3956"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/StatCards2.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/StatCards.jsx",["3957","3958","3959"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/Doughnut.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/RowCards.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/dashboard/shared/Campaigns.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/menu/CustomizedMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/menu/MaxHeightMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/menu/SelectedMenu.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/TransitionSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/StackedSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/SimpleSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/PositionedSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/LongLengthSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/echarts/LineChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/echarts/Doughnut.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/echarts/ComparisonChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/charts/echarts/AreaChart.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/DirectionSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/Searchtable.jsx",["3960","3961","3962","3963","3964"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/snackbar/CustomizedSnackbar.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/SearchwithAadtable.jsx",["3965","3966"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/Showhideformcheckbox.jsx",["3967"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/LabelledCheckbox.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/SimpleCheckbox.jsx",["3968","3969"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/checkbox/FormGroupCheckbox.jsx",["3970","3971","3972","3973","3974","3975","3976","3977","3978","3979","3980","3981","3982","3983","3984"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/SijmpleSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/PlacingSwitchLabel.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/FormGroupSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/LabelledSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/switch/CustomizedSwitch.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/buttons/Pdfdownloadbutton.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/ResponsiveDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/SimpleAlerts.jsx",["3985","3986"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/FullScreenDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/OptimalSizeDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/FormDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/DialogTransition.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/dialog/ConfirmationDialog.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/initThemes.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Editproduct.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Profile.jsx",["3987","3988","3989","3990","3991","3992","3993","3994","3995","3996","3997","3998","3999","4000","4001","4002","4003"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Conutstock.jsx",["4004","4005","4006","4007","4008","4009","4010","4011"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/Productdetail.jsx",["4012","4013"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/AddAdjustment.jsx",["4014","4015","4016","4017","4018","4019"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/StockCounts.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/ImportProducts.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/PrintBarcode.jsx",["4020","4021","4022","4023","4024"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/QuantityAdjustments.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/AddProduct.jsx",["4025","4026","4027","4028","4029","4030","4031","4032","4033","4034"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Product/ListProducts.jsx",["4035"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditWareHouses.js",["4036","4037","4038","4039","4040","4041","4042","4043"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/Deliveries.jsx",["4044"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/SalesList.jsx",["4045"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/Addsales.jsx",["4046","4047","4048","4049","4050","4051"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/Addsalecsv.jsx",["4052","4053","4054","4055"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Transfers/ListTransfers.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Transfers/AddTransfer.jsx",["4056","4057","4058","4059"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Sales/PosSales.jsx",["4060"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListWareHouses.js",["4061","4062","4063","4064","4065","4066","4067","4068","4069","4070","4071","4072","4073","4074","4075","4076","4077","4078","4079","4080","4081","4082"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/ListSuppliers.jsx",["4083"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/AddCustomer.jsx",["4084","4085","4086","4087","4088","4089","4090","4091"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/ListCustomers.jsx",["4092"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditTaxRates.js",["4093","4094","4095","4096","4097","4098","4099","4100","4101","4102"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/AddBiller.jsx",["4103","4104","4105","4106","4107","4108","4109","4110"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListTaxRates.js",["4111","4112","4113","4114","4115","4116","4117","4118","4119","4120","4121","4122","4123","4124","4125","4126","4127","4128","4129","4130","4131","4132","4133","4134","4135","4136","4137","4138","4139"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditVariants.js",["4140","4141","4142","4143","4144","4145","4146","4147","4148","4149","4150"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListVariants.js",["4151","4152","4153","4154","4155","4156","4157","4158","4159","4160","4161","4162","4163","4164","4165","4166","4167","4168","4169","4170","4171","4172","4173","4174","4175","4176","4177","4178","4179"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListBrands.js",["4180","4181","4182","4183","4184","4185","4186","4187","4188","4189","4190","4191","4192","4193","4194","4195","4196","4197","4198","4199","4200","4201","4202","4203","4204","4205","4206","4207","4208"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditBrands.js",["4209","4210","4211","4212","4213","4214","4215","4216","4217","4218","4219"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/ListBillers.jsx",["4220"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditUnits.js",["4221","4222","4223","4224","4225","4226","4227","4228","4229","4230"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Unit_Code: '',\n  Unit_Name: '',\n \n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Unit_Code: Yup.string()\n \n    .required('Unit Code is required!'),\n\n    Unit_Name: Yup.string()\n  \n    .required('Unit Name is required!'),\n\n  \n});\n\nconst EditUnits = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Edit Unit' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Unit_Code',\n                      label: 'Unit Code',\n                      onBlur: handleBlur,\n                      value: values.Unit_Code,\n                      onChange: handleChange,\n                      helperText: touched.Unit_Code && errors.Unit_Code,\n                      error: Boolean(errors.Unit_Code && touched.Unit_Code),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'Unit_Name',\n                      label: 'Unit Name',\n                      onBlur: handleBlur,\n                      value: values.Unit_Name,\n                    \n                      onChange: handleChange,\n                      helperText: touched.Unit_Name && errors.Unit_Name,\n                      error: Boolean(errors.Unit_Name && touched.Unit_Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <AutocompleteComboNew\n                    props={{\n                      names: [\n                        'Oliver Hansen',\n                        'Van Henry',\n                        'April Tucker',\n                        'Ralph Hubbard',\n                        'Omar Alexander',\n                        'Carlos Abbott',\n                        'Miriam Wagner',\n                        'Bradley Wilkerson',\n                        'Virginia Andrews',\n                        'Kelly Snyder',\n                      ],\n                      name: 'Base_Unit',\n                      label: 'Base Unit',\n                      value: values.Type,\n                      onBlur: handleBlur,\n                      onChange: handleChange('Base_Unit'),\n                      helperText: touched.Base_Unit && errors.Base_Unit,\n                      error: Boolean(errors.Base_Unit && touched.Base_Unit),\n                    }}\n                  />\n                </Grid>\n                \n               \n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Edit unit\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default EditUnits;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditExpenseCategories.js",["4231","4232","4233","4234","4235","4236","4237","4238","4239","4240","4241"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListUnits.js",["4242","4243","4244","4245","4246","4247","4248","4249","4250","4251","4252","4253","4254","4255","4256","4257","4258","4259","4260","4261","4262","4263","4264","4265","4266","4267","4268","4269","4270"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListExpenseCategories.js",["4271","4272","4273","4274","4275","4276","4277","4278","4279","4280","4281","4282","4283","4284","4285","4286","4287","4288","4289","4290","4291","4292","4293","4294","4295","4296","4297","4298","4299","4300"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/ListUsers.jsx",["4301"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/People/AddUser.jsx",["4302","4303","4304","4305","4306","4307"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/GroupPermissions.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EmailTemplates.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddWareHouses.jsx",["4308","4309","4310","4311","4312","4313","4314","4315"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Warehouses.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddTaxRates.jsx",["4316","4317","4318","4319","4320","4321","4322","4323","4324","4325"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/TaxRates.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddVariants.jsx",["4326","4327","4328","4329","4330","4331","4332","4333","4334","4335","4336"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Variants.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddBrands.jsx",["4337","4338","4339","4340","4341","4342","4343","4344","4345","4346","4347"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Brands.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddUnits.jsx",["4348","4349","4350","4351","4352","4353","4354","4355","4356","4357"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Units.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddExpenseCategories.jsx",["4358","4359","4360","4361","4362","4363","4364","4365","4366","4367","4368"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ExpenseCategories.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/themeOptions.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/buttons/DDbutton.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/buttons/Dbutton.jsx",["4369","4370","4371","4372","4373"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/auto-complete/AutocompleteComboWithIdValue.jsx",["4374","4375","4376","4377","4378","4379","4380","4381"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/forms/SimpleForms.jsx",["4382","4383"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/radio/SimpleRadioNew.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/hooks/useBrand.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/components/MatxTheme/components.js",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/PrintBarcode.js",["4384","4385","4386","4387","4388","4389","4390","4391","4392","4393"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddCategories.js",["4394","4395","4396","4397","4398","4399","4400","4401","4402","4403"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditCategories.js",["4404","4405","4406","4407","4408","4409","4410","4411","4412","4413"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListCategories.js",["4414","4415","4416","4417","4418","4419","4420","4421","4422","4423","4424","4425","4426","4427","4428","4429","4430","4431","4432","4433","4434","4435","4436","4437","4438","4439","4440","4441"],"import React, { useRef, useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { toast , ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// material\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n// components\n// import Page from '../components/Page';\n import Label from '../../views/material-kit/tables/Label';\nimport Scrollbar from '../../views/material-kit/tables/Scrollbar';\nimport USERLIST from '../../views/material-kit/tables/User';\nimport SearchNotFound from '../../views/material-kit/tables/SearchNotFound';\nimport UserListHead from '../../views/material-kit/tables/UserListHead';\nimport UserListToolbar from '../../views/material-kit/tables/UserListToolbar';\nimport UserMoreMenu from '../../views/material-kit/tables/UserMoreMenu';\nimport { Delete, Edit, Print } from '@material-ui/icons';\n//\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'image', label: 'Image', alignRight: false },\n  { id: 'Catgory code', label: 'Catgory code', alignRight: false },\n  { id: 'Catgory Name', label: 'Catgory Name', alignRight: false },\n  { id: 'Slug', label: 'Slug', alignRight: false },\n  { id: 'Parent Category', label: 'Parent Category', alignRight: false },\n  { id: 'Action', label: 'Action', alignRight: false },\n  \n];\n\n// ----------------------------------------------------------------------\n\n\n\n\n\n\nconst showtoast =()=>{\n  toast.success('Delete Successfully!', {\n    position: toast.POSITION.TOP_CENTER\n});\n}\n\n\n\n\n\n\n\n\n\n\n\n\n  let category =[\n    {\"id\":\"1\",\"Image\":\"blank\",\"Catgory_Code\":\"1122\",\"Category_Name\":\"oneplus\",\"slug\":\"oneplus\",\"Parent_Category\":\"mobile\"},\n    {\"id\":\"2\",\"Image\":\"blank\",\"Catgory_Code\":\"1122\",\"Category_Name\":\"oneplus\",\"slug\":\"oneplus\",\"Parent_Category\":\"mobile\"},\n    {\"id\":\"3\",\"Image\":\"blank\",\"Catgory_Code\":\"1122\",\"Category_Name\":\"oneplus\",\"slug\":\"oneplus\",\"Parent_Category\":\"mobile\"},\n    {\"id\":\"4\",\"Image\":\"blank\",\"Catgory_Code\":\"1122\",\"Category_Name\":\"oneplus\",\"slug\":\"oneplus\",\"Parent_Category\":\"mobile\"},\n    {\"id\":\"5\",\"Image\":\"blank\",\"Catgory_Code\":\"1122\",\"Category_Name\":\"oneplus\",\"slug\":\"oneplus\",\"Parent_Category\":\"mobile\"},\n    {\"id\":\"6\",\"Image\":\"blank\",\"Catgory_Code\":\"1122\",\"Category_Name\":\"oneplus\",\"slug\":\"oneplus\",\"Parent_Category\":\"mobile\"},\n  ]\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction ListCategories(props) {\n  // console.log(props.props.productlist);\n  const [data, setdata] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const response = axios.post('http://192.168.29.199:3000/api/public/Liststockproduct');\n    // console.log(response);\n    // setPosts(response);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://143.205.125.69:3000/api/public/Liststockproduct', requestOptions)\n      .then((response) => response.json())\n      .then((data) => setdata(data.data.ListstockproductResponce));\n  }, []);\n  //\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const filteredUsers = applySortFilter(data, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n\n\n\n  const navigate = useNavigate();\n\n\n\nconst navigatetoedit= (index) => {\n  \n  navigate(`/Settings/Categories/EditCategories/${index}`);\n};\n\n\n\n\nconst navigatetoprint= (index) => {\n\n  navigate(`/Settings/Categories/PrintBarcode/${index}`);\n};\n\n\n\n\n\n\n\n\n\n\n  return (\n    // <Page title=\"User | Minimal-UI\">\n    <Container>\n      {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            User\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            New User\n          </Button>\n        </Stack> */}\n\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      {/* <Scrollbar> */}\n        <TableContainer>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={data.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    unit,\n                    cost,\n                    price,\n                    image,\n                    code,\n                    brand,\n                    quantity,\n                    alert_quantity,\n                    category_id,\n                    isVerified,\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n\n                  return (\n                    <TableRow\n                    // hover\n                    // key={id}\n                    // tabIndex={-1}\n                    // role=\"checkbox\"\n                    // selected={isItemSelected}\n                    // aria-checked={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, name)}\n                        />\n                      </TableCell> */}\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={name} src={image} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {name}\n                          </Typography>\n                        </Stack>\n                      </TableCell> */}\n                      {/* <TableCell align=\"left\">{image}</TableCell>\n\n                      <TableCell align=\"left\">{code}</TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{brand}</TableCell>\n                      <TableCell align=\"left\">{category_id}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{quantity}</TableCell>\n                      <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{alert_quantity}</TableCell> */}\n                      {/* <TableCell align=\"left\">{Actions}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">{unit}</TableCell>\n                      <TableCell align=\"left\">{price}</TableCell>\n                      <TableCell align=\"left\">{cost}</TableCell>\n                      <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell> */}\n\n                      {/* <TableCell align=\"left\">\n                        <Label\n                          variant=\"ghost\"\n                          color={(status === 'banned' && 'error') || 'success'}\n                        >\n                          {sentenceCase(status)}\n                        </Label>\n                      </TableCell> */}\n\n                      <TableCell align=\"right\">\n                        <UserMoreMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n                 \n                 {\n                  category.map((item,index)=>{\n                    return(\n                      <TableRow>\n                  <TableCell >\n                    <Checkbox/>\n                  </TableCell>\n                  <TableCell>\n                    {item.Image}\n                  </TableCell>\n                  <TableCell>\n                    {item.Catgory_Code}\n                  </TableCell>\n                  <TableCell>\n                    {item.Category_Name}\n                  </TableCell>\n                  <TableCell>\n                  {item.slug}\n                  </TableCell>\n                  <TableCell>\n                    {item.Parent_Category}\n                  </TableCell>\n                  \n                  <TableCell>\n                  <Print onClick={()=>navigatetoprint(item.id)}/>\n                    <Delete onClick={()=>showtoast(item.id)}/>\n                    <Edit onClick={()=>navigatetoedit(item.id)}/>\n               \n                  </TableCell>\n                 </TableRow>\n\n                    )\n                  })\n                 }\n\n                \n                <TableRow>\n\n                  \n                  <TableCell align=\"center\" colSpan={12} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n\n                  </TableCell>\n                </TableRow>\n\n                  \n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      {/* </Scrollbar> */}\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <ToastContainer/>\n    </Container>\n    // </Page>\n  );\n}\nexport default ListCategories;\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/GroupProductPrices.js",["4442","4443","4444","4445","4446","4447","4448","4449","4450","4451","4452","4453","4454","4455","4456","4457","4458","4459","4460","4461","4462","4463","4464","4465","4466","4467","4468","4469","4470","4471","4472","4473","4474","4475","4476","4477","4478","4479"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListPriceGroups.js",["4480","4481","4482","4483","4484","4485","4486","4487","4488","4489","4490","4491","4492","4493","4494","4495","4496","4497","4498","4499","4500","4501","4502","4503","4504","4505","4506","4507","4508"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditPriceGroups.js",["4509","4510","4511","4512","4513","4514","4515","4516","4517","4518","4519"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditCustomerGroups.js",["4520","4521","4522","4523","4524","4525","4526","4527","4528","4529","4530"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListCustomerGroups.js",["4531","4532","4533","4534","4535","4536","4537","4538","4539","4540","4541","4542","4543","4544","4545","4546","4547","4548","4549","4550","4551","4552","4553","4554","4555","4556","4557","4558","4559"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListCurrenies.js",["4560","4561","4562","4563","4564","4565","4566","4567","4568","4569","4570","4571","4572","4573","4574","4575","4576","4577","4578","4579","4580","4581","4582","4583","4584","4585","4586","4587","4588","4589"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddCustomerGroups.js",["4590","4591","4592","4593","4594","4595","4596","4597","4598","4599","4600"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddCurrencies.js",["4601","4602","4603","4604","4605","4606","4607","4608","4609","4610","4611"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditCurrencies.js",["4612","4613","4614","4615","4616","4617","4618","4619","4620","4621","4622"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditPrinter.js",["4623","4624","4625","4626","4627","4628","4629","4630"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListPrint.js",["4631","4632","4633","4634","4635","4636","4637","4638","4639","4640","4641","4642","4643","4644","4645","4646","4647","4648","4649","4650","4651","4652","4653","4654","4655","4656","4657","4658","4659","4660"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListPromos.js",["4661","4662","4663","4664","4665","4666","4667","4668","4669","4670","4671","4672","4673","4674","4675","4676","4677","4678","4679","4680","4681","4682","4683","4684","4685","4686","4687","4688","4689","4690"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/EditPromos.js",["4691","4692","4693","4694","4695","4696","4697","4698","4699","4700","4701"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Categories.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddPriceGroups.jsx",["4702","4703","4704","4705","4706","4707","4708","4709","4710","4711","4712"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Group_Name: '',\n\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Group_Name: Yup.string()\n    .min(3, 'Group Name must be 3 character length')\n    .required('Group Name is required!'),\n\n\n\n\n});\n\n\n\n\n\n\n\nconst AddPriceGroups = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Price Groups' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                \n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Group_Name *',\n                      label: 'Group Name',\n                      onBlur: handleBlur,\n                      value: values.Group_Name,\n                      onChange: handleChange,\n                      helperText: touched.Group_Name && errors.Group_Name,\n                      error: Boolean(errors.Group_Name && touched.Group_Name),\n                    }}\n                  />\n                </Grid>\n                </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Price Group\n              </LoadingButton>\n           \n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPriceGroups;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/PriceGroups.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/CustomerGroups.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Currencies.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ChangeLogo.jsx",["4713"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddPrinter.jsx",["4714","4715","4716","4717","4718","4719","4720","4721"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/ListPrinters.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/AddPromos.jsx",["4722","4723","4724","4725","4726","4727","4728","4729","4730","4731","4732"],"\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport AutocompleteComboNew from '../material-kit/auto-complete/AutocompleteComboNew';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Grid from '@mui/material/Grid';\nimport SimpleFormNew from '../material-kit/forms/SimpleFormNew';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { TextareaAutosize } from '@mui/material';\nimport { min } from 'lodash';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  btn2: {\n    marginTop: '10px',\n    padding: '7px 23px',\n    border: 'none',\n    fontSize: '15px',\n    color: '#fff',\n    background: '#303f9f',\n  },\n}));\n\n\n\nconst handleChange = (event) => {\n  console.log(event);\n};\n\n// inital login credentials\nconst initialValues = {\n  Name: '',\n  start_Date: '',\n  End_Date: '',\n  Produc_to_buy: '',\n  Product_to_get: '',\n  Description: '',\n\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  Name: Yup.string()\n    .min(6, 'Name must be 6 character length')\n    .required('Name is required!'),\n\n    start_Date: Yup.date(),\n    End_Date: Yup.date().min(\n        Yup.ref('start Date'),\n        \"End date can't be before Start date\"\n      ),\n     Produc_to_buy: Yup.string()\n    \n    .required('Product to buy per line is required!'),\n\n    Product_to_get: Yup.string()\n\n    \n    .required('Product to get per line is required!'),\n\n    Description: Yup.string(),\n});\n\nconst AddPromos = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState('Controlled');\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [note, setNote] = useState('');\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Add Promos' }]}\n        />\n      </Box>\n      <SimpleCard>\n        <Formik\n          onSubmit={handleFormSubmit}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Name',\n                      label: 'Name',\n                      onBlur: handleBlur,\n                      value: values.Name,\n                      onChange: handleChange,\n                      helperText: touched.Name && errors.Name,\n                      error: Boolean(errors.Name && touched.Name),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n\n                    props={{\n                     \n                      type: 'text',\n                      name: 'start_Date',\n                      label: 'start Date',\n                      onBlur: handleBlur,\n                      value: values.start_Date,\n                    \n                      onChange: handleChange,\n                      helperText: touched.start_Date && errors.start_Date,\n                      error: Boolean(errors.start_Date && touched.start_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      \n                      type: 'text',\n\n                      name: 'End_Date',\n                      label: 'End Date',\n                      value: values.End_Date,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      helperText: touched.End_Date && errors.End_Date,\n                      error: Boolean(errors.End_Date && touched.End_Date),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Produc_to_buy',\n                      label: 'Product to buy',\n                      onBlur: handleBlur,\n                      value: values.Produc_to_buy,\n                      onChange: handleChange,\n                      helperText: touched.Produc_to_buy && errors.Produc_to_buy,\n                      error: Boolean(errors.Produc_to_buy && touched.Produc_to_buy),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SimpleFormNew\n                    props={{\n                      type: 'text',\n                      name: 'Product_to_get',\n                      label: 'Product to get',\n                      onBlur: handleBlur,\n                      value: values.Product_to_get,\n                      onChange: handleChange,\n                      helperText: touched.Product_to_get && errors.Product_to_get,\n                      error: Boolean(errors.Product_to_get && touched.Product_to_get),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                <SimpleFormNew\n               \n           \n                     props={{\n                      type: 'text',\n                      multiline:true,\n                      rows:4,\n                      name: 'Description',\n                      label: 'Description',\n                      onBlur: handleBlur,\n                      value: values.Description,\n                      onChange: handleChange,\n                      helperText: touched.Description && errors.Description,\n                      error: Boolean(errors.Description && touched.Description),\n                    }}\n                \n                  /> \n                        \n               \n                </Grid>\n                     \n          \n          \n              </Grid>\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                loading={loading}\n                className={classes.btn2}\n              >\n                Add Promos\n              </LoadingButton>\n            </form>\n          )}\n        </Formik>\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AddPromos;\n\n","/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/POSSettings.jsx",["4733","4734","4735","4736","4737","4738","4739","4740","4741"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/SuppliersReport.jsx",["4742"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/CustomersReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/PurchasesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/ExpensesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/MonthlyPurchases.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/DailyPurchases.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/Promos.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Settings/SystemSettings.jsx",["4743","4744","4745","4746","4747","4748","4749","4750"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/ProfitLoss.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/PaymentsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/SalesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/DailySales.jsx",["4751"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/MonthlySales.jsx",["4752"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/TaxReport.jsx",["4753"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/CategoriesReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/BrandsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/Reports/AdjustmentsReport.jsx",[],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/views/material-kit/calenders/Years.jsx",["4754","4755","4756","4757","4758"],"/home/iss/Downloads/POS_ADMIN_2/POS_ADMIN_NEW/src/app/contexts/BrandContext.js",[],{"ruleId":"4759","replacedBy":"4760"},{"ruleId":"4761","replacedBy":"4762"},{"ruleId":"4763","severity":1,"message":"4764","line":11,"column":7,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4767","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4768","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4769","line":4,"column":22,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4770","line":8,"column":3,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4771","line":46,"column":10,"nodeType":"4765","messageId":"4766","endLine":46,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":46,"column":17,"nodeType":"4765","messageId":"4766","endLine":46,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":47,"column":11,"nodeType":"4765","messageId":"4766","endLine":47,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":48,"column":9,"nodeType":"4765","messageId":"4766","endLine":48,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":49,"column":19,"nodeType":"4765","messageId":"4766","endLine":49,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":50,"column":10,"nodeType":"4765","messageId":"4766","endLine":50,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":50,"column":16,"nodeType":"4765","messageId":"4766","endLine":50,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4771","line":62,"column":10,"nodeType":"4765","messageId":"4766","endLine":62,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":62,"column":17,"nodeType":"4765","messageId":"4766","endLine":62,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":63,"column":11,"nodeType":"4765","messageId":"4766","endLine":63,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":64,"column":9,"nodeType":"4765","messageId":"4766","endLine":64,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":65,"column":19,"nodeType":"4765","messageId":"4766","endLine":65,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":66,"column":10,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":66,"column":16,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4778","line":73,"column":10,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":75,"column":9,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4779","line":36,"column":7,"nodeType":"4765","messageId":"4766","endLine":36,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":76,"column":10,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":76,"column":17,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":77,"column":11,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":78,"column":9,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":79,"column":19,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":41,"column":7,"nodeType":"4765","messageId":"4766","endLine":41,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":100,"column":10,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":100,"column":17,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":101,"column":11,"nodeType":"4765","messageId":"4766","endLine":101,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":102,"column":9,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":103,"column":19,"nodeType":"4765","messageId":"4766","endLine":103,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":104,"column":10,"nodeType":"4765","messageId":"4766","endLine":104,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":104,"column":16,"nodeType":"4765","messageId":"4766","endLine":104,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":44,"column":7,"nodeType":"4765","messageId":"4766","endLine":44,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":173,"column":10,"nodeType":"4765","messageId":"4766","endLine":173,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":173,"column":17,"nodeType":"4765","messageId":"4766","endLine":173,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":174,"column":11,"nodeType":"4765","messageId":"4766","endLine":174,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":175,"column":9,"nodeType":"4765","messageId":"4766","endLine":175,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":176,"column":19,"nodeType":"4765","messageId":"4766","endLine":176,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4767","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4780","line":38,"column":9,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4781","line":39,"column":10,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4782","line":5,"column":10,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4769","line":5,"column":22,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4783","line":9,"column":8,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4784","line":12,"column":8,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4785","line":32,"column":7,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":9,"column":3,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":11,"column":3,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4794","line":13,"column":3,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":11},{"ruleId":"4763","severity":1,"message":"4795","line":18,"column":3,"nodeType":"4765","messageId":"4766","endLine":18,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":22,"column":8,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":25,"column":8,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4797","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4798","line":84,"column":10,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":84,"column":17,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":120,"column":9,"nodeType":"4765","messageId":"4766","endLine":120,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":197,"column":21,"nodeType":"4765","messageId":"4766","endLine":197,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4802","line":208,"column":21,"nodeType":"4765","messageId":"4766","endLine":208,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":210,"column":25,"nodeType":"4765","messageId":"4766","endLine":210,"endColumn":39},{"ruleId":"4804","severity":1,"message":"4805","line":26,"column":3,"nodeType":"4806","messageId":"4807","endLine":26,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4808","line":86,"column":9,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4809","line":3,"column":8,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4810","line":4,"column":8,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":30},{"ruleId":"4763","severity":1,"message":"4782","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4769","line":3,"column":22,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4785","line":7,"column":7,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4786","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4767","line":2,"column":18,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4811","line":14,"column":8,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4812","line":87,"column":7,"nodeType":"4765","messageId":"4766","endLine":87,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4813","line":100,"column":7,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4814","line":115,"column":7,"nodeType":"4765","messageId":"4766","endLine":115,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4815","line":121,"column":7,"nodeType":"4765","messageId":"4766","endLine":121,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4816","line":130,"column":10,"nodeType":"4765","messageId":"4766","endLine":130,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4817","line":130,"column":26,"nodeType":"4765","messageId":"4766","endLine":130,"endColumn":43},{"ruleId":"4763","severity":1,"message":"4818","line":133,"column":10,"nodeType":"4765","messageId":"4766","endLine":133,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4819","line":137,"column":9,"nodeType":"4765","messageId":"4766","endLine":137,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4820","line":144,"column":9,"nodeType":"4765","messageId":"4766","endLine":144,"endColumn":18},{"ruleId":"4821","severity":1,"message":"4822","line":277,"column":13,"nodeType":"4823","endLine":277,"endColumn":57},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4767","line":1,"column":18,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4824","line":9,"column":10,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4767","line":1,"column":18,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4825","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4826","line":48,"column":9,"nodeType":"4765","messageId":"4766","endLine":48,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4827","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":18},{"ruleId":"4821","severity":1,"message":"4822","line":31,"column":9,"nodeType":"4823","endLine":31,"endColumn":57},{"ruleId":"4763","severity":1,"message":"4828","line":117,"column":9,"nodeType":"4765","messageId":"4766","endLine":117,"endColumn":18},{"ruleId":"4829","severity":1,"message":"4830","line":3,"column":1,"nodeType":"4831","endLine":180,"endColumn":3},{"ruleId":"4763","severity":1,"message":"4828","line":83,"column":9,"nodeType":"4765","messageId":"4766","endLine":83,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4832","line":2,"column":18,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4833","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4834","line":3,"column":16,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4835","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4836","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4837","line":7,"column":8,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4838","line":9,"column":8,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4839","line":11,"column":7,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4840","line":30,"column":9,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4841","line":31,"column":10,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4779","line":41,"column":9,"nodeType":"4765","messageId":"4766","endLine":41,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4842","line":43,"column":9,"nodeType":"4765","messageId":"4766","endLine":43,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4791","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4843","line":6,"column":8,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4844","line":7,"column":8,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4845","line":8,"column":8,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4846","line":10,"column":8,"nodeType":"4765","messageId":"4766","endLine":10,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4847","line":12,"column":8,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4848","line":33,"column":7,"nodeType":"4765","messageId":"4766","endLine":33,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4849","line":40,"column":7,"nodeType":"4765","messageId":"4766","endLine":40,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4850","line":45,"column":7,"nodeType":"4765","messageId":"4766","endLine":45,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4851","line":113,"column":11,"nodeType":"4765","messageId":"4766","endLine":113,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4852","line":123,"column":9,"nodeType":"4765","messageId":"4766","endLine":123,"endColumn":27},{"ruleId":"4763","severity":1,"message":"4825","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4834","line":1,"column":15,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4782","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4769","line":2,"column":22,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4780","line":14,"column":11,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4767","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":25},{"ruleId":"4853","severity":1,"message":"4854","line":119,"column":19,"nodeType":"4823","endLine":119,"endColumn":83},{"ruleId":"4763","severity":1,"message":"4771","line":55,"column":10,"nodeType":"4765","messageId":"4766","endLine":55,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":56,"column":9,"nodeType":"4765","messageId":"4766","endLine":56,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4855","line":59,"column":9,"nodeType":"4765","messageId":"4766","endLine":59,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4769","line":3,"column":22,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4856","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4793","line":8,"column":10,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4857","line":12,"column":8,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4858","line":14,"column":8,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4859","line":25,"column":10,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4860","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4861","line":28,"column":8,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4832","line":30,"column":33,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":38},{"ruleId":"4763","severity":1,"message":"4779","line":102,"column":7,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4862","line":189,"column":9,"nodeType":"4765","messageId":"4766","endLine":189,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4773","line":192,"column":11,"nodeType":"4765","messageId":"4766","endLine":192,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":193,"column":9,"nodeType":"4765","messageId":"4766","endLine":193,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":194,"column":19,"nodeType":"4765","messageId":"4766","endLine":194,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":195,"column":10,"nodeType":"4765","messageId":"4766","endLine":195,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":195,"column":16,"nodeType":"4765","messageId":"4766","endLine":195,"endColumn":23},{"ruleId":"4853","severity":1,"message":"4854","line":251,"column":19,"nodeType":"4823","endLine":251,"endColumn":80},{"ruleId":"4763","severity":1,"message":"4779","line":46,"column":7,"nodeType":"4765","messageId":"4766","endLine":46,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":70,"column":10,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":70,"column":17,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":71,"column":11,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":72,"column":9,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":73,"column":19,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":74,"column":10,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":74,"column":16,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":68,"column":9,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4771","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":72,"column":17,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":73,"column":11,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":74,"column":9,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":75,"column":19,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4773","line":57,"column":11,"nodeType":"4765","messageId":"4766","endLine":57,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":58,"column":9,"nodeType":"4765","messageId":"4766","endLine":58,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":59,"column":19,"nodeType":"4765","messageId":"4766","endLine":59,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":60,"column":10,"nodeType":"4765","messageId":"4766","endLine":60,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":60,"column":16,"nodeType":"4765","messageId":"4766","endLine":60,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4863","line":2,"column":8,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":49,"column":7,"nodeType":"4765","messageId":"4766","endLine":49,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":100,"column":11,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":101,"column":9,"nodeType":"4765","messageId":"4766","endLine":101,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":102,"column":19,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4863","line":24,"column":8,"nodeType":"4765","messageId":"4766","endLine":24,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":162,"column":9,"nodeType":"4765","messageId":"4766","endLine":162,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4855","line":165,"column":9,"nodeType":"4765","messageId":"4766","endLine":165,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4864","line":166,"column":9,"nodeType":"4765","messageId":"4766","endLine":166,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4771","line":167,"column":10,"nodeType":"4765","messageId":"4766","endLine":167,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":167,"column":17,"nodeType":"4765","messageId":"4766","endLine":167,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":168,"column":11,"nodeType":"4765","messageId":"4766","endLine":168,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":169,"column":9,"nodeType":"4765","messageId":"4766","endLine":169,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":170,"column":19,"nodeType":"4765","messageId":"4766","endLine":170,"endColumn":29},{"ruleId":"4865","severity":1,"message":"4866","line":194,"column":6,"nodeType":"4867","endLine":194,"endColumn":8,"suggestions":"4868"},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":106,"column":7,"nodeType":"4765","messageId":"4766","endLine":106,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":112,"column":11,"nodeType":"4765","messageId":"4766","endLine":112,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":113,"column":9,"nodeType":"4765","messageId":"4766","endLine":113,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":114,"column":19,"nodeType":"4765","messageId":"4766","endLine":114,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4869","line":8,"column":8,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4870","line":11,"column":8,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4779","line":106,"column":7,"nodeType":"4765","messageId":"4766","endLine":106,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":112,"column":11,"nodeType":"4765","messageId":"4766","endLine":112,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":113,"column":9,"nodeType":"4765","messageId":"4766","endLine":113,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":114,"column":19,"nodeType":"4765","messageId":"4766","endLine":114,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":93,"column":7,"nodeType":"4765","messageId":"4766","endLine":93,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":99,"column":11,"nodeType":"4765","messageId":"4766","endLine":99,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":100,"column":9,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":101,"column":19,"nodeType":"4765","messageId":"4766","endLine":101,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":84,"column":7,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4871","line":89,"column":10,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4872","line":89,"column":16,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4773","line":91,"column":11,"nodeType":"4765","messageId":"4766","endLine":91,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":92,"column":9,"nodeType":"4765","messageId":"4766","endLine":92,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":93,"column":19,"nodeType":"4765","messageId":"4766","endLine":93,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":86,"column":7,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":93,"column":11,"nodeType":"4765","messageId":"4766","endLine":93,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":94,"column":9,"nodeType":"4765","messageId":"4766","endLine":94,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":95,"column":19,"nodeType":"4765","messageId":"4766","endLine":95,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":37,"column":7,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":68,"column":11,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":69,"column":9,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":70,"column":19,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4833","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4834","line":3,"column":16,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4832","line":2,"column":18,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4873","line":12,"column":8,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4874","line":14,"column":8,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4875","line":33,"column":7,"nodeType":"4765","messageId":"4766","endLine":33,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4793","line":4,"column":3,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4794","line":5,"column":3,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":11},{"ruleId":"4763","severity":1,"message":"4876","line":6,"column":3,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4833","line":7,"column":3,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4787","line":8,"column":3,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4877","line":9,"column":3,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":8},{"ruleId":"4763","severity":1,"message":"4878","line":10,"column":3,"nodeType":"4765","messageId":"4766","endLine":10,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4834","line":11,"column":3,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4792","line":2,"column":3,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4791","line":4,"column":3,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4879","line":7,"column":3,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":11},{"ruleId":"4763","severity":1,"message":"4836","line":8,"column":3,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4880","line":20,"column":7,"nodeType":"4765","messageId":"4766","endLine":20,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4848","line":29,"column":7,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4833","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4834","line":3,"column":16,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4881","line":10,"column":10,"nodeType":"4765","messageId":"4766","endLine":10,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4882","line":66,"column":10,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4883","line":66,"column":19,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4780","line":68,"column":9,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4779","line":69,"column":9,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4855","line":72,"column":9,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4864","line":73,"column":9,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4771","line":74,"column":10,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":74,"column":17,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":75,"column":11,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":76,"column":9,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4884","line":77,"column":10,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":77,"column":19,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":78,"column":16,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4825","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4873","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4783","line":15,"column":8,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4885","line":51,"column":10,"nodeType":"4765","messageId":"4766","endLine":51,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4886","line":53,"column":18,"nodeType":"4765","messageId":"4766","endLine":53,"endColumn":27},{"ruleId":"4763","severity":1,"message":"4887","line":79,"column":9,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":16},{"ruleId":"4888","severity":1,"message":"4889","line":103,"column":15,"nodeType":"4890","messageId":"4807","endLine":103,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4796","line":4,"column":8,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":17,"column":8,"nodeType":"4765","messageId":"4766","endLine":17,"endColumn":13},{"ruleId":"4888","severity":1,"message":"4889","line":76,"column":15,"nodeType":"4890","messageId":"4807","endLine":76,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4835","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4836","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4837","line":7,"column":8,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4838","line":9,"column":8,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4839","line":11,"column":7,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4840","line":30,"column":9,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4841","line":31,"column":10,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4779","line":41,"column":9,"nodeType":"4765","messageId":"4766","endLine":41,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4825","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4891","line":1,"column":23,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4787","line":1,"column":28,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4873","line":1,"column":34,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":44},{"ruleId":"4763","severity":1,"message":"4834","line":1,"column":46,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":52},{"ruleId":"4763","severity":1,"message":"4892","line":9,"column":7,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4835","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4839","line":9,"column":7,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4840","line":28,"column":9,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4841","line":29,"column":10,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4885","line":51,"column":10,"nodeType":"4765","messageId":"4766","endLine":51,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4886","line":53,"column":18,"nodeType":"4765","messageId":"4766","endLine":53,"endColumn":27},{"ruleId":"4763","severity":1,"message":"4887","line":79,"column":9,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":16},{"ruleId":"4888","severity":1,"message":"4889","line":103,"column":15,"nodeType":"4890","messageId":"4807","endLine":103,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4893","line":4,"column":8,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":21},{"ruleId":"4821","severity":1,"message":"4822","line":32,"column":13,"nodeType":"4823","endLine":35,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4894","line":1,"column":24,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4779","line":94,"column":7,"nodeType":"4765","messageId":"4766","endLine":94,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":100,"column":11,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":101,"column":9,"nodeType":"4765","messageId":"4766","endLine":101,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":102,"column":19,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":94,"column":7,"nodeType":"4765","messageId":"4766","endLine":94,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":100,"column":11,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":101,"column":9,"nodeType":"4765","messageId":"4766","endLine":101,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":102,"column":19,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":34,"column":7,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":123,"column":10,"nodeType":"4765","messageId":"4766","endLine":123,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":123,"column":17,"nodeType":"4765","messageId":"4766","endLine":123,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":124,"column":11,"nodeType":"4765","messageId":"4766","endLine":124,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":125,"column":9,"nodeType":"4765","messageId":"4766","endLine":125,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":126,"column":19,"nodeType":"4765","messageId":"4766","endLine":126,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":127,"column":10,"nodeType":"4765","messageId":"4766","endLine":127,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":127,"column":16,"nodeType":"4765","messageId":"4766","endLine":127,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":34,"column":7,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":133,"column":10,"nodeType":"4765","messageId":"4766","endLine":133,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":133,"column":17,"nodeType":"4765","messageId":"4766","endLine":133,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":134,"column":11,"nodeType":"4765","messageId":"4766","endLine":134,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":135,"column":9,"nodeType":"4765","messageId":"4766","endLine":135,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":136,"column":19,"nodeType":"4765","messageId":"4766","endLine":136,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":137,"column":10,"nodeType":"4765","messageId":"4766","endLine":137,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":137,"column":16,"nodeType":"4765","messageId":"4766","endLine":137,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":34,"column":7,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":133,"column":10,"nodeType":"4765","messageId":"4766","endLine":133,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":133,"column":17,"nodeType":"4765","messageId":"4766","endLine":133,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":134,"column":11,"nodeType":"4765","messageId":"4766","endLine":134,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":135,"column":9,"nodeType":"4765","messageId":"4766","endLine":135,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":136,"column":19,"nodeType":"4765","messageId":"4766","endLine":136,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":137,"column":10,"nodeType":"4765","messageId":"4766","endLine":137,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":137,"column":16,"nodeType":"4765","messageId":"4766","endLine":137,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":35,"column":7,"nodeType":"4765","messageId":"4766","endLine":35,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":102,"column":11,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":103,"column":9,"nodeType":"4765","messageId":"4766","endLine":103,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":104,"column":19,"nodeType":"4765","messageId":"4766","endLine":104,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":105,"column":10,"nodeType":"4765","messageId":"4766","endLine":105,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":105,"column":16,"nodeType":"4765","messageId":"4766","endLine":105,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4895","line":11,"column":8,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4896","line":13,"column":8,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4897","line":25,"column":7,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4796","line":4,"column":8,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":34,"column":7,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":85,"column":10,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":85,"column":17,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":86,"column":11,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":87,"column":9,"nodeType":"4765","messageId":"4766","endLine":87,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":88,"column":19,"nodeType":"4765","messageId":"4766","endLine":88,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":89,"column":10,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":89,"column":16,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4793","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4898","line":17,"column":10,"nodeType":"4765","messageId":"4766","endLine":17,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4899","line":18,"column":8,"nodeType":"4765","messageId":"4766","endLine":18,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4779","line":45,"column":7,"nodeType":"4765","messageId":"4766","endLine":45,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":226,"column":11,"nodeType":"4765","messageId":"4766","endLine":226,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":227,"column":9,"nodeType":"4765","messageId":"4766","endLine":227,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":228,"column":19,"nodeType":"4765","messageId":"4766","endLine":228,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":229,"column":10,"nodeType":"4765","messageId":"4766","endLine":229,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":229,"column":16,"nodeType":"4765","messageId":"4766","endLine":229,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":42,"column":7,"nodeType":"4765","messageId":"4766","endLine":42,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":355,"column":10,"nodeType":"4765","messageId":"4766","endLine":355,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":355,"column":17,"nodeType":"4765","messageId":"4766","endLine":355,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":356,"column":11,"nodeType":"4765","messageId":"4766","endLine":356,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":357,"column":9,"nodeType":"4765","messageId":"4766","endLine":357,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":358,"column":19,"nodeType":"4765","messageId":"4766","endLine":358,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":359,"column":10,"nodeType":"4765","messageId":"4766","endLine":359,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":359,"column":16,"nodeType":"4765","messageId":"4766","endLine":359,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":81,"column":10,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":81,"column":17,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":82,"column":11,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":83,"column":9,"nodeType":"4765","messageId":"4766","endLine":83,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":84,"column":19,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":85,"column":10,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":85,"column":16,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":75,"column":10,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":75,"column":17,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":76,"column":11,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":77,"column":9,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":78,"column":19,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":79,"column":10,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":79,"column":16,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":72,"column":17,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":73,"column":11,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":74,"column":9,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":75,"column":19,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":76,"column":10,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":76,"column":16,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":65,"column":10,"nodeType":"4765","messageId":"4766","endLine":65,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":65,"column":17,"nodeType":"4765","messageId":"4766","endLine":65,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":66,"column":11,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":67,"column":9,"nodeType":"4765","messageId":"4766","endLine":67,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":68,"column":19,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":69,"column":10,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":69,"column":16,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":39,"column":7,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":68,"column":10,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":68,"column":17,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":69,"column":11,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":70,"column":9,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":71,"column":19,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":72,"column":16,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":74,"column":10,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":74,"column":17,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":75,"column":11,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":76,"column":9,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":77,"column":19,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":78,"column":16,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":68,"column":10,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":68,"column":17,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":69,"column":11,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":70,"column":9,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":71,"column":19,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":72,"column":16,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":39,"column":7,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":71,"column":10,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":71,"column":17,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":72,"column":11,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":73,"column":9,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":74,"column":19,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":75,"column":10,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":75,"column":16,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4858","line":13,"column":8,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4795","line":14,"column":10,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4779","line":37,"column":7,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":78,"column":17,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":79,"column":11,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":80,"column":9,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":81,"column":19,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":82,"column":10,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":82,"column":16,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":42,"column":7,"nodeType":"4765","messageId":"4766","endLine":42,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":85,"column":10,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":85,"column":17,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":86,"column":11,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":87,"column":9,"nodeType":"4765","messageId":"4766","endLine":87,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":88,"column":19,"nodeType":"4765","messageId":"4766","endLine":88,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":21,"column":3,"nodeType":"4765","messageId":"4766","endLine":21,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":25,"column":8,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":28,"column":9,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":29,"column":8,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4798","line":116,"column":10,"nodeType":"4765","messageId":"4766","endLine":116,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":116,"column":17,"nodeType":"4765","messageId":"4766","endLine":116,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":152,"column":9,"nodeType":"4765","messageId":"4766","endLine":152,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":261,"column":21,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":262,"column":21,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":263,"column":21,"nodeType":"4765","messageId":"4766","endLine":263,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":264,"column":21,"nodeType":"4765","messageId":"4766","endLine":264,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":265,"column":21,"nodeType":"4765","messageId":"4766","endLine":265,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":266,"column":21,"nodeType":"4765","messageId":"4766","endLine":266,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":267,"column":21,"nodeType":"4765","messageId":"4766","endLine":267,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":268,"column":21,"nodeType":"4765","messageId":"4766","endLine":268,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":269,"column":21,"nodeType":"4765","messageId":"4766","endLine":269,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":271,"column":25,"nodeType":"4765","messageId":"4766","endLine":271,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":13,"column":3,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":22,"column":3,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":29,"column":9,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":31,"column":8,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":36,"column":24,"nodeType":"4765","messageId":"4766","endLine":36,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4914","line":37,"column":10,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4798","line":117,"column":10,"nodeType":"4765","messageId":"4766","endLine":117,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":117,"column":17,"nodeType":"4765","messageId":"4766","endLine":117,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":153,"column":9,"nodeType":"4765","messageId":"4766","endLine":153,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":247,"column":21,"nodeType":"4765","messageId":"4766","endLine":247,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":249,"column":21,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":250,"column":21,"nodeType":"4765","messageId":"4766","endLine":250,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":260,"column":25,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":40,"column":7,"nodeType":"4765","messageId":"4766","endLine":40,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":80,"column":10,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":80,"column":17,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":81,"column":11,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":82,"column":9,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":83,"column":19,"nodeType":"4765","messageId":"4766","endLine":83,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":84,"column":10,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":84,"column":16,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4915","line":8,"column":8,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4791","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":17,"column":3,"nodeType":"4765","messageId":"4766","endLine":17,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":23,"column":3,"nodeType":"4765","messageId":"4766","endLine":23,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":30,"column":9,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":31,"column":8,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":32,"column":8,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":37,"column":24,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":117,"column":10,"nodeType":"4765","messageId":"4766","endLine":117,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":117,"column":17,"nodeType":"4765","messageId":"4766","endLine":117,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":153,"column":9,"nodeType":"4765","messageId":"4766","endLine":153,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":245,"column":21,"nodeType":"4765","messageId":"4766","endLine":245,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":247,"column":21,"nodeType":"4765","messageId":"4766","endLine":247,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":248,"column":21,"nodeType":"4765","messageId":"4766","endLine":248,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":249,"column":21,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":250,"column":21,"nodeType":"4765","messageId":"4766","endLine":250,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":258,"column":25,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":13,"column":3,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":22,"column":3,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":29,"column":9,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":31,"column":8,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4916","line":36,"column":10,"nodeType":"4765","messageId":"4766","endLine":36,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4913","line":36,"column":34,"nodeType":"4765","messageId":"4766","endLine":36,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4798","line":110,"column":10,"nodeType":"4765","messageId":"4766","endLine":110,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":110,"column":17,"nodeType":"4765","messageId":"4766","endLine":110,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":146,"column":9,"nodeType":"4765","messageId":"4766","endLine":146,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":249,"column":21,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":262,"column":25,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":21,"column":3,"nodeType":"4765","messageId":"4766","endLine":21,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":25,"column":8,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":28,"column":8,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4903","line":29,"column":8,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":35,"column":24,"nodeType":"4765","messageId":"4766","endLine":35,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":110,"column":10,"nodeType":"4765","messageId":"4766","endLine":110,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":110,"column":17,"nodeType":"4765","messageId":"4766","endLine":110,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":146,"column":9,"nodeType":"4765","messageId":"4766","endLine":146,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":249,"column":19,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4904","line":251,"column":19,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4905","line":252,"column":19,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4906","line":253,"column":19,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4907","line":254,"column":19,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4908","line":255,"column":19,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4909","line":256,"column":19,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4910","line":257,"column":19,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":27},{"ruleId":"4763","severity":1,"message":"4911","line":258,"column":19,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":33},{"ruleId":"4763","severity":1,"message":"4912","line":259,"column":19,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":30},{"ruleId":"4763","severity":1,"message":"4802","line":260,"column":19,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4803","line":262,"column":23,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":37},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":17,"column":3,"nodeType":"4765","messageId":"4766","endLine":17,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":23,"column":3,"nodeType":"4765","messageId":"4766","endLine":23,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":30,"column":9,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":31,"column":8,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":32,"column":8,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":37,"column":24,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":121,"column":10,"nodeType":"4765","messageId":"4766","endLine":121,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":121,"column":17,"nodeType":"4765","messageId":"4766","endLine":121,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":157,"column":9,"nodeType":"4765","messageId":"4766","endLine":157,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":261,"column":21,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":262,"column":21,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":263,"column":21,"nodeType":"4765","messageId":"4766","endLine":263,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":264,"column":21,"nodeType":"4765","messageId":"4766","endLine":264,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":265,"column":21,"nodeType":"4765","messageId":"4766","endLine":265,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":266,"column":21,"nodeType":"4765","messageId":"4766","endLine":266,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":267,"column":21,"nodeType":"4765","messageId":"4766","endLine":267,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":268,"column":21,"nodeType":"4765","messageId":"4766","endLine":268,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":269,"column":21,"nodeType":"4765","messageId":"4766","endLine":269,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":271,"column":25,"nodeType":"4765","messageId":"4766","endLine":271,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":9,"column":3,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":11,"column":3,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":18,"column":3,"nodeType":"4765","messageId":"4766","endLine":18,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":22,"column":8,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":25,"column":9,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":32,"column":24,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":108,"column":10,"nodeType":"4765","messageId":"4766","endLine":108,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":108,"column":17,"nodeType":"4765","messageId":"4766","endLine":108,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":144,"column":9,"nodeType":"4765","messageId":"4766","endLine":144,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":241,"column":21,"nodeType":"4765","messageId":"4766","endLine":241,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":243,"column":21,"nodeType":"4765","messageId":"4766","endLine":243,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":244,"column":21,"nodeType":"4765","messageId":"4766","endLine":244,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":245,"column":21,"nodeType":"4765","messageId":"4766","endLine":245,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":246,"column":21,"nodeType":"4765","messageId":"4766","endLine":246,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":247,"column":21,"nodeType":"4765","messageId":"4766","endLine":247,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":248,"column":21,"nodeType":"4765","messageId":"4766","endLine":248,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":249,"column":21,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":250,"column":21,"nodeType":"4765","messageId":"4766","endLine":250,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":254,"column":25,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":21,"column":3,"nodeType":"4765","messageId":"4766","endLine":21,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":25,"column":8,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":28,"column":9,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":29,"column":8,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":35,"column":24,"nodeType":"4765","messageId":"4766","endLine":35,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":123,"column":10,"nodeType":"4765","messageId":"4766","endLine":123,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":123,"column":17,"nodeType":"4765","messageId":"4766","endLine":123,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":159,"column":9,"nodeType":"4765","messageId":"4766","endLine":159,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":261,"column":21,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":262,"column":21,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":263,"column":21,"nodeType":"4765","messageId":"4766","endLine":263,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":264,"column":21,"nodeType":"4765","messageId":"4766","endLine":264,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":266,"column":25,"nodeType":"4765","messageId":"4766","endLine":266,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":9,"column":3,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":11,"column":3,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":18,"column":3,"nodeType":"4765","messageId":"4766","endLine":18,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":22,"column":8,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":25,"column":9,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":32,"column":24,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":114,"column":10,"nodeType":"4765","messageId":"4766","endLine":114,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":114,"column":17,"nodeType":"4765","messageId":"4766","endLine":114,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":150,"column":9,"nodeType":"4765","messageId":"4766","endLine":150,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4907","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4802","line":265,"column":21,"nodeType":"4765","messageId":"4766","endLine":265,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":267,"column":25,"nodeType":"4765","messageId":"4766","endLine":267,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":21,"column":3,"nodeType":"4765","messageId":"4766","endLine":21,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":25,"column":8,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":28,"column":8,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4903","line":29,"column":8,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":35,"column":24,"nodeType":"4765","messageId":"4766","endLine":35,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":127,"column":10,"nodeType":"4765","messageId":"4766","endLine":127,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":127,"column":17,"nodeType":"4765","messageId":"4766","endLine":127,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":163,"column":9,"nodeType":"4765","messageId":"4766","endLine":163,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":256,"column":19,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4904","line":258,"column":19,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4905","line":259,"column":19,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4906","line":260,"column":19,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4907","line":261,"column":19,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4908","line":262,"column":19,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4909","line":263,"column":19,"nodeType":"4765","messageId":"4766","endLine":263,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4910","line":264,"column":19,"nodeType":"4765","messageId":"4766","endLine":264,"endColumn":27},{"ruleId":"4763","severity":1,"message":"4911","line":265,"column":19,"nodeType":"4765","messageId":"4766","endLine":265,"endColumn":33},{"ruleId":"4763","severity":1,"message":"4912","line":266,"column":19,"nodeType":"4765","messageId":"4766","endLine":266,"endColumn":30},{"ruleId":"4763","severity":1,"message":"4802","line":267,"column":19,"nodeType":"4765","messageId":"4766","endLine":267,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4803","line":269,"column":23,"nodeType":"4765","messageId":"4766","endLine":269,"endColumn":37},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":81,"column":10,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":81,"column":17,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":82,"column":11,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":83,"column":9,"nodeType":"4765","messageId":"4766","endLine":83,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":84,"column":19,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":85,"column":10,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":85,"column":16,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":40,"column":7,"nodeType":"4765","messageId":"4766","endLine":40,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":80,"column":10,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":80,"column":17,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":81,"column":11,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":82,"column":9,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":83,"column":19,"nodeType":"4765","messageId":"4766","endLine":83,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":84,"column":10,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":84,"column":16,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":39,"column":7,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":71,"column":10,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":71,"column":17,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":72,"column":11,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":73,"column":9,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":74,"column":19,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":75,"column":10,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":75,"column":16,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4858","line":13,"column":8,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4795","line":14,"column":10,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4779","line":37,"column":7,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":78,"column":17,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":79,"column":11,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":80,"column":9,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":81,"column":19,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":82,"column":10,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":82,"column":16,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":13,"column":3,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":22,"column":3,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":29,"column":9,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":31,"column":8,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":36,"column":24,"nodeType":"4765","messageId":"4766","endLine":36,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4914","line":37,"column":10,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4798","line":119,"column":10,"nodeType":"4765","messageId":"4766","endLine":119,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":119,"column":17,"nodeType":"4765","messageId":"4766","endLine":119,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":155,"column":9,"nodeType":"4765","messageId":"4766","endLine":155,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":249,"column":21,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":262,"column":25,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4779","line":34,"column":7,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":85,"column":10,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":85,"column":17,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":86,"column":11,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":87,"column":9,"nodeType":"4765","messageId":"4766","endLine":87,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":88,"column":19,"nodeType":"4765","messageId":"4766","endLine":88,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":89,"column":10,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":89,"column":16,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":9,"column":3,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":11,"column":3,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":18,"column":3,"nodeType":"4765","messageId":"4766","endLine":18,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":22,"column":8,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":25,"column":9,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":32,"column":24,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":111,"column":10,"nodeType":"4765","messageId":"4766","endLine":111,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":111,"column":17,"nodeType":"4765","messageId":"4766","endLine":111,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":147,"column":9,"nodeType":"4765","messageId":"4766","endLine":147,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":248,"column":21,"nodeType":"4765","messageId":"4766","endLine":248,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":250,"column":21,"nodeType":"4765","messageId":"4766","endLine":250,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":261,"column":25,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":75,"column":10,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":75,"column":17,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":76,"column":11,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":77,"column":9,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":78,"column":19,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":79,"column":10,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":79,"column":16,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":72,"column":17,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":73,"column":11,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":74,"column":9,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":75,"column":19,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":76,"column":10,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":76,"column":16,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":65,"column":10,"nodeType":"4765","messageId":"4766","endLine":65,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":65,"column":17,"nodeType":"4765","messageId":"4766","endLine":65,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":66,"column":11,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":67,"column":9,"nodeType":"4765","messageId":"4766","endLine":67,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":68,"column":19,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":69,"column":10,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":69,"column":16,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":74,"column":10,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":74,"column":17,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":75,"column":11,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":76,"column":9,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":77,"column":19,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":78,"column":16,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":39,"column":7,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":68,"column":10,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":68,"column":17,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":69,"column":11,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":70,"column":9,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":71,"column":19,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":72,"column":16,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":42,"column":7,"nodeType":"4765","messageId":"4766","endLine":42,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":85,"column":10,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":85,"column":17,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":86,"column":11,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":87,"column":9,"nodeType":"4765","messageId":"4766","endLine":87,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":88,"column":19,"nodeType":"4765","messageId":"4766","endLine":88,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":68,"column":10,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":68,"column":17,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":69,"column":11,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":70,"column":9,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":71,"column":19,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":72,"column":16,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4917","line":5,"column":10,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4789","line":9,"column":8,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":10,"column":18,"nodeType":"4765","messageId":"4766","endLine":10,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4918","line":10,"column":30,"nodeType":"4765","messageId":"4766","endLine":10,"endColumn":41},{"ruleId":"4763","severity":1,"message":"4791","line":13,"column":3,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":22,"column":3,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4919","line":26,"column":3,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4837","line":27,"column":3,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":29,"column":8,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":32,"column":9,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":33,"column":8,"nodeType":"4765","messageId":"4766","endLine":33,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":34,"column":8,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4920","line":39,"column":10,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4921","line":39,"column":18,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4913","line":39,"column":24,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4922","line":40,"column":18,"nodeType":"4765","messageId":"4766","endLine":40,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4769","line":42,"column":22,"nodeType":"4765","messageId":"4766","endLine":42,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4923","line":73,"column":7,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4798","line":126,"column":10,"nodeType":"4765","messageId":"4766","endLine":126,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":126,"column":17,"nodeType":"4765","messageId":"4766","endLine":126,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":162,"column":9,"nodeType":"4765","messageId":"4766","endLine":162,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":261,"column":21,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":262,"column":21,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":263,"column":21,"nodeType":"4765","messageId":"4766","endLine":263,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":264,"column":21,"nodeType":"4765","messageId":"4766","endLine":264,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":266,"column":25,"nodeType":"4765","messageId":"4766","endLine":266,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4795","line":14,"column":72,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":82},{"ruleId":"4763","severity":1,"message":"4924","line":15,"column":30,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":44},{"ruleId":"4763","severity":1,"message":"4779","line":37,"column":29,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":41},{"ruleId":"4763","severity":1,"message":"4771","line":70,"column":32,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":37},{"ruleId":"4763","severity":1,"message":"4772","line":70,"column":39,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":47},{"ruleId":"4763","severity":1,"message":"4773","line":71,"column":33,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":41},{"ruleId":"4763","severity":1,"message":"4774","line":72,"column":31,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4775","line":73,"column":41,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":51},{"ruleId":"4763","severity":1,"message":"4776","line":74,"column":32,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":36},{"ruleId":"4763","severity":1,"message":"4777","line":74,"column":38,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":45},{"ruleId":"4759","replacedBy":"4925"},{"ruleId":"4761","replacedBy":"4926"},{"ruleId":"4763","severity":1,"message":"4764","line":11,"column":7,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4767","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4768","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4769","line":4,"column":22,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4770","line":8,"column":3,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4771","line":62,"column":10,"nodeType":"4765","messageId":"4766","endLine":62,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":62,"column":17,"nodeType":"4765","messageId":"4766","endLine":62,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":63,"column":11,"nodeType":"4765","messageId":"4766","endLine":63,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":64,"column":9,"nodeType":"4765","messageId":"4766","endLine":64,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":65,"column":19,"nodeType":"4765","messageId":"4766","endLine":65,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":66,"column":10,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":66,"column":16,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4778","line":73,"column":10,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":75,"column":9,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4771","line":46,"column":10,"nodeType":"4765","messageId":"4766","endLine":46,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":46,"column":17,"nodeType":"4765","messageId":"4766","endLine":46,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":47,"column":11,"nodeType":"4765","messageId":"4766","endLine":47,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":48,"column":9,"nodeType":"4765","messageId":"4766","endLine":48,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":49,"column":19,"nodeType":"4765","messageId":"4766","endLine":49,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":50,"column":10,"nodeType":"4765","messageId":"4766","endLine":50,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":50,"column":16,"nodeType":"4765","messageId":"4766","endLine":50,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":36,"column":7,"nodeType":"4765","messageId":"4766","endLine":36,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":76,"column":10,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":76,"column":17,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":77,"column":11,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":78,"column":9,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":79,"column":19,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":41,"column":7,"nodeType":"4765","messageId":"4766","endLine":41,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":100,"column":10,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":100,"column":17,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":101,"column":11,"nodeType":"4765","messageId":"4766","endLine":101,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":102,"column":9,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":103,"column":19,"nodeType":"4765","messageId":"4766","endLine":103,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":104,"column":10,"nodeType":"4765","messageId":"4766","endLine":104,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":104,"column":16,"nodeType":"4765","messageId":"4766","endLine":104,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":44,"column":7,"nodeType":"4765","messageId":"4766","endLine":44,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":173,"column":10,"nodeType":"4765","messageId":"4766","endLine":173,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":173,"column":17,"nodeType":"4765","messageId":"4766","endLine":173,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":174,"column":11,"nodeType":"4765","messageId":"4766","endLine":174,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":175,"column":9,"nodeType":"4765","messageId":"4766","endLine":175,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":176,"column":19,"nodeType":"4765","messageId":"4766","endLine":176,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4835","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4836","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4837","line":7,"column":8,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4838","line":9,"column":8,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4839","line":11,"column":7,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4840","line":30,"column":9,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4841","line":31,"column":10,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4779","line":41,"column":9,"nodeType":"4765","messageId":"4766","endLine":41,"endColumn":21},{"ruleId":"4804","severity":1,"message":"4805","line":26,"column":3,"nodeType":"4806","messageId":"4807","endLine":26,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4808","line":86,"column":9,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":9,"column":3,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":11,"column":3,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4794","line":13,"column":3,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":11},{"ruleId":"4763","severity":1,"message":"4795","line":18,"column":3,"nodeType":"4765","messageId":"4766","endLine":18,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":22,"column":8,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":25,"column":8,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4797","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4798","line":84,"column":10,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":84,"column":17,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":120,"column":9,"nodeType":"4765","messageId":"4766","endLine":120,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":197,"column":21,"nodeType":"4765","messageId":"4766","endLine":197,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4802","line":208,"column":21,"nodeType":"4765","messageId":"4766","endLine":208,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":210,"column":25,"nodeType":"4765","messageId":"4766","endLine":210,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4833","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4834","line":3,"column":16,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4809","line":3,"column":8,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4810","line":4,"column":8,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":30},{"ruleId":"4763","severity":1,"message":"4825","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4832","line":2,"column":18,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":23},{"ruleId":"4829","severity":1,"message":"4830","line":3,"column":1,"nodeType":"4831","endLine":180,"endColumn":3},{"ruleId":"4763","severity":1,"message":"4786","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4767","line":2,"column":18,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4811","line":14,"column":8,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4812","line":87,"column":7,"nodeType":"4765","messageId":"4766","endLine":87,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4813","line":100,"column":7,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4814","line":115,"column":7,"nodeType":"4765","messageId":"4766","endLine":115,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4815","line":121,"column":7,"nodeType":"4765","messageId":"4766","endLine":121,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4816","line":130,"column":10,"nodeType":"4765","messageId":"4766","endLine":130,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4817","line":130,"column":26,"nodeType":"4765","messageId":"4766","endLine":130,"endColumn":43},{"ruleId":"4763","severity":1,"message":"4818","line":133,"column":10,"nodeType":"4765","messageId":"4766","endLine":133,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4819","line":137,"column":9,"nodeType":"4765","messageId":"4766","endLine":137,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4820","line":144,"column":9,"nodeType":"4765","messageId":"4766","endLine":144,"endColumn":18},{"ruleId":"4821","severity":1,"message":"4822","line":277,"column":13,"nodeType":"4823","endLine":277,"endColumn":57},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4767","line":1,"column":18,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4824","line":9,"column":10,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4767","line":1,"column":18,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4827","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":18},{"ruleId":"4821","severity":1,"message":"4822","line":31,"column":9,"nodeType":"4823","endLine":31,"endColumn":57},{"ruleId":"4763","severity":1,"message":"4828","line":117,"column":9,"nodeType":"4765","messageId":"4766","endLine":117,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4828","line":83,"column":9,"nodeType":"4765","messageId":"4766","endLine":83,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4826","line":48,"column":9,"nodeType":"4765","messageId":"4766","endLine":48,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4842","line":43,"column":9,"nodeType":"4765","messageId":"4766","endLine":43,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4895","line":11,"column":8,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4896","line":13,"column":8,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4897","line":25,"column":7,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":49,"column":7,"nodeType":"4765","messageId":"4766","endLine":49,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":100,"column":11,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":101,"column":9,"nodeType":"4765","messageId":"4766","endLine":101,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":102,"column":19,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4780","line":38,"column":9,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4781","line":39,"column":10,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":34,"column":7,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":123,"column":10,"nodeType":"4765","messageId":"4766","endLine":123,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":123,"column":17,"nodeType":"4765","messageId":"4766","endLine":123,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":124,"column":11,"nodeType":"4765","messageId":"4766","endLine":124,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":125,"column":9,"nodeType":"4765","messageId":"4766","endLine":125,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":126,"column":19,"nodeType":"4765","messageId":"4766","endLine":126,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":127,"column":10,"nodeType":"4765","messageId":"4766","endLine":127,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":127,"column":16,"nodeType":"4765","messageId":"4766","endLine":127,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":94,"column":7,"nodeType":"4765","messageId":"4766","endLine":94,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":100,"column":11,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":101,"column":9,"nodeType":"4765","messageId":"4766","endLine":101,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":102,"column":19,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":93,"column":7,"nodeType":"4765","messageId":"4766","endLine":93,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":99,"column":11,"nodeType":"4765","messageId":"4766","endLine":99,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":100,"column":9,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":101,"column":19,"nodeType":"4765","messageId":"4766","endLine":101,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":86,"column":7,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":93,"column":11,"nodeType":"4765","messageId":"4766","endLine":93,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":94,"column":9,"nodeType":"4765","messageId":"4766","endLine":94,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":95,"column":19,"nodeType":"4765","messageId":"4766","endLine":95,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":84,"column":7,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4871","line":89,"column":10,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4872","line":89,"column":16,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4773","line":91,"column":11,"nodeType":"4765","messageId":"4766","endLine":91,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":92,"column":9,"nodeType":"4765","messageId":"4766","endLine":92,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":93,"column":19,"nodeType":"4765","messageId":"4766","endLine":93,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":37,"column":7,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":68,"column":11,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":69,"column":9,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":70,"column":19,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4771","line":55,"column":10,"nodeType":"4765","messageId":"4766","endLine":55,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":56,"column":9,"nodeType":"4765","messageId":"4766","endLine":56,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4855","line":59,"column":9,"nodeType":"4765","messageId":"4766","endLine":59,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4825","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4834","line":1,"column":15,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4782","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4769","line":2,"column":22,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4780","line":14,"column":11,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4791","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4843","line":6,"column":8,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4844","line":7,"column":8,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4845","line":8,"column":8,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4846","line":10,"column":8,"nodeType":"4765","messageId":"4766","endLine":10,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4847","line":12,"column":8,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4848","line":33,"column":7,"nodeType":"4765","messageId":"4766","endLine":33,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4849","line":40,"column":7,"nodeType":"4765","messageId":"4766","endLine":40,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4850","line":45,"column":7,"nodeType":"4765","messageId":"4766","endLine":45,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4851","line":113,"column":11,"nodeType":"4765","messageId":"4766","endLine":113,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4852","line":123,"column":9,"nodeType":"4765","messageId":"4766","endLine":123,"endColumn":27},{"ruleId":"4763","severity":1,"message":"4873","line":12,"column":8,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4874","line":14,"column":8,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4875","line":33,"column":7,"nodeType":"4765","messageId":"4766","endLine":33,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4832","line":2,"column":18,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4894","line":1,"column":24,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4835","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4839","line":9,"column":7,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4840","line":28,"column":9,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4841","line":29,"column":10,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4833","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4834","line":3,"column":16,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4793","line":4,"column":3,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4794","line":5,"column":3,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":11},{"ruleId":"4763","severity":1,"message":"4876","line":6,"column":3,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4833","line":7,"column":3,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4787","line":8,"column":3,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4877","line":9,"column":3,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":8},{"ruleId":"4763","severity":1,"message":"4878","line":10,"column":3,"nodeType":"4765","messageId":"4766","endLine":10,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4834","line":11,"column":3,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4885","line":51,"column":10,"nodeType":"4765","messageId":"4766","endLine":51,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4886","line":53,"column":18,"nodeType":"4765","messageId":"4766","endLine":53,"endColumn":27},{"ruleId":"4763","severity":1,"message":"4887","line":79,"column":9,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":16},{"ruleId":"4888","severity":1,"message":"4889","line":103,"column":15,"nodeType":"4890","messageId":"4807","endLine":103,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4892","line":9,"column":7,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4792","line":2,"column":3,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4791","line":4,"column":3,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4879","line":7,"column":3,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":11},{"ruleId":"4763","severity":1,"message":"4836","line":8,"column":3,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4880","line":20,"column":7,"nodeType":"4765","messageId":"4766","endLine":20,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4848","line":29,"column":7,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4782","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4769","line":3,"column":22,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4785","line":7,"column":7,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4783","line":15,"column":8,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4885","line":51,"column":10,"nodeType":"4765","messageId":"4766","endLine":51,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4886","line":53,"column":18,"nodeType":"4765","messageId":"4766","endLine":53,"endColumn":27},{"ruleId":"4763","severity":1,"message":"4887","line":79,"column":9,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":16},{"ruleId":"4888","severity":1,"message":"4889","line":103,"column":15,"nodeType":"4890","messageId":"4807","endLine":103,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4796","line":17,"column":8,"nodeType":"4765","messageId":"4766","endLine":17,"endColumn":13},{"ruleId":"4888","severity":1,"message":"4889","line":76,"column":15,"nodeType":"4890","messageId":"4807","endLine":76,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4796","line":4,"column":8,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4825","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4873","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4881","line":10,"column":10,"nodeType":"4765","messageId":"4766","endLine":10,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4882","line":66,"column":10,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4883","line":66,"column":19,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4780","line":68,"column":9,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4779","line":69,"column":9,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4855","line":72,"column":9,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4864","line":73,"column":9,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4771","line":74,"column":10,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":74,"column":17,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":75,"column":11,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":76,"column":9,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4884","line":77,"column":10,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":77,"column":19,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":78,"column":16,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4893","line":4,"column":8,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":21},{"ruleId":"4821","severity":1,"message":"4822","line":32,"column":13,"nodeType":"4823","endLine":35,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4769","line":3,"column":22,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4856","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4793","line":8,"column":10,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4857","line":12,"column":8,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4858","line":14,"column":8,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4859","line":25,"column":10,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4860","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4861","line":28,"column":8,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4832","line":30,"column":33,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":38},{"ruleId":"4763","severity":1,"message":"4779","line":102,"column":7,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4862","line":189,"column":9,"nodeType":"4765","messageId":"4766","endLine":189,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4773","line":192,"column":11,"nodeType":"4765","messageId":"4766","endLine":192,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":193,"column":9,"nodeType":"4765","messageId":"4766","endLine":193,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":194,"column":19,"nodeType":"4765","messageId":"4766","endLine":194,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":195,"column":10,"nodeType":"4765","messageId":"4766","endLine":195,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":195,"column":16,"nodeType":"4765","messageId":"4766","endLine":195,"endColumn":23},{"ruleId":"4853","severity":1,"message":"4854","line":251,"column":19,"nodeType":"4823","endLine":251,"endColumn":80},{"ruleId":"4763","severity":1,"message":"4779","line":46,"column":7,"nodeType":"4765","messageId":"4766","endLine":46,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":70,"column":10,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":70,"column":17,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":71,"column":11,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":72,"column":9,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":73,"column":19,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":74,"column":10,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":74,"column":16,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4767","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":25},{"ruleId":"4853","severity":1,"message":"4854","line":119,"column":19,"nodeType":"4823","endLine":119,"endColumn":83},{"ruleId":"4763","severity":1,"message":"4779","line":68,"column":9,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4771","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":72,"column":17,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":73,"column":11,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":74,"column":9,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":75,"column":19,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4773","line":57,"column":11,"nodeType":"4765","messageId":"4766","endLine":57,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":58,"column":9,"nodeType":"4765","messageId":"4766","endLine":58,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":59,"column":19,"nodeType":"4765","messageId":"4766","endLine":59,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":60,"column":10,"nodeType":"4765","messageId":"4766","endLine":60,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":60,"column":16,"nodeType":"4765","messageId":"4766","endLine":60,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4863","line":24,"column":8,"nodeType":"4765","messageId":"4766","endLine":24,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":162,"column":9,"nodeType":"4765","messageId":"4766","endLine":162,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4855","line":165,"column":9,"nodeType":"4765","messageId":"4766","endLine":165,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4864","line":166,"column":9,"nodeType":"4765","messageId":"4766","endLine":166,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4771","line":167,"column":10,"nodeType":"4765","messageId":"4766","endLine":167,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":167,"column":17,"nodeType":"4765","messageId":"4766","endLine":167,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":168,"column":11,"nodeType":"4765","messageId":"4766","endLine":168,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":169,"column":9,"nodeType":"4765","messageId":"4766","endLine":169,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":170,"column":19,"nodeType":"4765","messageId":"4766","endLine":170,"endColumn":29},{"ruleId":"4865","severity":1,"message":"4866","line":194,"column":6,"nodeType":"4867","endLine":194,"endColumn":8,"suggestions":"4927"},{"ruleId":"4763","severity":1,"message":"4863","line":2,"column":8,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":42,"column":7,"nodeType":"4765","messageId":"4766","endLine":42,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":86,"column":10,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":86,"column":17,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":87,"column":11,"nodeType":"4765","messageId":"4766","endLine":87,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":88,"column":9,"nodeType":"4765","messageId":"4766","endLine":88,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":89,"column":19,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4869","line":8,"column":8,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4870","line":11,"column":8,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4779","line":106,"column":7,"nodeType":"4765","messageId":"4766","endLine":106,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":112,"column":11,"nodeType":"4765","messageId":"4766","endLine":112,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":113,"column":9,"nodeType":"4765","messageId":"4766","endLine":113,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":114,"column":19,"nodeType":"4765","messageId":"4766","endLine":114,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":106,"column":7,"nodeType":"4765","messageId":"4766","endLine":106,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":112,"column":11,"nodeType":"4765","messageId":"4766","endLine":112,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":113,"column":9,"nodeType":"4765","messageId":"4766","endLine":113,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":114,"column":19,"nodeType":"4765","messageId":"4766","endLine":114,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4779","line":94,"column":7,"nodeType":"4765","messageId":"4766","endLine":94,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":100,"column":11,"nodeType":"4765","messageId":"4766","endLine":100,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":101,"column":9,"nodeType":"4765","messageId":"4766","endLine":101,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":102,"column":19,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":9,"column":3,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":11,"column":3,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":18,"column":3,"nodeType":"4765","messageId":"4766","endLine":18,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":22,"column":8,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":25,"column":9,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":32,"column":24,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":114,"column":10,"nodeType":"4765","messageId":"4766","endLine":114,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":114,"column":17,"nodeType":"4765","messageId":"4766","endLine":114,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":150,"column":9,"nodeType":"4765","messageId":"4766","endLine":150,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4907","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4802","line":265,"column":21,"nodeType":"4765","messageId":"4766","endLine":265,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":267,"column":25,"nodeType":"4765","messageId":"4766","endLine":267,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":34,"column":7,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":133,"column":10,"nodeType":"4765","messageId":"4766","endLine":133,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":133,"column":17,"nodeType":"4765","messageId":"4766","endLine":133,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":134,"column":11,"nodeType":"4765","messageId":"4766","endLine":134,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":135,"column":9,"nodeType":"4765","messageId":"4766","endLine":135,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":136,"column":19,"nodeType":"4765","messageId":"4766","endLine":136,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":137,"column":10,"nodeType":"4765","messageId":"4766","endLine":137,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":137,"column":16,"nodeType":"4765","messageId":"4766","endLine":137,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":74,"column":10,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":74,"column":17,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":75,"column":11,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":76,"column":9,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":77,"column":19,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":78,"column":16,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":34,"column":7,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":133,"column":10,"nodeType":"4765","messageId":"4766","endLine":133,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":133,"column":17,"nodeType":"4765","messageId":"4766","endLine":133,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":134,"column":11,"nodeType":"4765","messageId":"4766","endLine":134,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":135,"column":9,"nodeType":"4765","messageId":"4766","endLine":135,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":136,"column":19,"nodeType":"4765","messageId":"4766","endLine":136,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":137,"column":10,"nodeType":"4765","messageId":"4766","endLine":137,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":137,"column":16,"nodeType":"4765","messageId":"4766","endLine":137,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":21,"column":3,"nodeType":"4765","messageId":"4766","endLine":21,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":25,"column":8,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":28,"column":8,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4903","line":29,"column":8,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":35,"column":24,"nodeType":"4765","messageId":"4766","endLine":35,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":127,"column":10,"nodeType":"4765","messageId":"4766","endLine":127,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":127,"column":17,"nodeType":"4765","messageId":"4766","endLine":127,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":163,"column":9,"nodeType":"4765","messageId":"4766","endLine":163,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":256,"column":19,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4904","line":258,"column":19,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4905","line":259,"column":19,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4906","line":260,"column":19,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4907","line":261,"column":19,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4908","line":262,"column":19,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4909","line":263,"column":19,"nodeType":"4765","messageId":"4766","endLine":263,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4910","line":264,"column":19,"nodeType":"4765","messageId":"4766","endLine":264,"endColumn":27},{"ruleId":"4763","severity":1,"message":"4911","line":265,"column":19,"nodeType":"4765","messageId":"4766","endLine":265,"endColumn":33},{"ruleId":"4763","severity":1,"message":"4912","line":266,"column":19,"nodeType":"4765","messageId":"4766","endLine":266,"endColumn":30},{"ruleId":"4763","severity":1,"message":"4802","line":267,"column":19,"nodeType":"4765","messageId":"4766","endLine":267,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4803","line":269,"column":23,"nodeType":"4765","messageId":"4766","endLine":269,"endColumn":37},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":39,"column":7,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":68,"column":10,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":68,"column":17,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":69,"column":11,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":70,"column":9,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":71,"column":19,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":72,"column":16,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":21,"column":3,"nodeType":"4765","messageId":"4766","endLine":21,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":25,"column":8,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":28,"column":9,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":29,"column":8,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":35,"column":24,"nodeType":"4765","messageId":"4766","endLine":35,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":123,"column":10,"nodeType":"4765","messageId":"4766","endLine":123,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":123,"column":17,"nodeType":"4765","messageId":"4766","endLine":123,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":159,"column":9,"nodeType":"4765","messageId":"4766","endLine":159,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":261,"column":21,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":262,"column":21,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":263,"column":21,"nodeType":"4765","messageId":"4766","endLine":263,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":264,"column":21,"nodeType":"4765","messageId":"4766","endLine":264,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":266,"column":25,"nodeType":"4765","messageId":"4766","endLine":266,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":9,"column":3,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":11,"column":3,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":18,"column":3,"nodeType":"4765","messageId":"4766","endLine":18,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":22,"column":8,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":25,"column":9,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":32,"column":24,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":108,"column":10,"nodeType":"4765","messageId":"4766","endLine":108,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":108,"column":17,"nodeType":"4765","messageId":"4766","endLine":108,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":144,"column":9,"nodeType":"4765","messageId":"4766","endLine":144,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":241,"column":21,"nodeType":"4765","messageId":"4766","endLine":241,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":243,"column":21,"nodeType":"4765","messageId":"4766","endLine":243,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":244,"column":21,"nodeType":"4765","messageId":"4766","endLine":244,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":245,"column":21,"nodeType":"4765","messageId":"4766","endLine":245,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":246,"column":21,"nodeType":"4765","messageId":"4766","endLine":246,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":247,"column":21,"nodeType":"4765","messageId":"4766","endLine":247,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":248,"column":21,"nodeType":"4765","messageId":"4766","endLine":248,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":249,"column":21,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":250,"column":21,"nodeType":"4765","messageId":"4766","endLine":250,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":254,"column":25,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":39,"column":7,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":71,"column":10,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":71,"column":17,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":72,"column":11,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":73,"column":9,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":74,"column":19,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":75,"column":10,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":75,"column":16,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":65,"column":10,"nodeType":"4765","messageId":"4766","endLine":65,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":65,"column":17,"nodeType":"4765","messageId":"4766","endLine":65,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":66,"column":11,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":67,"column":9,"nodeType":"4765","messageId":"4766","endLine":67,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":68,"column":19,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":69,"column":10,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":69,"column":16,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":72,"column":17,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":73,"column":11,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":74,"column":9,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":75,"column":19,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":76,"column":10,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":76,"column":16,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":21,"column":3,"nodeType":"4765","messageId":"4766","endLine":21,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":25,"column":8,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":28,"column":8,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4903","line":29,"column":8,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":35,"column":24,"nodeType":"4765","messageId":"4766","endLine":35,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":110,"column":10,"nodeType":"4765","messageId":"4766","endLine":110,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":110,"column":17,"nodeType":"4765","messageId":"4766","endLine":110,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":146,"column":9,"nodeType":"4765","messageId":"4766","endLine":146,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":249,"column":19,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4904","line":251,"column":19,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4905","line":252,"column":19,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4906","line":253,"column":19,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4907","line":254,"column":19,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4908","line":255,"column":19,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4909","line":256,"column":19,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":24},{"ruleId":"4763","severity":1,"message":"4910","line":257,"column":19,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":27},{"ruleId":"4763","severity":1,"message":"4911","line":258,"column":19,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":33},{"ruleId":"4763","severity":1,"message":"4912","line":259,"column":19,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":30},{"ruleId":"4763","severity":1,"message":"4802","line":260,"column":19,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4803","line":262,"column":23,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":37},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":13,"column":3,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":22,"column":3,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":29,"column":9,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":31,"column":8,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4916","line":36,"column":10,"nodeType":"4765","messageId":"4766","endLine":36,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4913","line":36,"column":34,"nodeType":"4765","messageId":"4766","endLine":36,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4798","line":110,"column":10,"nodeType":"4765","messageId":"4766","endLine":110,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":110,"column":17,"nodeType":"4765","messageId":"4766","endLine":110,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":146,"column":9,"nodeType":"4765","messageId":"4766","endLine":146,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":249,"column":21,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":262,"column":25,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":35,"column":7,"nodeType":"4765","messageId":"4766","endLine":35,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":102,"column":11,"nodeType":"4765","messageId":"4766","endLine":102,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":103,"column":9,"nodeType":"4765","messageId":"4766","endLine":103,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":104,"column":19,"nodeType":"4765","messageId":"4766","endLine":104,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":105,"column":10,"nodeType":"4765","messageId":"4766","endLine":105,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":105,"column":16,"nodeType":"4765","messageId":"4766","endLine":105,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":42,"column":7,"nodeType":"4765","messageId":"4766","endLine":42,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":86,"column":10,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":86,"column":17,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":87,"column":11,"nodeType":"4765","messageId":"4766","endLine":87,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":88,"column":9,"nodeType":"4765","messageId":"4766","endLine":88,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":89,"column":19,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":74,"column":10,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":74,"column":17,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":75,"column":11,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":76,"column":9,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":77,"column":19,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":78,"column":16,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":39,"column":7,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":68,"column":10,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":68,"column":17,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":69,"column":11,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":70,"column":9,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":71,"column":19,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":72,"column":16,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":39,"column":7,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":71,"column":10,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":71,"column":17,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":72,"column":11,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":73,"column":9,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":74,"column":19,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":75,"column":10,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":75,"column":16,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":65,"column":10,"nodeType":"4765","messageId":"4766","endLine":65,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":65,"column":17,"nodeType":"4765","messageId":"4766","endLine":65,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":66,"column":11,"nodeType":"4765","messageId":"4766","endLine":66,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":67,"column":9,"nodeType":"4765","messageId":"4766","endLine":67,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":68,"column":19,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":69,"column":10,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":69,"column":16,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":72,"column":17,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":73,"column":11,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":74,"column":9,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":75,"column":19,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":76,"column":10,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":76,"column":16,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4825","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4891","line":1,"column":23,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4787","line":1,"column":28,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4873","line":1,"column":34,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":44},{"ruleId":"4763","severity":1,"message":"4834","line":1,"column":46,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":52},{"ruleId":"4763","severity":1,"message":"4835","line":2,"column":10,"nodeType":"4765","messageId":"4766","endLine":2,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4836","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4837","line":7,"column":8,"nodeType":"4765","messageId":"4766","endLine":7,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4838","line":9,"column":8,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4839","line":11,"column":7,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4840","line":30,"column":9,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4841","line":31,"column":10,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4779","line":41,"column":9,"nodeType":"4765","messageId":"4766","endLine":41,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4833","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4834","line":3,"column":16,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4795","line":14,"column":72,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":82},{"ruleId":"4763","severity":1,"message":"4924","line":15,"column":30,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":44},{"ruleId":"4763","severity":1,"message":"4779","line":37,"column":29,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":41},{"ruleId":"4763","severity":1,"message":"4771","line":70,"column":32,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":37},{"ruleId":"4763","severity":1,"message":"4772","line":70,"column":39,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":47},{"ruleId":"4763","severity":1,"message":"4773","line":71,"column":33,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":41},{"ruleId":"4763","severity":1,"message":"4774","line":72,"column":31,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4775","line":73,"column":41,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":51},{"ruleId":"4763","severity":1,"message":"4776","line":74,"column":32,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":36},{"ruleId":"4763","severity":1,"message":"4777","line":74,"column":38,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":45},{"ruleId":"4763","severity":1,"message":"4858","line":13,"column":8,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4795","line":14,"column":10,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4779","line":37,"column":7,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":78,"column":17,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":79,"column":11,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":80,"column":9,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":81,"column":19,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":82,"column":10,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":82,"column":16,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4858","line":13,"column":8,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4795","line":14,"column":10,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4779","line":37,"column":7,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":78,"column":17,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":79,"column":11,"nodeType":"4765","messageId":"4766","endLine":79,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":80,"column":9,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":81,"column":19,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":82,"column":10,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":82,"column":16,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":21,"column":3,"nodeType":"4765","messageId":"4766","endLine":21,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":25,"column":8,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":28,"column":9,"nodeType":"4765","messageId":"4766","endLine":28,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":29,"column":8,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4798","line":116,"column":10,"nodeType":"4765","messageId":"4766","endLine":116,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":116,"column":17,"nodeType":"4765","messageId":"4766","endLine":116,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":152,"column":9,"nodeType":"4765","messageId":"4766","endLine":152,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":261,"column":21,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":262,"column":21,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":263,"column":21,"nodeType":"4765","messageId":"4766","endLine":263,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":264,"column":21,"nodeType":"4765","messageId":"4766","endLine":264,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":265,"column":21,"nodeType":"4765","messageId":"4766","endLine":265,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":266,"column":21,"nodeType":"4765","messageId":"4766","endLine":266,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":267,"column":21,"nodeType":"4765","messageId":"4766","endLine":267,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":268,"column":21,"nodeType":"4765","messageId":"4766","endLine":268,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":269,"column":21,"nodeType":"4765","messageId":"4766","endLine":269,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":271,"column":25,"nodeType":"4765","messageId":"4766","endLine":271,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4917","line":5,"column":10,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4789","line":9,"column":8,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":10,"column":18,"nodeType":"4765","messageId":"4766","endLine":10,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4918","line":10,"column":30,"nodeType":"4765","messageId":"4766","endLine":10,"endColumn":41},{"ruleId":"4763","severity":1,"message":"4791","line":13,"column":3,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":22,"column":3,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4919","line":26,"column":3,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4837","line":27,"column":3,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":29,"column":8,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":32,"column":9,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":33,"column":8,"nodeType":"4765","messageId":"4766","endLine":33,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":34,"column":8,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4920","line":39,"column":10,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4921","line":39,"column":18,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4913","line":39,"column":24,"nodeType":"4765","messageId":"4766","endLine":39,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4922","line":40,"column":18,"nodeType":"4765","messageId":"4766","endLine":40,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4769","line":42,"column":22,"nodeType":"4765","messageId":"4766","endLine":42,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4923","line":73,"column":7,"nodeType":"4765","messageId":"4766","endLine":73,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4798","line":126,"column":10,"nodeType":"4765","messageId":"4766","endLine":126,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":126,"column":17,"nodeType":"4765","messageId":"4766","endLine":126,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":162,"column":9,"nodeType":"4765","messageId":"4766","endLine":162,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":261,"column":21,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":262,"column":21,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":263,"column":21,"nodeType":"4765","messageId":"4766","endLine":263,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":264,"column":21,"nodeType":"4765","messageId":"4766","endLine":264,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":266,"column":25,"nodeType":"4765","messageId":"4766","endLine":266,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":17,"column":3,"nodeType":"4765","messageId":"4766","endLine":17,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":23,"column":3,"nodeType":"4765","messageId":"4766","endLine":23,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":30,"column":9,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":31,"column":8,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":32,"column":8,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":37,"column":24,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":121,"column":10,"nodeType":"4765","messageId":"4766","endLine":121,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":121,"column":17,"nodeType":"4765","messageId":"4766","endLine":121,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":157,"column":9,"nodeType":"4765","messageId":"4766","endLine":157,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":261,"column":21,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":262,"column":21,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":263,"column":21,"nodeType":"4765","messageId":"4766","endLine":263,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":264,"column":21,"nodeType":"4765","messageId":"4766","endLine":264,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":265,"column":21,"nodeType":"4765","messageId":"4766","endLine":265,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":266,"column":21,"nodeType":"4765","messageId":"4766","endLine":266,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":267,"column":21,"nodeType":"4765","messageId":"4766","endLine":267,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":268,"column":21,"nodeType":"4765","messageId":"4766","endLine":268,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":269,"column":21,"nodeType":"4765","messageId":"4766","endLine":269,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":271,"column":25,"nodeType":"4765","messageId":"4766","endLine":271,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":68,"column":10,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":68,"column":17,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":69,"column":11,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":70,"column":9,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":71,"column":19,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":72,"column":16,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":74,"column":10,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":74,"column":17,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":75,"column":11,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":76,"column":9,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":77,"column":19,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":78,"column":16,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":9,"column":3,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":11,"column":3,"nodeType":"4765","messageId":"4766","endLine":11,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":12,"column":3,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":18,"column":3,"nodeType":"4765","messageId":"4766","endLine":18,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":22,"column":8,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":25,"column":9,"nodeType":"4765","messageId":"4766","endLine":25,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":32,"column":24,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":111,"column":10,"nodeType":"4765","messageId":"4766","endLine":111,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":111,"column":17,"nodeType":"4765","messageId":"4766","endLine":111,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":147,"column":9,"nodeType":"4765","messageId":"4766","endLine":147,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":248,"column":21,"nodeType":"4765","messageId":"4766","endLine":248,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":250,"column":21,"nodeType":"4765","messageId":"4766","endLine":250,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":261,"column":25,"nodeType":"4765","messageId":"4766","endLine":261,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4915","line":8,"column":8,"nodeType":"4765","messageId":"4766","endLine":8,"endColumn":12},{"ruleId":"4763","severity":1,"message":"4791","line":14,"column":3,"nodeType":"4765","messageId":"4766","endLine":14,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":17,"column":3,"nodeType":"4765","messageId":"4766","endLine":17,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":23,"column":3,"nodeType":"4765","messageId":"4766","endLine":23,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":27,"column":8,"nodeType":"4765","messageId":"4766","endLine":27,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":30,"column":9,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":31,"column":8,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":32,"column":8,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":37,"column":24,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4798","line":117,"column":10,"nodeType":"4765","messageId":"4766","endLine":117,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":117,"column":17,"nodeType":"4765","messageId":"4766","endLine":117,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":153,"column":9,"nodeType":"4765","messageId":"4766","endLine":153,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":245,"column":21,"nodeType":"4765","messageId":"4766","endLine":245,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":247,"column":21,"nodeType":"4765","messageId":"4766","endLine":247,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":248,"column":21,"nodeType":"4765","messageId":"4766","endLine":248,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":249,"column":21,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":250,"column":21,"nodeType":"4765","messageId":"4766","endLine":250,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":258,"column":25,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":74,"column":10,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":74,"column":17,"nodeType":"4765","messageId":"4766","endLine":74,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":75,"column":11,"nodeType":"4765","messageId":"4766","endLine":75,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":76,"column":9,"nodeType":"4765","messageId":"4766","endLine":76,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":77,"column":19,"nodeType":"4765","messageId":"4766","endLine":77,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":78,"column":10,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":78,"column":16,"nodeType":"4765","messageId":"4766","endLine":78,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":81,"column":10,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":81,"column":17,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":82,"column":11,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":83,"column":9,"nodeType":"4765","messageId":"4766","endLine":83,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":84,"column":19,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":85,"column":10,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":85,"column":16,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":81,"column":10,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":81,"column":17,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":82,"column":11,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":83,"column":9,"nodeType":"4765","messageId":"4766","endLine":83,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":84,"column":19,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":85,"column":10,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":85,"column":16,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4779","line":34,"column":7,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":85,"column":10,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":85,"column":17,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":86,"column":11,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":87,"column":9,"nodeType":"4765","messageId":"4766","endLine":87,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":88,"column":19,"nodeType":"4765","messageId":"4766","endLine":88,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":89,"column":10,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":89,"column":16,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":13,"column":3,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":22,"column":3,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":29,"column":9,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":31,"column":8,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":36,"column":24,"nodeType":"4765","messageId":"4766","endLine":36,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4914","line":37,"column":10,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4798","line":119,"column":10,"nodeType":"4765","messageId":"4766","endLine":119,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":119,"column":17,"nodeType":"4765","messageId":"4766","endLine":119,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":155,"column":9,"nodeType":"4765","messageId":"4766","endLine":155,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":249,"column":21,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":259,"column":21,"nodeType":"4765","messageId":"4766","endLine":259,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":260,"column":21,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":262,"column":25,"nodeType":"4765","messageId":"4766","endLine":262,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4786","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4787","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4788","line":4,"column":10,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4789","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4790","line":6,"column":18,"nodeType":"4765","messageId":"4766","endLine":6,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4791","line":13,"column":3,"nodeType":"4765","messageId":"4766","endLine":13,"endColumn":7},{"ruleId":"4763","severity":1,"message":"4792","line":15,"column":3,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4793","line":16,"column":3,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":9},{"ruleId":"4763","severity":1,"message":"4795","line":22,"column":3,"nodeType":"4765","messageId":"4766","endLine":22,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4768","line":26,"column":8,"nodeType":"4765","messageId":"4766","endLine":26,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4796","line":29,"column":9,"nodeType":"4765","messageId":"4766","endLine":29,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4903","line":30,"column":8,"nodeType":"4765","messageId":"4766","endLine":30,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4797","line":31,"column":8,"nodeType":"4765","messageId":"4766","endLine":31,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4913","line":36,"column":24,"nodeType":"4765","messageId":"4766","endLine":36,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4914","line":37,"column":10,"nodeType":"4765","messageId":"4766","endLine":37,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4798","line":117,"column":10,"nodeType":"4765","messageId":"4766","endLine":117,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4799","line":117,"column":17,"nodeType":"4765","messageId":"4766","endLine":117,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4800","line":153,"column":9,"nodeType":"4765","messageId":"4766","endLine":153,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4801","line":247,"column":21,"nodeType":"4765","messageId":"4766","endLine":247,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4904","line":249,"column":21,"nodeType":"4765","messageId":"4766","endLine":249,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4905","line":250,"column":21,"nodeType":"4765","messageId":"4766","endLine":250,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4906","line":251,"column":21,"nodeType":"4765","messageId":"4766","endLine":251,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4907","line":252,"column":21,"nodeType":"4765","messageId":"4766","endLine":252,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4908","line":253,"column":21,"nodeType":"4765","messageId":"4766","endLine":253,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4909","line":254,"column":21,"nodeType":"4765","messageId":"4766","endLine":254,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4910","line":255,"column":21,"nodeType":"4765","messageId":"4766","endLine":255,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4911","line":256,"column":21,"nodeType":"4765","messageId":"4766","endLine":256,"endColumn":35},{"ruleId":"4763","severity":1,"message":"4912","line":257,"column":21,"nodeType":"4765","messageId":"4766","endLine":257,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4802","line":258,"column":21,"nodeType":"4765","messageId":"4766","endLine":258,"endColumn":31},{"ruleId":"4763","severity":1,"message":"4803","line":260,"column":25,"nodeType":"4765","messageId":"4766","endLine":260,"endColumn":39},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":40,"column":7,"nodeType":"4765","messageId":"4766","endLine":40,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":80,"column":10,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":80,"column":17,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":81,"column":11,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":82,"column":9,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":83,"column":19,"nodeType":"4765","messageId":"4766","endLine":83,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":84,"column":10,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":84,"column":16,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":38,"column":7,"nodeType":"4765","messageId":"4766","endLine":38,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":68,"column":10,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":68,"column":17,"nodeType":"4765","messageId":"4766","endLine":68,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":69,"column":11,"nodeType":"4765","messageId":"4766","endLine":69,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":70,"column":9,"nodeType":"4765","messageId":"4766","endLine":70,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":71,"column":19,"nodeType":"4765","messageId":"4766","endLine":71,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":72,"column":10,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":72,"column":16,"nodeType":"4765","messageId":"4766","endLine":72,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4796","line":4,"column":8,"nodeType":"4765","messageId":"4766","endLine":4,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":34,"column":7,"nodeType":"4765","messageId":"4766","endLine":34,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":85,"column":10,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":85,"column":17,"nodeType":"4765","messageId":"4766","endLine":85,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":86,"column":11,"nodeType":"4765","messageId":"4766","endLine":86,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":87,"column":9,"nodeType":"4765","messageId":"4766","endLine":87,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":88,"column":19,"nodeType":"4765","messageId":"4766","endLine":88,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":89,"column":10,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":89,"column":16,"nodeType":"4765","messageId":"4766","endLine":89,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4900","line":5,"column":8,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":28},{"ruleId":"4763","severity":1,"message":"4901","line":15,"column":10,"nodeType":"4765","messageId":"4766","endLine":15,"endColumn":26},{"ruleId":"4763","severity":1,"message":"4902","line":16,"column":10,"nodeType":"4765","messageId":"4766","endLine":16,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4779","line":40,"column":7,"nodeType":"4765","messageId":"4766","endLine":40,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":80,"column":10,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":80,"column":17,"nodeType":"4765","messageId":"4766","endLine":80,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":81,"column":11,"nodeType":"4765","messageId":"4766","endLine":81,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":82,"column":9,"nodeType":"4765","messageId":"4766","endLine":82,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":83,"column":19,"nodeType":"4765","messageId":"4766","endLine":83,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":84,"column":10,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":84,"column":16,"nodeType":"4765","messageId":"4766","endLine":84,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4793","line":3,"column":10,"nodeType":"4765","messageId":"4766","endLine":3,"endColumn":16},{"ruleId":"4763","severity":1,"message":"4898","line":17,"column":10,"nodeType":"4765","messageId":"4766","endLine":17,"endColumn":18},{"ruleId":"4763","severity":1,"message":"4899","line":18,"column":8,"nodeType":"4765","messageId":"4766","endLine":18,"endColumn":21},{"ruleId":"4763","severity":1,"message":"4779","line":45,"column":7,"nodeType":"4765","messageId":"4766","endLine":45,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4773","line":226,"column":11,"nodeType":"4765","messageId":"4766","endLine":226,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":227,"column":9,"nodeType":"4765","messageId":"4766","endLine":227,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":228,"column":19,"nodeType":"4765","messageId":"4766","endLine":228,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":229,"column":10,"nodeType":"4765","messageId":"4766","endLine":229,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":229,"column":16,"nodeType":"4765","messageId":"4766","endLine":229,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4779","line":42,"column":7,"nodeType":"4765","messageId":"4766","endLine":42,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4771","line":355,"column":10,"nodeType":"4765","messageId":"4766","endLine":355,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4772","line":355,"column":17,"nodeType":"4765","messageId":"4766","endLine":355,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4773","line":356,"column":11,"nodeType":"4765","messageId":"4766","endLine":356,"endColumn":19},{"ruleId":"4763","severity":1,"message":"4774","line":357,"column":9,"nodeType":"4765","messageId":"4766","endLine":357,"endColumn":17},{"ruleId":"4763","severity":1,"message":"4775","line":358,"column":19,"nodeType":"4765","messageId":"4766","endLine":358,"endColumn":29},{"ruleId":"4763","severity":1,"message":"4776","line":359,"column":10,"nodeType":"4765","messageId":"4766","endLine":359,"endColumn":14},{"ruleId":"4763","severity":1,"message":"4777","line":359,"column":16,"nodeType":"4765","messageId":"4766","endLine":359,"endColumn":23},{"ruleId":"4763","severity":1,"message":"4767","line":1,"column":17,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":25},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4768","line":1,"column":10,"nodeType":"4765","messageId":"4766","endLine":1,"endColumn":15},{"ruleId":"4763","severity":1,"message":"4782","line":5,"column":10,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":20},{"ruleId":"4763","severity":1,"message":"4769","line":5,"column":22,"nodeType":"4765","messageId":"4766","endLine":5,"endColumn":32},{"ruleId":"4763","severity":1,"message":"4783","line":9,"column":8,"nodeType":"4765","messageId":"4766","endLine":9,"endColumn":22},{"ruleId":"4763","severity":1,"message":"4784","line":12,"column":8,"nodeType":"4765","messageId":"4766","endLine":12,"endColumn":13},{"ruleId":"4763","severity":1,"message":"4785","line":32,"column":7,"nodeType":"4765","messageId":"4766","endLine":32,"endColumn":16},"no-native-reassign",["4928"],"no-negated-in-lhs",["4929"],"no-unused-vars","'isValidToken' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Stack' is defined but never used.","'SimpleCard' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'register' is assigned a value but never used.","'navigate' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'note' is assigned a value but never used.","'setNote' is assigned a value but never used.","'searchResults' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'classes' is assigned a value but never used.","'data5' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.","'Container' is assigned a value but never used.","'useRef' is defined but never used.","'Icon' is defined but never used.","'sentenceCase' is defined but never used.","'plusFill' is defined but never used.","'RouterLink' is defined but never used.","'Card' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'Label' is defined but never used.","'USERLIST' is defined but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'id' is assigned a value but never used.","'isVerified' is assigned a value but never used.","'isItemSelected' is assigned a value but never used.","no-dupe-keys","Duplicate key 'boxShadow'.","ObjectExpression","unexpected","'handleSidenavToggle' is assigned a value but never used.","'SecondarySidebarContent' is defined but never used.","'SecondarySidebarToggle' is defined but never used.","'CustomizedDialogs' is defined but never used.","'DialogTitle1' is assigned a value but never used.","'DialogTitle' is assigned a value but never used.","'DialogContent' is assigned a value but never used.","'DialogActions' is assigned a value but never used.","'premiumContent' is assigned a value but never used.","'setPremiumContent' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'deleterow' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'alpha' is defined but never used.","'Box' is defined but never used.","'handleClickOpen1' is assigned a value but never used.","'MatxLogo' is defined but never used.","'textColor' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Space' is defined but never used.","'Grid' is defined but never used.","'styled' is defined but never used.","'Theme' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'names' is assigned a value but never used.","'theme' is assigned a value but never used.","'personName' is assigned a value but never used.","'hint' is assigned a value but never used.","'Campaigns' is defined but never used.","'DoughnutChart' is defined but never used.","'RowCards' is defined but never used.","'StatCards2' is defined but never used.","'UpgradeCard' is defined but never used.","'Title' is assigned a value but never used.","'SubTitle' is assigned a value but never used.","'H4' is assigned a value but never used.","'palette' is assigned a value but never used.","'handleChangeButton' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'handleChange1' is assigned a value but never used.","'SimpleRadio' is defined but never used.","'SimpleForms' is defined but never used.","'Singleimage' is defined but never used.","'NavLink' is defined but never used.","'eyeFill' is defined but never used.","'eyeOffFill' is defined but never used.","'handleimage' is assigned a value but never used.","'axios' is defined but never used.","'handleChange2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBrands'. Either include it or remove the dependency array.","ArrayExpression",["4930"],"'DDbutton' is defined but never used.","'Appeditor' is defined but never used.","'hide' is assigned a value but never used.","'togglehide' is assigned a value but never used.","'IconButton' is defined but never used.","'AddIcon' is defined but never used.","'displayedOptions' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'MenuItem' is defined but never used.","'CardHeader' is assigned a value but never used.","'LoadingButton' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'loading' is assigned a value but never used.","'showtable' is assigned a value but never used.","'setValues' is assigned a value but never used.","'adddata' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'Fab' is defined but never used.","'GreenRadio' is assigned a value but never used.","'DialogActions' is defined but never used.","'Chip' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'RadioRoot' is assigned a value but never used.","'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'AutocompleteComboNew' is defined but never used.","'TextareaAutosize' is defined but never used.","'min' is defined but never used.","'Scrollbar' is defined but never used.","'unit' is assigned a value but never used.","'cost' is assigned a value but never used.","'price' is assigned a value but never used.","'image' is assigned a value but never used.","'code' is assigned a value but never used.","'brand' is assigned a value but never used.","'quantity' is assigned a value but never used.","'alert_quantity' is assigned a value but never used.","'category_id' is assigned a value but never used.","'Print' is defined but never used.","'Tab' is defined but never used.","'Link' is defined but never used.","'CheckBox' is defined but never used.","'makeStyles' is defined but never used.","'useNavigate' is defined but never used.","'InputBase' is defined but never used.","'Delete' is defined but never used.","'Edit' is defined but never used.","'ToastContainer' is defined but never used.","'showtoast' is assigned a value but never used.","'Fileattachment' is defined but never used.",["4928"],["4929"],["4931"],"no-global-assign","no-unsafe-negation",{"desc":"4932","fix":"4933"},{"desc":"4932","fix":"4934"},"Update the dependencies array to be: [getBrands]",{"range":"4935","text":"4936"},{"range":"4937","text":"4936"},[6380,6382],"[getBrands]",[6380,6382]]